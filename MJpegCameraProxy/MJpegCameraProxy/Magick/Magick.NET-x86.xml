<?xml version="1.0"?>
<doc>
    <assembly>
        "Magick.NET"
    </assembly>
    <members>
        <member name="M:ImageMagick.MagickImageInfo.ReadCollection(System.IO.Stream)">
==========================================================================================
<summary>
Read basic information about an image with multiple frames/pages.
</summary><param name="stream">The stream to read the image data from.</param><exception cref="T:ImageMagick.MagickException" /></member>
        <member name="M:ImageMagick.MagickImageInfo.ReadCollection(System.String)">
==========================================================================================
<summary>
Read basic information about an image with multiple frames/pages.
</summary><param name="fileName">The fully qualified name of the image file, or the relative image file name.</param><exception cref="T:ImageMagick.MagickException" /></member>
        <member name="M:ImageMagick.MagickImageInfo.ReadCollection(System.Byte[])">
==========================================================================================
<summary>
Read basic information about an image with multiple frames/pages.
</summary><param name="data">The byte array to read the information from.</param><exception cref="T:ImageMagick.MagickException" /></member>
        <member name="M:ImageMagick.MagickImageInfo.Read(System.IO.Stream)">
==========================================================================================
<summary>
Read basic information about an image.
</summary><param name="stream">The stream to read the image data from.</param><exception cref="T:ImageMagick.MagickException" /></member>
        <member name="M:ImageMagick.MagickImageInfo.Read(System.String)">
==========================================================================================
<summary>
Read basic information about an image.
</summary><param name="fileName">The fully qualified name of the image file, or the relative image file name.</param><exception cref="T:ImageMagick.MagickException" /></member>
        <member name="M:ImageMagick.MagickImageInfo.Read(System.Byte[])">
==========================================================================================
<summary>
Read basic information about an image.
</summary><param name="data">The byte array to read the information from.</param><exception cref="T:ImageMagick.MagickException" /></member>
        <member name="M:ImageMagick.MagickImageInfo.GetHashCode">
==========================================================================================
<summary>
Servers as a hash of this type.
</summary></member>
        <member name="M:ImageMagick.MagickImageInfo.Equals(ImageMagick.MagickImageInfo)">
==========================================================================================
<summary>
Determines whether the specified geometry is equal to the current image information.
</summary><param name="other">The image to compare this image information with.</param></member>
        <member name="M:ImageMagick.MagickImageInfo.Equals(System.Object)">
==========================================================================================
<summary>
Determines whether the specified object is equal to the current image information.
</summary><param name="obj">The object to compare this image information with.</param></member>
        <member name="M:ImageMagick.MagickImageInfo.CompareTo(ImageMagick.MagickImageInfo)">
==========================================================================================
<summary>
Compares the current instance with another object of the same type.
</summary><param name="other">The object to compare this image information with.</param></member>
        <member name="P:ImageMagick.MagickImageInfo.Width">
==========================================================================================
<summary>
Height of the image.
</summary></member>
        <member name="P:ImageMagick.MagickImageInfo.ResolutionY">
==========================================================================================
<summary>
The Y resolution of the image.
</summary></member>
        <member name="P:ImageMagick.MagickImageInfo.ResolutionX">
==========================================================================================
<summary>
The X resolution of the image.
</summary></member>
        <member name="P:ImageMagick.MagickImageInfo.Height">
==========================================================================================
<summary>
Height of the image.
</summary></member>
        <member name="P:ImageMagick.MagickImageInfo.Format">
==========================================================================================
<summary>
The format of the image.
</summary></member>
        <member name="P:ImageMagick.MagickImageInfo.FileName">
==========================================================================================
<summary>
Original file name of the image (only available if read from disk).
</summary></member>
        <member name="P:ImageMagick.MagickImageInfo.ColorSpace">
==========================================================================================
<summary>
Color space of the image.
</summary></member>
        <member name="M:ImageMagick.MagickImageInfo.#ctor(System.IO.Stream)">
==========================================================================================
<summary>
Initializes a new instance of the MagickImageInfo class using the specified stream.
</summary><param name="stream">The stream to read the image data from.</param><exception cref="T:ImageMagick.MagickException" /></member>
        <member name="M:ImageMagick.MagickImageInfo.#ctor(System.String)">
==========================================================================================
<summary>
Initializes a new instance of the MagickImageInfo class using the specified filename.
</summary><param name="fileName">The fully qualified name of the image file, or the relative image file name.</param><exception cref="T:ImageMagick.MagickException" /></member>
        <member name="M:ImageMagick.MagickImageInfo.#ctor(System.Byte[])">
==========================================================================================
<summary>
Initializes a new instance of the MagickImageInfo class using the specified blob.
</summary><param name="data">The byte array to read the information from.</param><exception cref="T:ImageMagick.MagickException" /></member>
        <member name="M:ImageMagick.MagickImageInfo.#ctor">
==========================================================================================
<summary>
Initializes a new instance of the MagickImageInfo class.
</summary></member>
        <member name="T:ImageMagick.MagickImageInfo">
=============================================================================================
<summary>
Class that contains basic information about an image.
</summary></member>
        <member name="M:ImageMagick.ColorHSL.FromMagickColor(ImageMagick.MagickColor)">
==========================================================================================
<summary>
Converts the specified MagickColor to an instance of this type.
</summary></member>
        <member name="P:ImageMagick.ColorHSL.Saturation">
==========================================================================================
<summary>
Saturation component value of this color.
</summary></member>
        <member name="P:ImageMagick.ColorHSL.Luminosity">
==========================================================================================
<summary>
Luminosity component value of this color.
</summary></member>
        <member name="P:ImageMagick.ColorHSL.Hue">
==========================================================================================
<summary>
Hue component value of this color.
</summary></member>
        <member name="M:ImageMagick.ColorHSL.#ctor(System.Double,System.Double,System.Double)">
==========================================================================================
<summary>
Initializes a new instance of the ColorHSL class.
</summary><param name="hue">Hue component value of this color.</param><param name="saturation">Saturation component value of this color.</param><param name="luminosity">Luminosity component value of this color.</param></member>
        <member name="T:ImageMagick.ColorHSL">
=============================================================================================
<summary>
Class that represents a HSL color.
</summary></member>
        <member name="M:ImageMagick.ColorCMYK.FromMagickColor(ImageMagick.MagickColor)">
==========================================================================================
<summary>
Converts the specified MagickColor to an instance of this type.
</summary></member>
        <member name="P:ImageMagick.ColorCMYK.Y">
==========================================================================================
<summary>
Yellow component value of this color.
</summary></member>
        <member name="P:ImageMagick.ColorCMYK.M">
==========================================================================================
<summary>
Magenta component value of this color.
</summary></member>
        <member name="P:ImageMagick.ColorCMYK.K">
==========================================================================================
<summary>
Key (black) component value of this color.
</summary></member>
        <member name="P:ImageMagick.ColorCMYK.C">
==========================================================================================
<summary>
Cyan component value of this color.
</summary></member>
        <member name="M:ImageMagick.ColorCMYK.#ctor(System.Drawing.Color)">
==========================================================================================
<summary>
Initializes a new instance of the ColorCMYK class using the specified color.
</summary><param name="color">The color to use.</param></member>
        <member name="M:ImageMagick.ColorCMYK.#ctor(System.Single,System.Single,System.Single,System.Single)">
==========================================================================================
<summary>
Initializes a new instance of the ColorCMYK class.
</summary><param name="cyan">Cyan component value of this color.</param><param name="magenta">Magenta component value of this color.</param><param name="yellow">Yellow component value of this color.</param><param name="key">Key (black) component value of this color.</param></member>
        <member name="T:ImageMagick.ColorCMYK">
=============================================================================================
<summary>
Class that represents a CMYK color.
</summary></member>
        <member name="T:ImageMagick.MagickTypeErrorException">
=============================================================================================
<summary>
Encapsulation of the ImageMagick ErrorType exception object.
</summary></member>
        <member name="T:ImageMagick.MagickStreamErrorException">
=============================================================================================
<summary>
Encapsulation of the ImageMagick ErrorStream exception object.
</summary></member>
        <member name="T:ImageMagick.MagickResourceLimitErrorException">
=============================================================================================
<summary>
Encapsulation of the ImageMagick ErrorResourceLimit exception object.
</summary></member>
        <member name="T:ImageMagick.MagickRegistryErrorException">
=============================================================================================
<summary>
Encapsulation of the ImageMagick ErrorRegistry exception object.
</summary></member>
        <member name="T:ImageMagick.MagickOptionErrorException">
=============================================================================================
<summary>
Encapsulation of the ImageMagick ErrorOption exception object.
</summary></member>
        <member name="T:ImageMagick.MagickModuleErrorException">
=============================================================================================
<summary>
Encapsulation of the ImageMagick ErrorModule exception object.
</summary></member>
        <member name="T:ImageMagick.MagickMissingDelegateErrorException">
=============================================================================================
<summary>
Encapsulation of the ImageMagick ErrorMissingDelegate exception object.
</summary></member>
        <member name="T:ImageMagick.MagickImageErrorException">
=============================================================================================
<summary>
Encapsulation of the ImageMagick ErrorImage exception object.
</summary></member>
        <member name="T:ImageMagick.MagickFileOpenErrorException">
=============================================================================================
<summary>
Encapsulation of the ImageMagick ErrorFileOpen exception object.
</summary></member>
        <member name="T:ImageMagick.MagickDrawErrorException">
=============================================================================================
<summary>
Encapsulation of the ImageMagick ErrorDraw exception object.
</summary></member>
        <member name="T:ImageMagick.MagickDelegateErrorException">
=============================================================================================
<summary>
Encapsulation of the ImageMagick ErrorDelegate exception object.
</summary></member>
        <member name="T:ImageMagick.MagickCorruptImageErrorException">
=============================================================================================
<summary>
Encapsulation of the ImageMagick ErrorCorruptImage exception object.
</summary></member>
        <member name="T:ImageMagick.MagickUndefinedErrorException">
=============================================================================================
<summary>
Encapsulation of the ImageMagick ErrorUndefined exception object.
</summary></member>
        <member name="T:ImageMagick.MagickConfigureErrorException">
=============================================================================================
<summary>
Encapsulation of the ImageMagick ErrorConfigure exception object.
</summary></member>
        <member name="T:ImageMagick.MagickCoderErrorException">
=============================================================================================
<summary>
Encapsulation of the ImageMagick ErrorCoder exception object.
</summary></member>
        <member name="T:ImageMagick.MagickCacheErrorException">
=============================================================================================
<summary>
Encapsulation of the ImageMagick ErrorCache exception object.
</summary></member>
        <member name="T:ImageMagick.MagickBlobErrorException">
=============================================================================================
<summary>
Encapsulation of the ImageMagick ErrorBlob exception object.
</summary></member>
        <member name="T:ImageMagick.MagickErrorException">
=============================================================================================
<summary>
Encapsulation of the ImageMagick Error exception object.
</summary></member>
        <member name="M:ImageMagick.ColorRGB.FromMagickColor(ImageMagick.MagickColor)">
==========================================================================================
<summary>
Converts the specified MagickColor to an instance of this type.
</summary></member>
        <member name="P:ImageMagick.ColorRGB.R">
==========================================================================================
<summary>
Red component value of this color.
</summary></member>
        <member name="P:ImageMagick.ColorRGB.G">
==========================================================================================
<summary>
Green component value of this color.
</summary></member>
        <member name="P:ImageMagick.ColorRGB.B">
==========================================================================================
<summary>
Blue component value of this color.
</summary></member>
        <member name="M:ImageMagick.ColorRGB.#ctor(System.Drawing.Color)">
==========================================================================================
<summary>
Initializes a new instance of the ColorRGB class using the specified color.
</summary><param name="color">The color to use.</param></member>
        <member name="M:ImageMagick.ColorRGB.#ctor(System.Single,System.Single,System.Single)">
==========================================================================================
<summary>
Initializes a new instance of the ColorRGB class.
</summary><param name="red">Red component value of this color.</param><param name="green">Green component value of this color.</param><param name="blue">Blue component value of this color.</param></member>
        <member name="T:ImageMagick.ColorRGB">
=============================================================================================
<summary>
Class that represents a RGB color.
</summary></member>
        <member name="M:ImageMagick.MagickNET.SetTempDirectory(System.String)">
==========================================================================================
<summary>
Sets the directory that will be used when ImageMagick does not have enough memory for the
pixel cache.
</summary><param name="path">The path where temp files will be written.</param></member>
        <member name="M:ImageMagick.MagickNET.SetLogEvents(ImageMagick.LogEvents)">
==========================================================================================
<summary>
Set the events that will be written to the log. The log will be written to the console and
the debug window in VisualStudio. To change the log settings you must use a custom log.xml
file.
</summary><param name="events">The events that will be logged.</param></member>
        <member name="M:ImageMagick.MagickNET.SetCacheThreshold(System.UInt64)">
==========================================================================================
<summary>
Pixel cache threshold in bytes. Once this memory threshold is exceeded, all subsequent
pixels cache operations are to/from disk. This setting is shared by all MagickImage objects.
</summary><param name="threshold">The threshold in bytes.</param></member>
        <member name="M:ImageMagick.MagickNET.Initialize(System.String)">
==========================================================================================
<summary>
Adds the specified path to the environment path. You should place the ImageMagick
xml files in that directory.
</summary><param name="path">The path that contains the ImageMagick xml files.</param></member>
        <member name="M:ImageMagick.MagickNET.GetFormatInformation(ImageMagick.MagickFormat)">
==========================================================================================
<summary>
Returns the format information of the specified format.
</summary><param name="format">The image format.</param></member>
        <member name="P:ImageMagick.MagickNET.Version">
==========================================================================================
<summary>
Returns the version of Magick.NET.
</summary></member>
        <member name="P:ImageMagick.MagickNET.ThrowWarnings">
==========================================================================================
<summary>
Gets or sets whether WarningExceptions should be thrown.
</summary></member>
        <member name="P:ImageMagick.MagickNET.SupportedFormats">
==========================================================================================
<summary>
Returns information about the supported formats.
</summary></member>
        <member name="P:ImageMagick.MagickNET.Features">
==========================================================================================
<summary>
Returns the features reported by ImageMagick.
</summary></member>
        <member name="T:ImageMagick.MagickNET">
=============================================================================================
<summary>
Class that can be used to initialize Magick.NET.
</summary></member>
        <member name="T:ImageMagick.LogEvents">
=============================================================================================
<summary>
Specifies log events.
</summary></member>
        <member name="M:ImageMagick.PathClosePath.#ctor">
==========================================================================================
<summary>
Initializes a new instance of the PathClosePath class.
</summary></member>
        <member name="T:ImageMagick.PathClosePath">
=============================================================================================
<summary>
Encapsulation of the PathClosePath object.
</summary></member>
        <member name="M:ImageMagick.ColorMono.FromMagickColor(ImageMagick.MagickColor)">
==========================================================================================
<summary>
Converts the specified MagickColor to an instance of this type.
</summary></member>
        <member name="P:ImageMagick.ColorMono.IsBlack">
==========================================================================================
<summary>
Specifies if the color is black or white.
</summary></member>
        <member name="M:ImageMagick.ColorMono.#ctor(System.Boolean)">
==========================================================================================
<summary>
Initializes a new instance of the ColorMono class.
</summary><param name="isBlack">Specifies if the color is black or white.</param></member>
        <member name="T:ImageMagick.ColorMono">
=============================================================================================
<summary>
Class that represents a monochrome color.
</summary></member>
        <member name="M:ImageMagick.ColorYUV.FromMagickColor(ImageMagick.MagickColor)">
==========================================================================================
<summary>
Converts the specified MagickColor to an instance of this type.
</summary></member>
        <member name="P:ImageMagick.ColorYUV.Y">
==========================================================================================
<summary>
Y component value of this color. (value beteeen 0.0 and 1.0)
</summary></member>
        <member name="P:ImageMagick.ColorYUV.V">
==========================================================================================
<summary>
V component value of this color. (value beteeen -0.5 and 0.5)
</summary></member>
        <member name="P:ImageMagick.ColorYUV.U">
==========================================================================================
<summary>
U component value of this color. (value beteeen -0.5 and 0.5)
</summary></member>
        <member name="M:ImageMagick.ColorYUV.#ctor(System.Double,System.Double,System.Double)">
==========================================================================================
<summary>
Initializes a new instance of the ColorYUV class.
</summary><param name="y">Y component value of this color.</param><param name="u">U component value of this color.</param><param name="v">V component value of this color.</param></member>
        <member name="T:ImageMagick.ColorYUV">
=============================================================================================
<summary>
Class that represents a YUV color.
</summary></member>
        <member name="P:ImageMagick.Quantum.Max">
==========================================================================================
<summary>
Returns the maximum value of the quantum.
</summary></member>
        <member name="P:ImageMagick.Quantum.Depth">
==========================================================================================
<summary>
Returns the Quantum depth.
</summary></member>
        <member name="T:ImageMagick.Quantum">
=============================================================================================
<summary>
Class that can be used to acquire information about the Quantum.
</summary></member>
        <member name="M:ImageMagick.PathSmoothQuadraticCurvetoAbs.#ctor(System.Collections.Generic.IEnumerable`1{ImageMagick.Coordinate})">
==========================================================================================
<summary>
Initializes a new instance of the PathSmoothQuadraticCurvetoAbs class.
</summary><param name="coordinates">The coordinates to use.</param></member>
        <member name="M:ImageMagick.PathSmoothQuadraticCurvetoAbs.#ctor(ImageMagick.Coordinate)">
==========================================================================================
<summary>
Initializes a new instance of the PathSmoothQuadraticCurvetoAbs class.
</summary><param name="coordinate">The coordinate to use.</param></member>
        <member name="T:ImageMagick.PathSmoothQuadraticCurvetoAbs">
=============================================================================================
<summary>
Encapsulation of the PathSmoothQuadraticCurvetoAbs object.
</summary></member>
        <member name="M:ImageMagick.PathSmoothCurvetoAbs.#ctor(System.Collections.Generic.IEnumerable`1{ImageMagick.Coordinate})">
==========================================================================================
<summary>
Initializes a new instance of the PathSmoothCurvetoAbs class.
</summary><param name="coordinates">The coordinates to use.</param></member>
        <member name="M:ImageMagick.PathSmoothCurvetoAbs.#ctor(ImageMagick.Coordinate)">
==========================================================================================
<summary>
Initializes a new instance of the PathSmoothCurvetoAbs class.
</summary><param name="coordinate">The coordinate to use.</param></member>
        <member name="T:ImageMagick.PathSmoothCurvetoAbs">
=============================================================================================
<summary>
Encapsulation of the PathSmoothCurvetoAbs object.
</summary></member>
        <member name="M:ImageMagick.PathMovetoRel.#ctor(System.Collections.Generic.IEnumerable`1{ImageMagick.Coordinate})">
==========================================================================================
<summary>
Initializes a new instance of the PathMovetoRel class.
</summary><param name="coordinates">The coordinates to use.</param></member>
        <member name="M:ImageMagick.PathMovetoRel.#ctor(ImageMagick.Coordinate)">
==========================================================================================
<summary>
Initializes a new instance of the PathMovetoRel class.
</summary><param name="coordinate">The coordinate to use.</param></member>
        <member name="T:ImageMagick.PathMovetoRel">
=============================================================================================
<summary>
Encapsulation of the PathMovetoRel object.
</summary></member>
        <member name="M:ImageMagick.PathMovetoAbs.#ctor(System.Collections.Generic.IEnumerable`1{ImageMagick.Coordinate})">
==========================================================================================
<summary>
Initializes a new instance of the PathMovetoAbs class.
</summary><param name="coordinates">The coordinates to use.</param></member>
        <member name="M:ImageMagick.PathMovetoAbs.#ctor(ImageMagick.Coordinate)">
==========================================================================================
<summary>
Initializes a new instance of the PathMovetoAbs class.
</summary><param name="coordinate">The coordinate to use.</param></member>
        <member name="T:ImageMagick.PathMovetoAbs">
=============================================================================================
<summary>
Encapsulation of the PathMovetoAbs object.
</summary></member>
        <member name="M:ImageMagick.PathLinetoRel.#ctor(System.Collections.Generic.IEnumerable`1{ImageMagick.Coordinate})">
==========================================================================================
<summary>
Initializes a new instance of the PathLinetoRel class.
</summary><param name="coordinates">The coordinates to use.</param></member>
        <member name="M:ImageMagick.PathLinetoRel.#ctor(ImageMagick.Coordinate)">
==========================================================================================
<summary>
Initializes a new instance of the PathLinetoRel class.
</summary><param name="coordinate">The coordinate to use.</param></member>
        <member name="T:ImageMagick.PathLinetoRel">
=============================================================================================
<summary>
Encapsulation of the PathLinetoRel object.
</summary></member>
        <member name="M:ImageMagick.PathLinetoHorizontalRel.#ctor(System.Double)">
==========================================================================================
<summary>
Initializes a new instance of the PathLinetoHorizontalRel class.
</summary><param name="x">The X coordinate.</param></member>
        <member name="T:ImageMagick.PathLinetoHorizontalRel">
=============================================================================================
<summary>
Encapsulation of the PathLinetoHorizontalRel object.
</summary></member>
        <member name="M:ImageMagick.PathLinetoHorizontalAbs.#ctor(System.Double)">
==========================================================================================
<summary>
Initializes a new instance of the PathLinetoHorizontalAbs class.
</summary><param name="x">The X coordinate.</param></member>
        <member name="T:ImageMagick.PathLinetoHorizontalAbs">
=============================================================================================
<summary>
Encapsulation of the PathLinetoHorizontalAbs object.
</summary></member>
        <member name="M:ImageMagick.PathCurvetoRel.#ctor(System.Collections.Generic.IEnumerable`1{ImageMagick.PathCurveto})">
==========================================================================================
<summary>
Initializes a new instance of the PathCurvetoRel class.
</summary><param name="pathCurvetos">The coordinates to use.</param></member>
        <member name="M:ImageMagick.PathCurvetoRel.#ctor(ImageMagick.PathCurveto)">
==========================================================================================
<summary>
Initializes a new instance of the PathCurvetoRel class.
</summary><param name="pathCurveto">The coordinate to use.</param></member>
        <member name="T:ImageMagick.PathCurvetoRel">
=============================================================================================
<summary>
Encapsulation of the PathCurvetoRel object.
</summary></member>
        <member name="M:ImageMagick.PathCurvetoAbs.#ctor(System.Collections.Generic.IEnumerable`1{ImageMagick.PathCurveto})">
==========================================================================================
<summary>
Initializes a new instance of the PathCurvetoAbs class.
</summary><param name="pathCurvetos">The coordinates to use.</param></member>
        <member name="M:ImageMagick.PathCurvetoAbs.#ctor(ImageMagick.PathCurveto)">
==========================================================================================
<summary>
Initializes a new instance of the PathCurvetoAbs class.
</summary><param name="pathCurveto">The coordinate to use.</param></member>
        <member name="T:ImageMagick.PathCurvetoAbs">
=============================================================================================
<summary>
Encapsulation of the PathCurvetoAbs object.
</summary></member>
        <member name="M:ImageMagick.PathArcAbs.#ctor(System.Collections.Generic.IEnumerable`1{ImageMagick.PathArc})">
==========================================================================================
<summary>
Initializes a new instance of the PathArcAbs class.
</summary><param name="pathArcs">The coordinates to use.</param></member>
        <member name="M:ImageMagick.PathArcAbs.#ctor(ImageMagick.PathArc)">
==========================================================================================
<summary>
Initializes a new instance of the PathArcAbs class.
</summary><param name="pathArc">The coordinate to use.</param></member>
        <member name="T:ImageMagick.PathArcAbs">
=============================================================================================
<summary>
Encapsulation of the PathArcAbs object (Elliptical Arc).
</summary></member>
        <member name="P:ImageMagick.DrawableViewbox.UpperLeftY">
==========================================================================================
<summary>
The upper left Y coordinate.
</summary></member>
        <member name="P:ImageMagick.DrawableViewbox.UpperLeftX">
==========================================================================================
<summary>
The upper left X coordinate.
</summary></member>
        <member name="P:ImageMagick.DrawableViewbox.LowerRightY">
==========================================================================================
<summary>
The upper left Y coordinate.
</summary></member>
        <member name="P:ImageMagick.DrawableViewbox.LowerRightX">
==========================================================================================
<summary>
The upper left X coordinate.
</summary></member>
        <member name="M:ImageMagick.DrawableViewbox.#ctor(System.Drawing.Rectangle)">
==========================================================================================
<summary>
Creates a new DrawableViewbox instance.
</summary><param name="rectangle">The rectangle to use.</param></member>
        <member name="M:ImageMagick.DrawableViewbox.#ctor(System.Int32,System.Int32,System.Int32,System.Int32)">
==========================================================================================
<summary>
Creates a new DrawableViewbox instance.
</summary><param name="upperLeftX">The upper left X coordinate.</param><param name="upperLeftY">The upper left Y coordinate.</param><param name="lowerRightX">The lower right X coordinate.</param><param name="lowerRightY">The lower right Y coordinate.</param></member>
        <member name="T:ImageMagick.DrawableViewbox">
=============================================================================================
<summary>
Encapsulation of the DrawableViewbox object.
</summary></member>
        <member name="P:ImageMagick.DrawableTranslation.Y">
==========================================================================================
<summary>
The Y coordinate.
</summary></member>
        <member name="P:ImageMagick.DrawableTranslation.X">
==========================================================================================
<summary>
The X coordinate.
</summary></member>
        <member name="M:ImageMagick.DrawableTranslation.#ctor(System.Double,System.Double)">
==========================================================================================
<summary>
Creates a new DrawableTranslation instance.
</summary><param name="x">The X coordinate.</param><param name="y">The Y coordinate.</param></member>
        <member name="T:ImageMagick.DrawableTranslation">
=============================================================================================
<summary>
Encapsulation of the DrawableTranslation object.
</summary></member>
        <member name="P:ImageMagick.DrawableTextUnderColor.Color">
==========================================================================================
<summary>
The color to use.
</summary></member>
        <member name="M:ImageMagick.DrawableTextUnderColor.#ctor(ImageMagick.MagickColor)">
==========================================================================================
<summary>
Creates a new DrawableTextUnderColor instance.
</summary><param name="color">The color to use.</param></member>
        <member name="M:ImageMagick.DrawableTextUnderColor.#ctor(System.Drawing.Color)">
==========================================================================================
<summary>
Creates a new DrawableTextUnderColor instance.
</summary><param name="color">The color to use.</param></member>
        <member name="T:ImageMagick.DrawableTextUnderColor">
=============================================================================================
<summary>
Encapsulation of the DrawableTextUnderColor object.
</summary></member>
        <member name="P:ImageMagick.DrawableTextDecoration.Decoration">
==========================================================================================
<summary>
The text decoration
</summary></member>
        <member name="M:ImageMagick.DrawableTextDecoration.#ctor(ImageMagick.TextDecoration)">
==========================================================================================
<summary>
Creates a new DrawableTextDecoration instance.
</summary><param name="decoration">The text decoration.</param></member>
        <member name="T:ImageMagick.DrawableTextDecoration">
=============================================================================================
<summary>
Encapsulation of the DrawableTextDecoration object.
</summary></member>
        <member name="T:ImageMagick.TextDecoration">
=============================================================================================
<summary>
Specified the type of decarion for text.
</summary></member>
        <member name="P:ImageMagick.DrawableText.Y">
==========================================================================================
<summary>
The Y coordinate.
</summary></member>
        <member name="P:ImageMagick.DrawableText.X">
==========================================================================================
<summary>
The X coordinate.
</summary></member>
        <member name="P:ImageMagick.DrawableText.Text">
==========================================================================================
<summary>
The text to draw.
</summary></member>
        <member name="P:ImageMagick.DrawableText.Encoding">
==========================================================================================
<summary>
The encoding of the text.
</summary></member>
        <member name="M:ImageMagick.DrawableText.#ctor(System.Double,System.Double,System.String,System.Text.Encoding)">
==========================================================================================
<summary>
Creates a new DrawableText instance.
</summary><param name="x">The X coordinate.</param><param name="y">The Y coordinate.</param><param name="value">The text to draw.</param><param name="encoding">The encoding of the text.</param></member>
        <member name="M:ImageMagick.DrawableText.#ctor(System.Double,System.Double,System.String)">
==========================================================================================
<summary>
Creates a new DrawableText instance.
</summary><param name="x">The X coordinate.</param><param name="y">The Y coordinate.</param><param name="value">The text to draw.</param></member>
        <member name="T:ImageMagick.DrawableText">
=============================================================================================
<summary>
Encapsulation of the DrawableCompositeImage object.
</summary></member>
        <member name="P:ImageMagick.DrawableStrokeWidth.Width">
==========================================================================================
<summary>
The width.
</summary></member>
        <member name="M:ImageMagick.DrawableStrokeWidth.#ctor(System.Double)">
==========================================================================================
<summary>
Creates a new DrawableStrokeWidth instance.
</summary><param name="width">The width.</param></member>
        <member name="T:ImageMagick.DrawableStrokeWidth">
=============================================================================================
<summary>
Encapsulation of the DrawableStrokeWidth object.
</summary></member>
        <member name="P:ImageMagick.DrawableStrokeLineJoin.LineCap">
==========================================================================================
<summary>
The line cap.
</summary></member>
        <member name="M:ImageMagick.DrawableStrokeLineJoin.#ctor(ImageMagick.LineJoin)">
==========================================================================================
<summary>
Creates a new DrawableStrokeLineJoin instance.
</summary><param name="lineJoin">The line join.</param></member>
        <member name="T:ImageMagick.DrawableStrokeLineJoin">
=============================================================================================
<summary>
Encapsulation of the DrawableStrokeLineJoin object.
</summary></member>
        <member name="P:ImageMagick.DrawableSkewY.Angle">
==========================================================================================
<summary>
The miter limit.
</summary></member>
        <member name="M:ImageMagick.DrawableSkewY.#ctor(System.Double)">
==========================================================================================
<summary>
Creates a new DrawableSkewY instance.
</summary><param name="angle">The angle.</param></member>
        <member name="T:ImageMagick.DrawableSkewY">
=============================================================================================
<summary>
Encapsulation of the DrawableSkewY object.
</summary></member>
        <member name="P:ImageMagick.DrawableSkewX.Angle">
==========================================================================================
<summary>
The miter limit.
</summary></member>
        <member name="M:ImageMagick.DrawableSkewX.#ctor(System.Double)">
==========================================================================================
<summary>
Creates a new DrawableSkewX instance.
</summary><param name="angle">The angle.</param></member>
        <member name="T:ImageMagick.DrawableSkewX">
=============================================================================================
<summary>
Encapsulation of the DrawableSkewX object.
</summary></member>
        <member name="P:ImageMagick.DrawableScaling.Y">
==========================================================================================
<summary>
The Y coordinate.
</summary></member>
        <member name="P:ImageMagick.DrawableScaling.X">
==========================================================================================
<summary>
The X coordinate.
</summary></member>
        <member name="M:ImageMagick.DrawableScaling.#ctor(System.Double,System.Double)">
==========================================================================================
<summary>
Creates a new DrawableScaling instance.
</summary><param name="x">The X coordinate.</param><param name="y">The Y coordinate.</param></member>
        <member name="T:ImageMagick.DrawableScaling">
=============================================================================================
<summary>
Encapsulation of the DrawableScaling object.
</summary></member>
        <member name="P:ImageMagick.DrawableRoundRectangle.Width">
==========================================================================================
<summary>
The width.
</summary></member>
        <member name="P:ImageMagick.DrawableRoundRectangle.Height">
==========================================================================================
<summary>
The height.
</summary></member>
        <member name="P:ImageMagick.DrawableRoundRectangle.CornerWidth">
==========================================================================================
<summary>
The corner width.
</summary></member>
        <member name="P:ImageMagick.DrawableRoundRectangle.CornerHeight">
==========================================================================================
<summary>
The corner height.
</summary></member>
        <member name="P:ImageMagick.DrawableRoundRectangle.CenterY">
==========================================================================================
<summary>
The center Y coordinate.
</summary></member>
        <member name="P:ImageMagick.DrawableRoundRectangle.CenterX">
==========================================================================================
<summary>
The center X coordinate.
</summary></member>
        <member name="M:ImageMagick.DrawableRoundRectangle.#ctor(System.Double,System.Double,System.Double,System.Double,System.Double,System.Double)">
==========================================================================================
<summary>
Creates a new DrawableRoundRectangle instance.
</summary><param name="centerX">The center X coordinate.</param><param name="centerY">The center Y coordinate.</param><param name="width">The width.</param><param name="height">The height.</param><param name="cornerWidth">The corner width.</param><param name="cornerHeight">The corner height.</param></member>
        <member name="T:ImageMagick.DrawableRoundRectangle">
=============================================================================================
<summary>
Encapsulation of the DrawableRoundRectangle object.
</summary></member>
        <member name="P:ImageMagick.DrawableRectangle.UpperLeftY">
==========================================================================================
<summary>
The upper left Y coordinate.
</summary></member>
        <member name="P:ImageMagick.DrawableRectangle.UpperLeftX">
==========================================================================================
<summary>
The upper left X coordinate.
</summary></member>
        <member name="P:ImageMagick.DrawableRectangle.LowerRightY">
==========================================================================================
<summary>
The upper left Y coordinate.
</summary></member>
        <member name="P:ImageMagick.DrawableRectangle.LowerRightX">
==========================================================================================
<summary>
The upper left X coordinate.
</summary></member>
        <member name="M:ImageMagick.DrawableRectangle.#ctor(System.Drawing.Rectangle)">
==========================================================================================
<summary>
Creates a new DrawableRectangle instance.
</summary><param name="rectangle">The rectangle to use.</param></member>
        <member name="M:ImageMagick.DrawableRectangle.#ctor(System.Double,System.Double,System.Double,System.Double)">
==========================================================================================
<summary>
Creates a new DrawableRectangle instance.
</summary><param name="upperLeftX">The upper left X coordinate.</param><param name="upperLeftY">The upper left Y coordinate.</param><param name="lowerRightX">The lower right X coordinate.</param><param name="lowerRightY">The lower right Y coordinate.</param></member>
        <member name="T:ImageMagick.DrawableRectangle">
=============================================================================================
<summary>
Encapsulation of the DrawableRectangle object.
</summary></member>
        <member name="M:ImageMagick.DrawablePushPattern.#ctor(System.String,System.Int32,System.Int32,System.Int32,System.Int32)">
==========================================================================================
<summary>
Creates a new DrawablePushPattern instance.
</summary><param name="id">The ID of the pattern.</param><param name="x">The X coordinate.</param><param name="y">The Y coordinate.</param><param name="width">The width.</param><param name="height">The height.</param></member>
        <member name="T:ImageMagick.DrawablePushPattern">
=============================================================================================
<summary>
Encapsulation of the DrawablePushPattern object.
</summary></member>
        <member name="M:ImageMagick.DrawablePolyline.#ctor(System.Collections.Generic.IEnumerable`1{ImageMagick.Coordinate})">
==========================================================================================
<summary>
Creates a new DrawablePolyline instance.
</summary><param name="coordinates">The coordinates.</param></member>
        <member name="T:ImageMagick.DrawablePolyline">
=============================================================================================
<summary>
Encapsulation of the DrawablePolyline object.
</summary></member>
        <member name="M:ImageMagick.DrawablePolygon.#ctor(System.Collections.Generic.IEnumerable`1{ImageMagick.Coordinate})">
==========================================================================================
<summary>
Creates a new DrawablePolygon instance.
</summary><param name="coordinates">The coordinates.</param></member>
        <member name="T:ImageMagick.DrawablePolygon">
=============================================================================================
<summary>
Encapsulation of the DrawablePolygon object.
</summary></member>
        <member name="P:ImageMagick.DrawablePointSize.PointSize">
==========================================================================================
<summary>
The point size.
</summary></member>
        <member name="M:ImageMagick.DrawablePointSize.#ctor(System.Double)">
==========================================================================================
<summary>
Creates a new DrawablePointSize instance.
</summary><param name="pointSize">The point size.</param></member>
        <member name="T:ImageMagick.DrawablePointSize">
=============================================================================================
<summary>
Encapsulation of the DrawablePointSize object.
</summary></member>
        <member name="M:ImageMagick.DrawablePath.#ctor(System.Collections.Generic.IEnumerable`1{ImageMagick.PathBase})">
==========================================================================================
<summary>
Creates a new DrawablePath instance.
</summary><param name="paths">The paths to use.</param></member>
        <member name="T:ImageMagick.DrawablePath">
=============================================================================================
<summary>
Encapsulation of the DrawablePath object.
</summary></member>
        <member name="P:ImageMagick.DrawableMiterLimit.Miterlimit">
==========================================================================================
<summary>
The miter limit.
</summary></member>
        <member name="M:ImageMagick.DrawableMiterLimit.#ctor(System.Int32)">
==========================================================================================
<summary>
Creates a new DrawableMiterLimit instance.
</summary><param name="miterlimit">The miter limit.</param></member>
        <member name="T:ImageMagick.DrawableMiterLimit">
=============================================================================================
<summary>
Encapsulation of the DrawableMiterLimit object.
</summary></member>
        <member name="P:ImageMagick.DrawableLine.StartY">
==========================================================================================
<summary>
The starting Y coordinate.
</summary></member>
        <member name="P:ImageMagick.DrawableLine.StartX">
==========================================================================================
<summary>
The starting X coordinate.
</summary></member>
        <member name="P:ImageMagick.DrawableLine.EndY">
==========================================================================================
<summary>
The ending Y coordinate.
</summary></member>
        <member name="P:ImageMagick.DrawableLine.EndX">
==========================================================================================
<summary>
The ending X coordinate.
</summary></member>
        <member name="M:ImageMagick.DrawableLine.#ctor(System.Double,System.Double,System.Double,System.Double)">
==========================================================================================
<summary>
Creates a new DrawableLine instance.
</summary><param name="startX">The starting X coordinate.</param><param name="startY">The starting Y coordinate.</param><param name="endX">The ending X coordinate.</param><param name="endY">The ending Y coordinate.</param></member>
        <member name="T:ImageMagick.DrawableLine">
=============================================================================================
<summary>
Encapsulation of the DrawableLine object.
</summary></member>
        <member name="P:ImageMagick.DrawableFillRule.FillRule">
==========================================================================================
<summary>
The rule to use when filling drawn objects.
</summary></member>
        <member name="M:ImageMagick.DrawableFillRule.#ctor(ImageMagick.FillRule)">
==========================================================================================
<summary>
Creates a new DrawableFillRule instance.
</summary><param name="fillRule">The rule to use when filling drawn objects.</param></member>
        <member name="T:ImageMagick.DrawableFillRule">
=============================================================================================
<summary>
Encapsulation of the DrawableFillRule object.
</summary></member>
        <member name="P:ImageMagick.DrawableFillColor.Color">
==========================================================================================
<summary>
The color to use.
</summary></member>
        <member name="M:ImageMagick.DrawableFillColor.#ctor(ImageMagick.MagickColor)">
==========================================================================================
<summary>
Creates a new DrawableFillColor instance.
</summary><param name="color">The color to use.</param></member>
        <member name="M:ImageMagick.DrawableFillColor.#ctor(System.Drawing.Color)">
==========================================================================================
<summary>
Creates a new DrawableFillColor instance.
</summary><param name="color">The color to use.</param></member>
        <member name="T:ImageMagick.DrawableFillColor">
=============================================================================================
<summary>
Encapsulation of the DrawableColor object.
</summary></member>
        <member name="P:ImageMagick.DrawableEllipse.StartDegrees">
==========================================================================================
<summary>
The starting degrees of rotation.
</summary></member>
        <member name="P:ImageMagick.DrawableEllipse.RadiusY">
==========================================================================================
<summary>
The Y radius.
</summary></member>
        <member name="P:ImageMagick.DrawableEllipse.RadiusX">
==========================================================================================
<summary>
The X radius.
</summary></member>
        <member name="P:ImageMagick.DrawableEllipse.OriginY">
==========================================================================================
<summary>
The origin X coordinate.
</summary></member>
        <member name="P:ImageMagick.DrawableEllipse.OriginX">
==========================================================================================
<summary>
The origin X coordinate.
</summary></member>
        <member name="P:ImageMagick.DrawableEllipse.EndDegrees">
==========================================================================================
<summary>
The ending degrees of rotation.
</summary></member>
        <member name="M:ImageMagick.DrawableEllipse.#ctor(System.Double,System.Double,System.Double,System.Double,System.Double,System.Double)">
==========================================================================================
<summary>
Creates a new DrawableEllipse instance.
</summary><param name="originX">The origin X coordinate.</param><param name="originY">The origin Y coordinate.</param><param name="radiusX">The X radius.</param><param name="radiusY">The Y radius.</param><param name="startDegrees">The starting degrees of rotation.</param><param name="endDegrees">The ending degrees of rotation.</param></member>
        <member name="T:ImageMagick.DrawableEllipse">
=============================================================================================
<summary>
Encapsulation of the DrawableEllipse object.
</summary></member>
        <member name="P:ImageMagick.DrawableColor.Y">
==========================================================================================
<summary>
The Y coordinate.
</summary></member>
        <member name="P:ImageMagick.DrawableColor.X">
==========================================================================================
<summary>
The X coordinate.
</summary></member>
        <member name="P:ImageMagick.DrawableColor.PaintMethod">
==========================================================================================
<summary>
The PaintMethod to use.
</summary></member>
        <member name="M:ImageMagick.DrawableColor.#ctor(System.Double,System.Double,ImageMagick.PaintMethod)">
==========================================================================================
<summary>
Creates a new DrawableColor instance.
</summary><param name="x">The X coordinate.</param><param name="y">The Y coordinate.</param><param name="paintMethod">The paint method to use.</param></member>
        <member name="T:ImageMagick.DrawableColor">
=============================================================================================
<summary>
Encapsulation of the DrawableColor object.
</summary></member>
        <member name="P:ImageMagick.DrawableClipPath.ClipPath">
==========================================================================================
<summary>
The ID of the clip path.
</summary></member>
        <member name="M:ImageMagick.DrawableClipPath.#ctor(System.String)">
==========================================================================================
<summary>
Creates a new DrawableClipPath instance.
</summary><param name="clipPath">The ID of the clip path.</param></member>
        <member name="T:ImageMagick.DrawableClipPath">
=============================================================================================
<summary>
Encapsulation of the DrawableClipPath object.
</summary></member>
        <member name="M:ImageMagick.DrawableBezier.#ctor(System.Collections.Generic.IEnumerable`1{ImageMagick.Coordinate})">
==========================================================================================
<summary>
Creates a new DrawableBezier instance.
</summary><param name="coordinates">The coordinates.</param></member>
        <member name="T:ImageMagick.DrawableBezier">
=============================================================================================
<summary>
Encapsulation of the DrawableBezier object.
</summary></member>
        <member name="M:ImageMagick.MagickScript.Execute(ImageMagick.MagickImage)">
==========================================================================================
<summary>
Executes the script using the specified image.
</summary><param name="image">The image to execute the script on.</param></member>
        <member name="M:ImageMagick.MagickScript.Execute">
==========================================================================================
<summary>
Executes the script and returns the resulting image.
</summary></member>
        <member name="E:ImageMagick.MagickScript.Write">
==========================================================================================
<summary>
Event that will be raised when the script needs an image to be written.
</summary></member>
        <member name="E:ImageMagick.MagickScript.Read">
==========================================================================================
<summary>
Event that will be raised when the script needs an image to be read.
</summary></member>
        <member name="M:ImageMagick.MagickScript.#ctor(System.IO.Stream)">
==========================================================================================
<summary>
Initializes a new instance of the MagickScript class using the specified stream.
</summary><param name="stream">The stream to read the script data from.</param></member>
        <member name="M:ImageMagick.MagickScript.#ctor(System.String)">
==========================================================================================
<summary>
Initializes a new instance of the MagickScript class using the specified filename.
</summary><param name="fileName">The fully qualified name of the script file, or the relative script file name.</param></member>
        <member name="M:ImageMagick.MagickScript.#ctor(System.Xml.XPath.IXPathNavigable)">
==========================================================================================
<summary>
Initializes a new instance of the MagickScript class using the specified IXPathNavigable.
</summary><param name="xml">The IXPathNavigable that contains the script.</param></member>
        <member name="T:ImageMagick.MagickScript">
=============================================================================================
<summary>
Class that can be used to execute a Magick Script Language file.
</summary></member>
        <member name="P:ImageMagick.ScriptReadEventArgs.Settings">
==========================================================================================
<summary>
The read settings for the image.
</summary></member>
        <member name="P:ImageMagick.ScriptReadEventArgs.Image">
==========================================================================================
<summary>
The image that was read.
</summary></member>
        <member name="P:ImageMagick.ScriptReadEventArgs.Id">
==========================================================================================
<summary>
The ID of the image.
</summary></member>
        <member name="T:ImageMagick.ScriptReadEventArgs">
=============================================================================================
<summary>
Class that contains data for the Read event.
</summary></member>
        <member name="P:ImageMagick.PathCurveto.Y2">
==========================================================================================
</member>
        <member name="P:ImageMagick.PathCurveto.X2">
==========================================================================================
</member>
        <member name="P:ImageMagick.PathCurveto.Y1">
==========================================================================================
</member>
        <member name="P:ImageMagick.PathCurveto.X1">
==========================================================================================
</member>
        <member name="P:ImageMagick.PathCurveto.Y">
==========================================================================================
</member>
        <member name="P:ImageMagick.PathCurveto.X">
==========================================================================================
</member>
        <member name="M:ImageMagick.PathCurveto.#ctor(System.Double,System.Double,System.Double,System.Double,System.Double,System.Double)">
==========================================================================================
<summary>
Initializes a new instance of the PathCurveto class.
</summary></member>
        <member name="M:ImageMagick.PathCurveto.#ctor">
==========================================================================================
<summary>
Initializes a new instance of the PathCurveto class.
</summary></member>
        <member name="T:ImageMagick.PathCurveto">
=============================================================================================
<summary>
Encapsulation of the PathCurveto object.
</summary></member>
        <member name="P:ImageMagick.DrawableTextAntialias.IsEnabled">
==========================================================================================
<summary>
True if text antialiasing is enabled otherwise false.
</summary></member>
        <member name="M:ImageMagick.DrawableTextAntialias.#ctor(System.Boolean)">
==========================================================================================
<summary>
Creates a new DrawableTextAntialias instance.
</summary><param name="isEnabled">True if text antialiasing is enabled otherwise false.</param></member>
        <member name="T:ImageMagick.DrawableTextAntialias">
=============================================================================================
<summary>
Encapsulation of the DrawableTextAntialias object.
</summary></member>
        <member name="P:ImageMagick.DrawableFillOpacity.Opacity">
==========================================================================================
<summary>
The opacity.
</summary></member>
        <member name="M:ImageMagick.DrawableFillOpacity.#ctor(System.Double)">
==========================================================================================
<summary>
Creates a new DrawableFillOpacity instance.
</summary><param name="opacity">The opacity.</param></member>
        <member name="T:ImageMagick.DrawableFillOpacity">
=============================================================================================
<summary>
Encapsulation of the DrawableFillOpacity object.
</summary></member>
        <member name="M:ImageMagick.DrawablePushGraphicContext.#ctor">
==========================================================================================
<summary>
Creates a new DrawablePushGraphicContext instance.
</summary></member>
        <member name="T:ImageMagick.DrawablePushGraphicContext">
=============================================================================================
<summary>
Encapsulation of the DrawablePushGraphicContext object.
</summary></member>
        <member name="P:ImageMagick.DrawableDashOffset.Offset">
==========================================================================================
<summary>
The dash offset.
</summary></member>
        <member name="M:ImageMagick.DrawableDashOffset.#ctor(System.Double)">
==========================================================================================
<summary>
Creates a new DrawableDashOffset instance.
</summary><param name="offset">The dash offset.</param></member>
        <member name="T:ImageMagick.DrawableDashOffset">
=============================================================================================
<summary>
Encapsulation of the DrawableDashOffset object.
</summary></member>
        <member name="M:ImageMagick.ColorGray.FromMagickColor(ImageMagick.MagickColor)">
==========================================================================================
<summary>
Converts the specified MagickColor to an instance of this type.
</summary></member>
        <member name="P:ImageMagick.ColorGray.Shade">
==========================================================================================
<summary>
The shade of this color (value between 0.0 - 1.0).
</summary></member>
        <member name="M:ImageMagick.ColorGray.#ctor(System.Double)">
==========================================================================================
<summary>
Initializes a new instance of the ColorGray class.
</summary><param name="shade">Value between 0.0 - 1.0.</param></member>
        <member name="T:ImageMagick.ColorGray">
=============================================================================================
<summary>
Class that represents a gray color.
</summary></member>
        <member name="M:ImageMagick.ColorBase.ToMagickColor">
==========================================================================================
<summary>
Converts the value of this instance to an equivalent MagickColor.
</summary></member>
        <member name="M:ImageMagick.ColorBase.GetHashCode">
==========================================================================================
<summary>
Servers as a hash of this type.
</summary></member>
        <member name="M:ImageMagick.ColorBase.Equals(ImageMagick.ColorBase)">
==========================================================================================
<summary>
Determines whether the specified geometry is equal to the current color.
</summary><param name="other">The image to compare this color with.</param></member>
        <member name="M:ImageMagick.ColorBase.Equals(System.Object)">
==========================================================================================
<summary>
Determines whether the specified object is equal to the current color.
</summary><param name="obj">The object to compare this color with.</param></member>
        <member name="M:ImageMagick.ColorBase.CompareTo(ImageMagick.ColorBase)">
==========================================================================================
<summary>
Compares the current instance with another object of the same type.
</summary><param name="other">The object to compare this color with.</param></member>
        <member name="T:ImageMagick.ColorBase">
=============================================================================================
<summary>
Base class for colors
</summary></member>
        <member name="P:ImageMagick.DrawableCircle.PerimeterY">
==========================================================================================
<summary>
The perimeter X coordinate.
</summary></member>
        <member name="P:ImageMagick.DrawableCircle.PerimeterX">
==========================================================================================
<summary>
The perimeter X coordinate.
</summary></member>
        <member name="P:ImageMagick.DrawableCircle.OriginY">
==========================================================================================
<summary>
The origin X coordinate.
</summary></member>
        <member name="P:ImageMagick.DrawableCircle.OriginX">
==========================================================================================
<summary>
The origin X coordinate.
</summary></member>
        <member name="M:ImageMagick.DrawableCircle.#ctor(System.Double,System.Double,System.Double,System.Double)">
==========================================================================================
<summary>
Creates a new DrawableCircle instance.
</summary><param name="originX">The origin X coordinate.</param><param name="originY">The origin Y coordinate.</param><param name="perimeterX">The perimeter X coordinate.</param><param name="perimeterY">The perimeter Y coordinate.</param></member>
        <member name="T:ImageMagick.DrawableCircle">
=============================================================================================
<summary>
Encapsulation of the DrawableCircle object.
</summary></member>
        <member name="P:ImageMagick.DrawableArc.StartY">
==========================================================================================
<summary>
The starting Y coordinate of the bounding rectangle.
</summary></member>
        <member name="P:ImageMagick.DrawableArc.StartX">
==========================================================================================
<summary>
The starting X coordinate of the bounding rectangle.
</summary></member>
        <member name="P:ImageMagick.DrawableArc.StartDegrees">
==========================================================================================
<summary>
The starting degrees of rotation.
</summary></member>
        <member name="P:ImageMagick.DrawableArc.EndY">
==========================================================================================
<summary>
The ending Y coordinate of the bounding rectangle.
</summary></member>
        <member name="P:ImageMagick.DrawableArc.EndX">
==========================================================================================
<summary>
The ending X coordinate of the bounding rectangle.
</summary></member>
        <member name="P:ImageMagick.DrawableArc.EndDegrees">
==========================================================================================
<summary>
The ending degrees of rotation.
</summary></member>
        <member name="M:ImageMagick.DrawableArc.#ctor(System.Double,System.Double,System.Double,System.Double,System.Double,System.Double)">
==========================================================================================
<summary>
Creates a new DrawableArc instance.
</summary><param name="startX">The starting X coordinate of the bounding rectangle.</param><param name="startY">The starting Y coordinate of thebounding rectangle.</param><param name="endX">The ending X coordinate of the bounding rectangle.</param><param name="endY">The ending Y coordinate of the bounding rectangle.</param><param name="startDegrees">The starting degrees of rotation.</param><param name="endDegrees">The ending degrees of rotation.</param></member>
        <member name="T:ImageMagick.DrawableArc">
=============================================================================================
<summary>
Encapsulation of the DrawableArc object.
</summary></member>
        <member name="M:ImageMagick.PathSmoothQuadraticCurvetoRel.#ctor(System.Collections.Generic.IEnumerable`1{ImageMagick.Coordinate})">
==========================================================================================
<summary>
Initializes a new instance of the PathSmoothQuadraticCurvetoRel class.
</summary><param name="coordinates">The coordinates to use.</param></member>
        <member name="M:ImageMagick.PathSmoothQuadraticCurvetoRel.#ctor(ImageMagick.Coordinate)">
==========================================================================================
<summary>
Initializes a new instance of the PathSmoothQuadraticCurvetoRel class.
</summary><param name="coordinate">The coordinate to use.</param></member>
        <member name="T:ImageMagick.PathSmoothQuadraticCurvetoRel">
=============================================================================================
<summary>
Encapsulation of the PathSmoothQuadraticCurvetoRel object.
</summary></member>
        <member name="P:ImageMagick.DrawableFont.Family">
==========================================================================================
<summary>
The font family.
</summary></member>
        <member name="M:ImageMagick.DrawableFont.#ctor(System.String,ImageMagick.FontStyleType,ImageMagick.FontWeight,ImageMagick.FontStretch)">
==========================================================================================
<summary>
Creates a new DrawableFont instance.
</summary><param name="family">The font family.</param><param name="style">The style of the font.</param><param name="weight">The weight of the font.</param><param name="stretch">The font stretching type.</param></member>
        <member name="M:ImageMagick.DrawableFont.#ctor(System.String)">
==========================================================================================
<summary>
Creates a new DrawableFont instance.
</summary><param name="family">The font family.</param></member>
        <member name="T:ImageMagick.DrawableFont">
=============================================================================================
<summary>
Encapsulation of the DrawableFont object.
</summary></member>
        <member name="T:ImageMagick.FontWeight">
=============================================================================================
<summary>
Specifies font weight.
</summary></member>
        <member name="T:ImageMagick.FontStyleType">
=============================================================================================
<summary>
Specifies the style of a font.
</summary></member>
        <member name="T:ImageMagick.FontStretch">
=============================================================================================
<summary>
Specifies font stretch type.
</summary></member>
        <member name="P:ImageMagick.DrawableMatte.Y">
==========================================================================================
<summary>
The Y coordinate.
</summary></member>
        <member name="P:ImageMagick.DrawableMatte.X">
==========================================================================================
<summary>
The X coordinate.
</summary></member>
        <member name="P:ImageMagick.DrawableMatte.PaintMethod">
==========================================================================================
<summary>
The PaintMethod to use.
</summary></member>
        <member name="M:ImageMagick.DrawableMatte.#ctor(System.Double,System.Double,ImageMagick.PaintMethod)">
==========================================================================================
<summary>
Creates a new DrawableMatte instance.
</summary><param name="x">The X coordinate.</param><param name="y">The Y coordinate.</param><param name="paintMethod">The paint method to use.</param></member>
        <member name="T:ImageMagick.DrawableMatte">
=============================================================================================
<summary>
Encapsulation of the DrawableMatte object.
</summary></member>
        <member name="P:ImageMagick.DrawableStrokeColor.Color">
==========================================================================================
<summary>
The color to use.
</summary></member>
        <member name="M:ImageMagick.DrawableStrokeColor.#ctor(ImageMagick.MagickColor)">
==========================================================================================
<summary>
Creates a new DrawableStrokeColor instance.
</summary><param name="color">The color to use.</param></member>
        <member name="M:ImageMagick.DrawableStrokeColor.#ctor(System.Drawing.Color)">
==========================================================================================
<summary>
Creates a new DrawableStrokeColor instance.
</summary><param name="color">The color to use.</param></member>
        <member name="T:ImageMagick.DrawableStrokeColor">
=============================================================================================
<summary>
Encapsulation of the DrawableStrokeColor object.
</summary></member>
        <member name="M:ImageMagick.PathQuadraticCurvetoAbs.#ctor(System.Collections.Generic.IEnumerable`1{ImageMagick.PathQuadraticCurveto})">
==========================================================================================
<summary>
Initializes a new instance of the PathQuadraticCurvetoAbs class.
</summary><param name="pathQuadraticCurvetos">The coordinates to use.</param></member>
        <member name="M:ImageMagick.PathQuadraticCurvetoAbs.#ctor(ImageMagick.PathQuadraticCurveto)">
==========================================================================================
<summary>
Initializes a new instance of the PathQuadraticCurvetoAbs class.
</summary><param name="pathQuadraticCurveto">The coordinate to use.</param></member>
        <member name="T:ImageMagick.PathQuadraticCurvetoAbs">
=============================================================================================
<summary>
Encapsulation of the PathQuadraticCurvetoAbs object.
</summary></member>
        <member name="M:ImageMagick.DrawablePopGraphicContext.#ctor">
==========================================================================================
<summary>
Creates a new DrawablePopGraphicContext instance.
</summary></member>
        <member name="T:ImageMagick.DrawablePopGraphicContext">
=============================================================================================
<summary>
Encapsulation of the DrawablePopGraphicContext object.
</summary></member>
        <member name="P:ImageMagick.DrawableStrokeAntialias.IsEnabled">
==========================================================================================
<summary>
True if stroke antialiasing is enabled otherwise false.
</summary></member>
        <member name="M:ImageMagick.DrawableStrokeAntialias.#ctor(System.Boolean)">
==========================================================================================
<summary>
Creates a new DrawableStrokeAntialias instance.
</summary><param name="isEnabled">True if stroke antialiasing is enabled otherwise false.</param></member>
        <member name="T:ImageMagick.DrawableStrokeAntialias">
=============================================================================================
<summary>
Encapsulation of the DrawableStrokeAntialias object.
</summary></member>
        <member name="M:ImageMagick.DrawablePopPattern.#ctor">
==========================================================================================
<summary>
Creates a new DrawablePopPattern instance.
</summary></member>
        <member name="T:ImageMagick.DrawablePopPattern">
=============================================================================================
<summary>
Encapsulation of the DrawablePopPattern object.
</summary></member>
        <member name="M:ImageMagick.PathQuadraticCurvetoRel.#ctor(System.Collections.Generic.IEnumerable`1{ImageMagick.PathQuadraticCurveto})">
==========================================================================================
<summary>
Initializes a new instance of the PathQuadraticCurvetoRel class.
</summary><param name="pathQuadraticCurvetos">The coordinates to use.</param></member>
        <member name="M:ImageMagick.PathQuadraticCurvetoRel.#ctor(ImageMagick.PathQuadraticCurveto)">
==========================================================================================
<summary>
Initializes a new instance of the PathQuadraticCurvetoRel class.
</summary><param name="pathQuadraticCurveto">The coordinate to use.</param></member>
        <member name="T:ImageMagick.PathQuadraticCurvetoRel">
=============================================================================================
<summary>
Encapsulation of the PathQuadraticCurvetoRel object.
</summary></member>
        <member name="P:ImageMagick.DrawableStrokeLineCap.LineCap">
==========================================================================================
<summary>
The line cap.
</summary></member>
        <member name="M:ImageMagick.DrawableStrokeLineCap.#ctor(ImageMagick.LineCap)">
==========================================================================================
<summary>
Creates a new DrawableStrokeLineCap instance.
</summary><param name="lineCap">The line cap.</param></member>
        <member name="T:ImageMagick.DrawableStrokeLineCap">
=============================================================================================
<summary>
Encapsulation of the DrawableStrokeLineCap object.
</summary></member>
        <member name="M:ImageMagick.PathLinetoVerticalAbs.#ctor(System.Double)">
==========================================================================================
<summary>
Initializes a new instance of the PathLinetoVerticalAbs class.
</summary><param name="x">The X coordinate.</param></member>
        <member name="T:ImageMagick.PathLinetoVerticalAbs">
=============================================================================================
<summary>
Encapsulation of the PathLinetoVerticalAbs object.
</summary></member>
        <member name="P:ImageMagick.ScriptWriteEventArgs.Image">
==========================================================================================
<summary>
The image that needs to be written.
</summary></member>
        <member name="P:ImageMagick.ScriptWriteEventArgs.Id">
==========================================================================================
<summary>
The ID of the image.
</summary></member>
        <member name="T:ImageMagick.ScriptWriteEventArgs">
=============================================================================================
<summary>
Class that contains data for the Write event.
</summary></member>
        <member name="P:ImageMagick.PathQuadraticCurveto.Y1">
==========================================================================================
</member>
        <member name="P:ImageMagick.PathQuadraticCurveto.X1">
==========================================================================================
</member>
        <member name="P:ImageMagick.PathQuadraticCurveto.Y">
==========================================================================================
</member>
        <member name="P:ImageMagick.PathQuadraticCurveto.X">
==========================================================================================
</member>
        <member name="M:ImageMagick.PathQuadraticCurveto.#ctor(System.Double,System.Double,System.Double,System.Double)">
==========================================================================================
<summary>
Initializes a new instance of the PathQuadraticCurveto class.
</summary></member>
        <member name="M:ImageMagick.PathQuadraticCurveto.#ctor">
==========================================================================================
<summary>
Initializes a new instance of the PathQuadraticCurveto class.
</summary></member>
        <member name="T:ImageMagick.PathQuadraticCurveto">
=============================================================================================
<summary>
Encapsulation of the PathQuadraticCurveto object.
</summary></member>
        <member name="P:ImageMagick.DrawableCompositeImage.Y">
==========================================================================================
<summary>
The Y coordinate.
</summary></member>
        <member name="P:ImageMagick.DrawableCompositeImage.X">
==========================================================================================
<summary>
The X coordinate.
</summary></member>
        <member name="P:ImageMagick.DrawableCompositeImage.Width">
==========================================================================================
<summary>
The width to scale the image to.
</summary></member>
        <member name="P:ImageMagick.DrawableCompositeImage.Height">
==========================================================================================
<summary>
The height to scale the image to.
</summary></member>
        <member name="M:ImageMagick.DrawableCompositeImage.#ctor(ImageMagick.MagickGeometry,ImageMagick.CompositeOperator,ImageMagick.MagickImage)">
==========================================================================================
<summary>
Creates a new DrawableCompositeImage instance.
</summary><param name="offset">The offset from origin.</param><param name="compose">The algorithm to use.</param><param name="image">The image to draw.</param></member>
        <member name="M:ImageMagick.DrawableCompositeImage.#ctor(ImageMagick.MagickGeometry,ImageMagick.MagickImage)">
==========================================================================================
<summary>
Creates a new DrawableCompositeImage instance.
</summary><param name="offset">The offset from origin.</param><param name="image">The image to draw.</param></member>
        <member name="M:ImageMagick.DrawableCompositeImage.#ctor(System.Double,System.Double,ImageMagick.CompositeOperator,ImageMagick.MagickImage)">
==========================================================================================
<summary>
Creates a new DrawableCompositeImage instance.
</summary><param name="x">The X coordinate.</param><param name="y">The Y coordinate.</param><param name="compose">The algorithm to use.</param><param name="image">The image to draw.</param></member>
        <member name="M:ImageMagick.DrawableCompositeImage.#ctor(System.Double,System.Double,ImageMagick.MagickImage)">
==========================================================================================
<summary>
Creates a new DrawableCompositeImage instance.
</summary><param name="x">The X coordinate.</param><param name="y">The Y coordinate.</param><param name="image">The image to draw.</param></member>
        <member name="T:ImageMagick.DrawableCompositeImage">
=============================================================================================
<summary>
Encapsulation of the DrawableCompositeImage object.
</summary></member>
        <member name="M:ImageMagick.DrawablePushClipPath.#ctor(System.String)">
==========================================================================================
<summary>
Creates a new DrawablePushClipPath instance.
</summary><param name="clipPath">The ID of the clip path.</param></member>
        <member name="T:ImageMagick.DrawablePushClipPath">
=============================================================================================
<summary>
Encapsulation of the DrawablePushClipPath object.
</summary></member>
        <member name="M:ImageMagick.PathLinetoAbs.#ctor(System.Collections.Generic.IEnumerable`1{ImageMagick.Coordinate})">
==========================================================================================
<summary>
Initializes a new instance of the PathLinetoAbs class.
</summary><param name="coordinates">The coordinates to use.</param></member>
        <member name="M:ImageMagick.PathLinetoAbs.#ctor(ImageMagick.Coordinate)">
==========================================================================================
<summary>
Initializes a new instance of the PathLinetoAbs class.
</summary><param name="coordinate">The coordinate to use.</param></member>
        <member name="T:ImageMagick.PathLinetoAbs">
=============================================================================================
<summary>
Encapsulation of the PathLinetoAbs object.
</summary></member>
        <member name="M:ImageMagick.DrawableDashArray.#ctor(System.Double[])">
==========================================================================================
<summary>
Creates a new DrawableDashArray instance.
</summary><param name="dash">An array containing the dash information.</param></member>
        <member name="T:ImageMagick.DrawableDashArray">
=============================================================================================
<summary>
Encapsulation of the DrawableDashArray object.
</summary></member>
        <member name="P:ImageMagick.DrawablePoint.Y">
==========================================================================================
<summary>
The Y coordinate.
</summary></member>
        <member name="P:ImageMagick.DrawablePoint.X">
==========================================================================================
<summary>
The X coordinate.
</summary></member>
        <member name="M:ImageMagick.DrawablePoint.#ctor(System.Double,System.Double)">
==========================================================================================
<summary>
Creates a new DrawablePoint instance.
</summary><param name="x">The X coordinate.</param><param name="y">The Y coordinate.</param></member>
        <member name="T:ImageMagick.DrawablePoint">
=============================================================================================
<summary>
Encapsulation of the DrawablePoint object.
</summary></member>
        <member name="M:ImageMagick.PathLinetoVerticalRel.#ctor(System.Double)">
==========================================================================================
<summary>
Initializes a new instance of the PathLinetoVerticalRel class.
</summary><param name="x">The X coordinate.</param></member>
        <member name="T:ImageMagick.PathLinetoVerticalRel">
=============================================================================================
<summary>
Encapsulation of the PathLinetoVerticalAbs object.
</summary></member>
        <member name="P:ImageMagick.DrawableRotation.Angle">
==========================================================================================
<summary>
The angle.
</summary></member>
        <member name="M:ImageMagick.DrawableRotation.#ctor(System.Double)">
==========================================================================================
<summary>
Creates a new DrawableRotation instance.
</summary><param name="angle">The angle.</param></member>
        <member name="T:ImageMagick.DrawableRotation">
=============================================================================================
<summary>
Encapsulation of the DrawableRotation object.
</summary></member>
        <member name="M:ImageMagick.MagickImageCollection.Write(System.String)">
==========================================================================================
<summary>
Writes the images to the specified file name. If the output image's file format does not
allow multi-image files multiple files will be written.
</summary><param name="fileName">The fully qualified name of the image file, or the relative image file name.</param></member>
        <member name="M:ImageMagick.MagickImageCollection.Write(System.IO.Stream)">
==========================================================================================
<summary>
Writes the imagse to the specified stream. If the output image's file format does not
allow multi-image files multiple files will be written.
</summary><param name="stream">The stream to write the images to.</param></member>
        <member name="M:ImageMagick.MagickImageCollection.TrimBounds">
==========================================================================================
<summary>
Merge this collection into a single image.
This is useful for combining Photoshop layers into a single image.
</summary><exception cref="T:ImageMagick.MagickException" /></member>
        <member name="M:ImageMagick.MagickImageCollection.ToByteArray">
==========================================================================================
<summary>
Converts this instance to a byte array.
</summary></member>
        <member name="M:ImageMagick.MagickImageCollection.Reverse">
==========================================================================================
<summary>
Reverses the order of the images in the collection.
</summary></member>
        <member name="M:ImageMagick.MagickImageCollection.RePage">
==========================================================================================
<summary>
Resets the page property of every image in the collection.
</summary></member>
        <member name="M:ImageMagick.MagickImageCollection.RemoveAt(System.Int32)">
==========================================================================================
<summary>
Removes the image at the specified index from the collection.
</summary><param name="index">The index of the image to remove.</param></member>
        <member name="M:ImageMagick.MagickImageCollection.Remove(ImageMagick.MagickImage)">
==========================================================================================
<summary>
Removes the first occurrence of the specified image from the collection.
</summary><param name="item">The image to remove.</param></member>
        <member name="M:ImageMagick.MagickImageCollection.Read(System.IO.Stream,ImageMagick.MagickReadSettings)">
==========================================================================================
<summary>
Read all image frames.
</summary><param name="stream">The stream to read the image data from.</param><param name="readSettings">The settings to use when reading the image.</param><returns>If a warning was raised while reading the image that warning will be returned.</returns><exception cref="T:ImageMagick.MagickException" /></member>
        <member name="M:ImageMagick.MagickImageCollection.Read(System.IO.Stream)">
==========================================================================================
<summary>
Read all image frames.
</summary><param name="stream">The stream to read the image data from.</param><returns>If a warning was raised while reading the image that warning will be returned.</returns><exception cref="T:ImageMagick.MagickException" /></member>
        <member name="M:ImageMagick.MagickImageCollection.Read(System.String,ImageMagick.MagickReadSettings)">
==========================================================================================
<summary>
Read all image frames.
</summary><param name="fileName">The fully qualified name of the image file, or the relative image file name.</param><param name="readSettings">The settings to use when reading the image.</param><returns>If a warning was raised while reading the image that warning will be returned.</returns><exception cref="T:ImageMagick.MagickException" /></member>
        <member name="M:ImageMagick.MagickImageCollection.Read(System.String)">
==========================================================================================
<summary>
Read all image frames.
</summary><param name="fileName">The fully qualified name of the image file, or the relative image file name.</param><returns>If a warning was raised while reading the image that warning will be returned.</returns><exception cref="T:ImageMagick.MagickException" /></member>
        <member name="M:ImageMagick.MagickImageCollection.Read(System.Byte[],ImageMagick.MagickReadSettings)">
==========================================================================================
<summary>
Read all image frames.
</summary><param name="data">The byte array to read the image data from.</param><param name="readSettings">The settings to use when reading the image.</param><returns>If a warning was raised while reading the image that warning will be returned.</returns><exception cref="T:ImageMagick.MagickException" /></member>
        <member name="M:ImageMagick.MagickImageCollection.Read(System.Byte[])">
==========================================================================================
<summary>
Read all image frames.
</summary><param name="data">The byte array to read the image data from.</param><returns>If a warning was raised while reading the image that warning will be returned.</returns><exception cref="T:ImageMagick.MagickException" /></member>
        <member name="M:ImageMagick.MagickImageCollection.OptimizePlus">
==========================================================================================
<summary>
OptimizePlus is exactly as Optimize, but may also add or even remove extra frames in the
animation, if it improves the total number of pixels in the resulting GIF animation.
</summary><exception cref="T:ImageMagick.MagickException" /></member>
        <member name="M:ImageMagick.MagickImageCollection.Optimize">
==========================================================================================
<summary>
Compares each image the GIF disposed forms of the previous image in the sequence. From
this it attempts to select the smallest cropped image to replace each frame, while
preserving the results of the GIF animation.
</summary><exception cref="T:ImageMagick.MagickException" /></member>
        <member name="M:ImageMagick.MagickImageCollection.Mosaic">
==========================================================================================
<summary>
Inlay the images to form a single coherent picture.
</summary><exception cref="T:ImageMagick.MagickException" /></member>
        <member name="M:ImageMagick.MagickImageCollection.Morph(System.Int32)">
==========================================================================================
<summary>
The Morph method requires a minimum of two images. The first image is transformed into
the second by a number of intervening images as specified by frames.
</summary><param name="frames">The number of in-between images to generate.</param><exception cref="T:ImageMagick.MagickException" /></member>
        <member name="M:ImageMagick.MagickImageCollection.Merge">
==========================================================================================
<summary>
Merge this collection into a single image.
This is useful for combining Photoshop layers into a single image.
</summary><exception cref="T:ImageMagick.MagickException" /></member>
        <member name="M:ImageMagick.MagickImageCollection.Insert(System.Int32,System.String)">
==========================================================================================
<summary>
Inserts an image with the specified file name into the collection.
</summary><param name="index">The index to insert the image.</param><param name="fileName">The fully qualified name of the image file, or the relative image file name.</param></member>
        <member name="M:ImageMagick.MagickImageCollection.Insert(System.Int32,ImageMagick.MagickImage)">
==========================================================================================
<summary>
Inserts an image into the collection.
</summary><param name="index">The index to insert the image.</param><param name="item">The image to insert.</param></member>
        <member name="M:ImageMagick.MagickImageCollection.IndexOf(ImageMagick.MagickImage)">
==========================================================================================
<summary>
Determines the index of the specified image.
</summary><param name="item">The image to check.</param></member>
        <member name="M:ImageMagick.MagickImageCollection.GetEnumerator2">
==========================================================================================
<summary>
Returns an enumerator that can iterate through the collection.
</summary></member>
        <member name="M:ImageMagick.MagickImageCollection.GetEnumerator">
==========================================================================================
<summary>
Returns an enumerator that can iterate through the collection.
</summary></member>
        <member name="M:ImageMagick.MagickImageCollection.Fx(System.String)">
==========================================================================================
<summary>
Applies a mathematical expression to the images.
</summary><param name="expression">The expression to apply.</param><exception cref="T:ImageMagick.MagickException" /></member>
        <member name="M:ImageMagick.MagickImageCollection.Flatten">
==========================================================================================
<summary>
Flatten this collection into a single image.
This is useful for combining Photoshop layers into a single image.
</summary><exception cref="T:ImageMagick.MagickException" /></member>
        <member name="M:ImageMagick.MagickImageCollection.Evaluate(ImageMagick.EvaluateOperator)">
==========================================================================================
<summary>
Evaluate image pixels into a single image. All the images in the collection must be the
same size in pixels.
</summary><param name="evaluateOperator">The operator.</param><exception cref="T:ImageMagick.MagickException" /></member>
        <member name="M:ImageMagick.MagickImageCollection.Deconstruct">
==========================================================================================
<summary>
Break down an image sequence into constituent parts. This is useful for creating GIF or
MNG animation sequences.
</summary></member>
        <member name="M:ImageMagick.MagickImageCollection.CopyTo(ImageMagick.MagickImage[],System.Int32)">
==========================================================================================
<summary>
Copies the images to an Array, starting at a particular Array index.
</summary><param name="destination">The one-dimensional Array that is the destination.</param><param name="arrayIndex">The zero-based index in 'destination' at which copying begins.</param></member>
        <member name="M:ImageMagick.MagickImageCollection.Combine(ImageMagick.Channels)">
==========================================================================================
<summary>
Combines one or more images into a single image. The grayscale value of the pixels of each
image in the sequence is assigned in order to the specified channels of the combined image.
The typical ordering would be image 1 =&gt; Red, 2 =&gt; Green, 3 =&gt; Blue, etc.
</summary><param name="channels">The channel(s) to combine.</param></member>
        <member name="M:ImageMagick.MagickImageCollection.Combine">
==========================================================================================
<summary>
Combines one or more images into a single image. The typical ordering would be
image 1 =&gt; Red, 2 =&gt; Green, 3 =&gt; Blue, etc.
</summary></member>
        <member name="M:ImageMagick.MagickImageCollection.Contains(ImageMagick.MagickImage)">
==========================================================================================
<summary>
Determines whether the collection contains the specified image.
</summary><param name="item">The image to check.</param></member>
        <member name="M:ImageMagick.MagickImageCollection.Coalesce">
==========================================================================================
<summary>
Merge a sequence of images. This is useful for GIF animation sequences that have page
offsets and disposal methods
</summary></member>
        <member name="M:ImageMagick.MagickImageCollection.Clear">
==========================================================================================
<summary>
Removes all images from the collection.
</summary></member>
        <member name="M:ImageMagick.MagickImageCollection.AppendVertically">
==========================================================================================
<summary>
Creates a single image, by appending all the images in the collection vertically.
</summary></member>
        <member name="M:ImageMagick.MagickImageCollection.AppendHorizontally">
==========================================================================================
<summary>
Creates a single image, by appending all the images in the collection horizontally.
</summary></member>
        <member name="M:ImageMagick.MagickImageCollection.Add(System.String)">
==========================================================================================
<summary>
Adds an image with the specified file name to the collection.
</summary><param name="fileName">The fully qualified name of the image file, or the relative image file name.</param><exception cref="T:ImageMagick.MagickException" /></member>
        <member name="M:ImageMagick.MagickImageCollection.Add(ImageMagick.MagickImage)">
==========================================================================================
<summary>
Adds an image to the collection.
</summary><param name="item">The image to add.</param></member>
        <member name="P:ImageMagick.MagickImageCollection.ReadWarning">
==========================================================================================
<summary>
Returns the warning that was raised during the read operation.
</summary></member>
        <member name="P:ImageMagick.MagickImageCollection.IsReadOnly">
==========================================================================================
<summary>
Returns the number of images in the collection.
</summary></member>
        <member name="P:ImageMagick.MagickImageCollection.Count">
==========================================================================================
<summary>
Returns the number of images in the collection.
</summary></member>
        <member name="P:ImageMagick.MagickImageCollection.default(System.Int32)">
==========================================================================================
<summary>
Gets or sets the image at the specified index.
</summary></member>
        <member name="M:ImageMagick.MagickImageCollection.#ctor(System.IO.Stream,ImageMagick.MagickReadSettings)">
==========================================================================================
<summary>
Initializes a new instance of the MagickImageCollection class using the specified stream.
</summary><param name="stream">The stream to read the image data from.</param><param name="readSettings">The settings to use when reading the image.</param><exception cref="T:ImageMagick.MagickException" /></member>
        <member name="M:ImageMagick.MagickImageCollection.#ctor(System.IO.Stream)">
==========================================================================================
<summary>
Initializes a new instance of the MagickImageCollection class using the specified stream.
</summary><param name="stream">The stream to read the image data from.</param><exception cref="T:ImageMagick.MagickException" /></member>
        <member name="M:ImageMagick.MagickImageCollection.#ctor(System.String,ImageMagick.MagickReadSettings)">
==========================================================================================
<summary>
Initializes a new instance of the MagickImageCollection class using the specified filename
</summary><param name="fileName">The fully qualified name of the image file, or the relative image file name.</param><param name="readSettings">The settings to use when reading the image.</param><exception cref="T:ImageMagick.MagickException" /></member>
        <member name="M:ImageMagick.MagickImageCollection.#ctor(System.String)">
==========================================================================================
<summary>
Initializes a new instance of the MagickImageCollection class using the specified filename.
</summary><param name="fileName">The fully qualified name of the image file, or the relative image file name.</param><exception cref="T:ImageMagick.MagickException" /></member>
        <member name="M:ImageMagick.MagickImageCollection.#ctor(System.Collections.Generic.IEnumerable`1{ImageMagick.MagickImage})">
==========================================================================================
<summary>
Initializes a new instance of the MagickImage class using the specified images.
</summary><param name="images">The images to add to the collection.</param><exception cref="T:ImageMagick.MagickException" /></member>
        <member name="M:ImageMagick.MagickImageCollection.#ctor(System.Byte[],ImageMagick.MagickReadSettings)">
==========================================================================================
<summary>
Initializes a new instance of the MagickImageCollection class using the specified byte array.
</summary><param name="data">The byte array to read the image data from.</param><param name="readSettings">The settings to use when reading the image.</param><exception cref="T:ImageMagick.MagickException" /></member>
        <member name="M:ImageMagick.MagickImageCollection.#ctor(System.Byte[])">
==========================================================================================
<summary>
Initializes a new instance of the MagickImageCollection class using the specified byte array.
</summary><param name="data">The byte array to read the image data from.</param><exception cref="T:ImageMagick.MagickException" /></member>
        <member name="M:ImageMagick.MagickImageCollection.#ctor">
==========================================================================================
<summary>
Initializes a new instance of the MagickImage class.
</summary></member>
        <member name="T:ImageMagick.MagickImageCollection">
=============================================================================================
<summary>
Represents the collection of images.
</summary></member>
        <member name="T:ImageMagick.LayerMethod">
=============================================================================================
<summary>
The method of selecting the size of the initial canvas.
</summary></member>
        <member name="M:ImageMagick.MagickImage.Zoom(ImageMagick.Percentage,ImageMagick.Percentage)">
==========================================================================================
<summary>
Zoom image to specified size.
</summary><param name="percentageWidth">The percentage of the width.</param><param name="percentageHeight">The percentage of the height.</param><exception cref="T:ImageMagick.MagickException" /></member>
        <member name="M:ImageMagick.MagickImage.Zoom(ImageMagick.Percentage)">
==========================================================================================
<summary /><param name="percentage">The percentage.</param><exception cref="T:ImageMagick.MagickException" /></member>
        <member name="M:ImageMagick.MagickImage.Zoom(ImageMagick.MagickGeometry)">
==========================================================================================
<summary /><param name="geometry">The geometry to use.</param><exception cref="T:ImageMagick.MagickException" /></member>
        <member name="M:ImageMagick.MagickImage.Zoom(System.Int32,System.Int32)">
==========================================================================================
<summary /><param name="width">The new width.</param><param name="height">The new height.</param><exception cref="T:ImageMagick.MagickException" /></member>
        <member name="M:ImageMagick.MagickImage.Write(System.String)">
==========================================================================================
<summary>
Writes the image to the specified file name.
</summary><param name="fileName">The fully qualified name of the image file, or the relative image file name.</param><exception cref="T:ImageMagick.MagickException" /></member>
        <member name="M:ImageMagick.MagickImage.Write(System.IO.Stream)">
==========================================================================================
<summary>
Writes the image to the specified stream.
</summary><param name="stream">The stream to write the image data to.</param><exception cref="T:ImageMagick.MagickException" /></member>
        <member name="M:ImageMagick.MagickImage.WhiteThreshold(ImageMagick.Percentage,ImageMagick.Channels)">
==========================================================================================
<summary>
Forces all pixels above the threshold into white while leaving all pixels at or below
the threshold unchanged.
</summary><param name="threshold">The threshold to use.</param><param name="channels">The channel(s) to make black.</param><exception cref="T:ImageMagick.MagickException" /></member>
        <member name="M:ImageMagick.MagickImage.WhiteThreshold(ImageMagick.Percentage)">
==========================================================================================
<summary>
Forces all pixels above the threshold into white while leaving all pixels at or below
the threshold unchanged.
</summary><param name="threshold">The threshold to use.</param><exception cref="T:ImageMagick.MagickException" /></member>
        <member name="M:ImageMagick.MagickImage.Wave(System.Double,System.Double)">
==========================================================================================
<summary>
Map image pixels to a sine wave.
</summary><param name="amplitude">The amplitude.</param><param name="length">The length of the wave.</param><exception cref="T:ImageMagick.MagickException" /></member>
        <member name="M:ImageMagick.MagickImage.Wave">
==========================================================================================
<summary>
Map image pixels to a sine wave.
</summary><exception cref="T:ImageMagick.MagickException" /></member>
        <member name="M:ImageMagick.MagickImage.Unsharpmask(System.Double,System.Double,System.Double,System.Double,ImageMagick.Channels)">
==========================================================================================
<summary>
Replace image with a sharpened version of the original image using the unsharp mask algorithm.
</summary><param name="radius">The radius of the Gaussian, in pixels, not counting the center pixel.</param><param name="sigma">The standard deviation of the Laplacian, in pixels.</param><param name="amount">The percentage of the difference between the original and the blur image
that is added back into the original.</param><param name="threshold">The threshold in pixels needed to apply the diffence amount.</param><param name="channels">The channel(s) that should be sharpened.</param><exception cref="T:ImageMagick.MagickException" /></member>
        <member name="M:ImageMagick.MagickImage.Unsharpmask(System.Double,System.Double,System.Double,System.Double)">
==========================================================================================
<summary>
Replace image with a sharpened version of the original image using the unsharp mask algorithm.
</summary><param name="radius">The radius of the Gaussian, in pixels, not counting the center pixel.</param><param name="sigma">The standard deviation of the Laplacian, in pixels.</param><param name="amount">The percentage of the difference between the original and the blur image
that is added back into the original.</param><param name="threshold">The threshold in pixels needed to apply the diffence amount.</param><exception cref="T:ImageMagick.MagickException" /></member>
        <member name="M:ImageMagick.MagickImage.Trim">
==========================================================================================
<summary>
Trim edges that are the background color from the image.
</summary><exception cref="T:ImageMagick.MagickException" /></member>
        <member name="M:ImageMagick.MagickImage.TransparentChroma(ImageMagick.MagickColor,ImageMagick.MagickColor)">
==========================================================================================
<summary>
Add matte image to image, for all the pixels that lies in between the given two colors.
</summary><exception cref="T:ImageMagick.MagickException" /></member>
        <member name="M:ImageMagick.MagickImage.Transparent(ImageMagick.MagickColor)">
==========================================================================================
<summary>
Add matte channel to image, setting pixels matching color to transparent.
</summary><param name="color">The color to make transparent.</param><exception cref="T:ImageMagick.MagickException" /></member>
        <member name="M:ImageMagick.MagickImage.TransformSkewY(System.Double)">
==========================================================================================
<summary>
Skew to use in Y axis when annotating with text or drawing.
</summary><param name="skewY">The Y skew.</param><exception cref="T:ImageMagick.MagickException" /></member>
        <member name="M:ImageMagick.MagickImage.TransformSkewX(System.Double)">
==========================================================================================
<summary>
Skew to use in X axis when annotating with text or drawing.
</summary><param name="skewX">The X skew.</param><exception cref="T:ImageMagick.MagickException" /></member>
        <member name="M:ImageMagick.MagickImage.TransformScale(System.Double,System.Double)">
==========================================================================================
<summary>
Scale to use when annotating with text or drawing.
</summary><param name="scaleX">The X coordinate scaling element.</param><param name="scaleY">The Y coordinate scaling element.</param><exception cref="T:ImageMagick.MagickException" /></member>
        <member name="M:ImageMagick.MagickImage.TransformReset">
==========================================================================================
<summary>
Reset transformation parameters to default.
</summary><exception cref="T:ImageMagick.MagickException" /></member>
        <member name="M:ImageMagick.MagickImage.TransformRotation(System.Double)">
==========================================================================================
<summary>
Rotation to use when annotating with text or drawing.
</summary><param name="angle">The angle.</param><exception cref="T:ImageMagick.MagickException" /></member>
        <member name="M:ImageMagick.MagickImage.TransformOrigin(System.Double,System.Double)">
==========================================================================================
<summary>
Origin of coordinate system to use when annotating with text or drawing.
</summary><param name="x">The X coordinate.</param><param name="y">The Y coordinate.</param><exception cref="T:ImageMagick.MagickException" /></member>
        <member name="M:ImageMagick.MagickImage.Transform(ImageMagick.MagickGeometry,ImageMagick.MagickGeometry)">
==========================================================================================
<summary>
Transform image based on image geometry.
</summary><param name="imageGeometry">The image geometry.</param><param name="cropGeometry">The crop geometry.</param><exception cref="T:ImageMagick.MagickException" /></member>
        <member name="M:ImageMagick.MagickImage.Transform(ImageMagick.MagickGeometry)">
==========================================================================================
<summary>
Transform image based on image geometry.
</summary><param name="imageGeometry">The image geometry.</param><exception cref="T:ImageMagick.MagickException" /></member>
        <member name="M:ImageMagick.MagickImage.ToString">
==========================================================================================
<summary>
Returns a string that represents the current image.
</summary></member>
        <member name="M:ImageMagick.MagickImage.ToByteArray">
==========================================================================================
<summary>
Converts this instance to a byte array.
</summary></member>
        <member name="M:ImageMagick.MagickImage.ToBitmap(System.Drawing.Imaging.ImageFormat)">
==========================================================================================
<summary>
Converts this instance to a bitmap using the specified ImageFormat. Supported formats are:
Bmp, Gif, Icon, Jpeg, Png, Tiff.
</summary></member>
        <member name="M:ImageMagick.MagickImage.ToBitmap">
==========================================================================================
<summary>
Converts this instance to a bitmap using ImageFormat.Bitmap.
</summary></member>
        <member name="M:ImageMagick.MagickImage.ToBase64">
==========================================================================================
<summary>
Converts this instance to a base64 string.
</summary></member>
        <member name="M:ImageMagick.MagickImage.Threshold(System.Double)">
==========================================================================================
<summary>
Threshold image.
</summary><param name="value">The threshold value.</param><exception cref="T:ImageMagick.MagickException" /></member>
        <member name="M:ImageMagick.MagickImage.Texture(ImageMagick.MagickImage)">
==========================================================================================
<summary>
Channel a texture on image background.
</summary><param name="image">The image to use as a texture on image background.</param><exception cref="T:ImageMagick.MagickException" /></member>
        <member name="M:ImageMagick.MagickImage.Swirl(System.Double)">
==========================================================================================
<summary>
Swirl image (image pixels are rotated by degrees).
</summary><param name="degrees">The number of degrees.</param><exception cref="T:ImageMagick.MagickException" /></member>
        <member name="M:ImageMagick.MagickImage.Strip">
==========================================================================================
<summary>
Strips an image of all profiles and comments.
</summary><exception cref="T:ImageMagick.MagickException" /></member>
        <member name="M:ImageMagick.MagickImage.Stereo(ImageMagick.MagickImage)">
==========================================================================================
<summary>
Create an image which appears in stereo when viewed with red-blue glasses (Red image on
left, blue on right)
</summary><param name="rightImage">The image to use as the right part of the resulting image.</param><exception cref="T:ImageMagick.MagickException" /></member>
        <member name="M:ImageMagick.MagickImage.Stegano(ImageMagick.MagickImage)">
==========================================================================================
<summary>
Add a digital watermark to the image (based on second image)
</summary><param name="watermark">The image to use as a watermark.</param><exception cref="T:ImageMagick.MagickException" /></member>
        <member name="M:ImageMagick.MagickImage.Statistics">
==========================================================================================
<summary>
Returns image statistics.
</summary><exception cref="T:ImageMagick.MagickException" /></member>
        <member name="M:ImageMagick.MagickImage.SparseColor(ImageMagick.Channels,ImageMagick.SparseColorMethod,System.Double[])">
==========================================================================================
<summary>
Sparse color image, given a set of coordinates, interpolates the colors found at those
coordinates, across the whole image, using various methods.
</summary><param name="channels">The channel(s) to use.</param><param name="method">The spare color method to use.</param><param name="coordinates">The coordinates to use.</param><exception cref="T:ImageMagick.MagickException" /></member>
        <member name="M:ImageMagick.MagickImage.Solarize(System.Double)">
==========================================================================================
<summary>
Solarize image (similar to effect seen when exposing a photographic film to light during
the development process)
</summary><param name="factor">The factor to use.</param><exception cref="T:ImageMagick.MagickException" /></member>
        <member name="M:ImageMagick.MagickImage.Solarize">
==========================================================================================
<summary>
Solarize image (similar to effect seen when exposing a photographic film to light during
the development process)
</summary><exception cref="T:ImageMagick.MagickException" /></member>
        <member name="M:ImageMagick.MagickImage.SigmoidalContrast(System.Boolean,System.Double,System.Double)">
==========================================================================================
<summary>
adjust the image contrast with a non-linear sigmoidal contrast algorithm
</summary><param name="sharpen">Specifies if sharpening should be used.</param><param name="contrast">The contrast to use.</param><param name="midpoint">The midpoint to use.</param><exception cref="T:ImageMagick.MagickException" /></member>
        <member name="M:ImageMagick.MagickImage.SigmoidalContrast(System.Boolean,System.Double)">
==========================================================================================
<summary>
adjust the image contrast with a non-linear sigmoidal contrast algorithm
</summary><param name="sharpen">Specifies if sharpening should be used.</param><param name="contrast">The contrast</param><exception cref="T:ImageMagick.MagickException" /></member>
        <member name="M:ImageMagick.MagickImage.Shear(System.Double,System.Double)">
==========================================================================================
<summary>
Shear image (create parallelogram by sliding image by X or Y axis).
</summary><param name="xAngle">Specifies the number of degrees to shear the image.</param><param name="yAngle">Specifies the number of degrees to shear the image.</param><exception cref="T:ImageMagick.MagickException" /></member>
        <member name="M:ImageMagick.MagickImage.Shave(System.Int32,System.Int32)">
==========================================================================================
<summary>
Shave pixels from image edges.
</summary><param name="leftRight">The number of pixels to shave left and right.</param><param name="topBottom">The number of pixels to shave top and bottom.</param><exception cref="T:ImageMagick.MagickException" /></member>
        <member name="M:ImageMagick.MagickImage.Sharpen(System.Double,System.Double,ImageMagick.Channels)">
==========================================================================================
<summary>
Sharpen pixels in image.
</summary><param name="radius">The radius of the Gaussian, in pixels, not counting the center pixel.</param><param name="sigma">The standard deviation of the Laplacian, in pixels.</param><param name="channels">The channel(s) that should be sharpened.</param></member>
        <member name="M:ImageMagick.MagickImage.Sharpen(System.Double,System.Double)">
==========================================================================================
<summary>
Sharpen pixels in image.
</summary><param name="radius">The radius of the Gaussian, in pixels, not counting the center pixel.</param><param name="sigma">The standard deviation of the Laplacian, in pixels.</param><exception cref="T:ImageMagick.MagickException" /></member>
        <member name="M:ImageMagick.MagickImage.Sharpen(ImageMagick.Channels)">
==========================================================================================
<summary>
Sharpen pixels in image.
</summary><param name="channels">The channel(s) that should be sharpened.</param><exception cref="T:ImageMagick.MagickException" /></member>
        <member name="M:ImageMagick.MagickImage.Sharpen">
==========================================================================================
<summary>
Sharpen pixels in image.
</summary><exception cref="T:ImageMagick.MagickException" /></member>
        <member name="M:ImageMagick.MagickImage.Shadow(System.Int32,System.Int32,System.Double,ImageMagick.Percentage,ImageMagick.MagickColor)">
==========================================================================================
<summary>
Simulate an image shadow.
</summary><param name="x">the shadow x-offset.</param><param name="y">the shadow y-offset.</param><param name="sigma">The standard deviation of the Gaussian, in pixels.</param><param name="alpha">Transparency percentage.</param><param name="color">The color of the shadow.</param><exception cref="T:ImageMagick.MagickException" />
=============================================================================================
</member>
        <member name="M:ImageMagick.MagickImage.Shadow(System.Int32,System.Int32,System.Double,ImageMagick.Percentage)">
==========================================================================================
<summary>
Simulate an image shadow.
</summary><param name="x">the shadow x-offset.</param><param name="y">the shadow y-offset.</param><param name="sigma">The standard deviation of the Gaussian, in pixels.</param><param name="alpha">Transparency percentage.</param><exception cref="T:ImageMagick.MagickException" />
=============================================================================================
</member>
        <member name="M:ImageMagick.MagickImage.Shadow(ImageMagick.MagickColor)">
==========================================================================================
<summary>
Simulate an image shadow.
</summary><param name="color">The color of the shadow.</param><exception cref="T:ImageMagick.MagickException" /></member>
        <member name="M:ImageMagick.MagickImage.Shadow">
==========================================================================================
<summary>
Simulate an image shadow.
</summary><exception cref="T:ImageMagick.MagickException" /></member>
        <member name="M:ImageMagick.MagickImage.Shade(System.Double,System.Double,System.Boolean)">
==========================================================================================
<summary>
Shade image using distant light source.
</summary><param name="azimuth">The light source direction.</param><param name="elevation">The light source direction.</param><param name="colorShading">Specify true to shade the intensity of each pixel.</param><exception cref="T:ImageMagick.MagickException" /></member>
        <member name="M:ImageMagick.MagickImage.Shade">
==========================================================================================
<summary>
Shade image using distant light source.
</summary><exception cref="T:ImageMagick.MagickException" /></member>
        <member name="M:ImageMagick.MagickImage.SetDefine(ImageMagick.MagickFormat,System.String,System.String)">
==========================================================================================
<summary>
Sets a format-specific option.
</summary><param name="format">The format to set the option for.</param><param name="name">The name of the option.</param><param name="value">The value of the option.</param></member>
        <member name="M:ImageMagick.MagickImage.SetDefine(ImageMagick.MagickFormat,System.String,System.Boolean)">
==========================================================================================
<summary>
Sets a format-specific option.
</summary><param name="format">The format to set the option for.</param><param name="name">The name of the option.</param><param name="flag">The value of the option.</param></member>
        <member name="M:ImageMagick.MagickImage.SetAttribute(System.String,System.String)">
==========================================================================================
<summary>
Sets a named image attribute.
</summary><param name="name">The name of the attribute.</param><param name="value">The value of the attribute.</param><exception cref="T:ImageMagick.MagickException" /></member>
        <member name="M:ImageMagick.MagickImage.SetArtifact(System.String,System.String)">
==========================================================================================
<summary>
Inserts the artifact with the specified name and value into the artifact tree of the image.
</summary><param name="name">The name of the artifact.</param><param name="value">The value of the artifact.</param><exception cref="T:ImageMagick.MagickException" /></member>
        <member name="M:ImageMagick.MagickImage.Separate(ImageMagick.Channels)">
==========================================================================================
<summary>
Separates the specified channels from the image and returns it as grayscale images.
</summary><param name="channels">The channel(s) to separates.</param><exception cref="T:ImageMagick.MagickException" /></member>
        <member name="M:ImageMagick.MagickImage.Separate">
==========================================================================================
<summary>
Separates the channels from the image and returns it as grayscale images.
</summary><exception cref="T:ImageMagick.MagickException" /></member>
        <member name="M:ImageMagick.MagickImage.Segment(System.Double,System.Double)">
==========================================================================================
<summary>
Segment (coalesce similar image components) by analyzing the histograms of the color
components and identifying units that are homogeneous with the fuzzy c-means technique.
Also uses QuantizeColorSpace and Verbose image attributes.
</summary><param name="clusterThreshold">This represents the minimum number of pixels contained in
a hexahedra before it can be considered valid (expressed as a percentage).</param><param name="smoothingThreshold">The smoothing threshold eliminates noise in the second
derivative of the histogram. As the value is increased, you can expect a smoother second
derivative</param><exception cref="T:ImageMagick.MagickException" /></member>
        <member name="M:ImageMagick.MagickImage.Segment">
==========================================================================================
<summary>
Segment (coalesce similar image components) by analyzing the histograms of the color
components and identifying units that are homogeneous with the fuzzy c-means technique.
Also uses QuantizeColorSpace and Verbose image attributes.
</summary><exception cref="T:ImageMagick.MagickException" /></member>
        <member name="M:ImageMagick.MagickImage.Scale(ImageMagick.Percentage,ImageMagick.Percentage)">
==========================================================================================
<summary>
Resize image by using simple ratio algorithm to the specified percentage.
</summary><param name="percentageWidth">The percentage of the width.</param><param name="percentageHeight">The percentage of the height.</param><exception cref="T:ImageMagick.MagickException" /></member>
        <member name="M:ImageMagick.MagickImage.Scale(ImageMagick.Percentage)">
==========================================================================================
<summary>
Resize image by using simple ratio algorithm to the specified percentage.
</summary><param name="percentage">The percentage.</param><exception cref="T:ImageMagick.MagickException" /></member>
        <member name="M:ImageMagick.MagickImage.Scale(ImageMagick.MagickGeometry)">
==========================================================================================
<summary>
Resize image by using simple ratio algorithm.
</summary><param name="geometry">The geometry to use.</param><exception cref="T:ImageMagick.MagickException" /></member>
        <member name="M:ImageMagick.MagickImage.Scale(System.Int32,System.Int32)">
==========================================================================================
<summary>
Resize image by using simple ratio algorithm.
</summary><param name="width">The new width.</param><param name="height">The new height.</param><exception cref="T:ImageMagick.MagickException" /></member>
        <member name="M:ImageMagick.MagickImage.Sample(ImageMagick.Percentage,ImageMagick.Percentage)">
==========================================================================================
<summary>
Resize image by using pixel sampling algorithm to the specified percentage.
</summary><param name="percentageWidth">The percentage of the width.</param><param name="percentageHeight">The percentage of the height.</param><exception cref="T:ImageMagick.MagickException" /></member>
        <member name="M:ImageMagick.MagickImage.Sample(ImageMagick.Percentage)">
==========================================================================================
<summary>
Resize image by using pixel sampling algorithm to the specified percentage.
</summary><param name="percentage">The percentage.</param><exception cref="T:ImageMagick.MagickException" /></member>
        <member name="M:ImageMagick.MagickImage.Sample(ImageMagick.MagickGeometry)">
==========================================================================================
<summary>
Resize image by using pixel sampling algorithm.
</summary><param name="geometry">The geometry to use.</param><exception cref="T:ImageMagick.MagickException" /></member>
        <member name="M:ImageMagick.MagickImage.Sample(System.Int32,System.Int32)">
==========================================================================================
<summary>
Resize image by using pixel sampling algorithm.
</summary><param name="width">The new width.</param><param name="height">The new height.</param><exception cref="T:ImageMagick.MagickException" /></member>
        <member name="M:ImageMagick.MagickImage.Rotate(System.Double)">
==========================================================================================
<summary>
Rotate image counter-clockwise by specified number of degrees.
</summary><param name="degrees">The number of degrees to rotate.</param><exception cref="T:ImageMagick.MagickException" /></member>
        <member name="M:ImageMagick.MagickImage.Roll(System.Int32,System.Int32)">
==========================================================================================
<summary>
Roll image (rolls image vertically and horizontally).
</summary><param name="xOffset">The X offset from origin.</param><param name="yOffset">The Y offset from origin.</param><exception cref="T:ImageMagick.MagickException" /></member>
        <member name="M:ImageMagick.MagickImage.Resize(ImageMagick.Percentage,ImageMagick.Percentage)">
==========================================================================================
<summary>
Resize image to specified percentage.
</summary><param name="percentageWidth">The percentage of the width.</param><param name="percentageHeight">The percentage of the height.</param><exception cref="T:ImageMagick.MagickException" /></member>
        <member name="M:ImageMagick.MagickImage.Resize(ImageMagick.Percentage)">
==========================================================================================
<summary>
Resize image to specified percentage.
</summary><param name="percentage">The percentage.</param><exception cref="T:ImageMagick.MagickException" /></member>
        <member name="M:ImageMagick.MagickImage.Resize(ImageMagick.MagickGeometry)">
==========================================================================================
<summary>
Resize image to specified geometry.
</summary><param name="geometry">The geometry to use.</param><exception cref="T:ImageMagick.MagickException" /></member>
        <member name="M:ImageMagick.MagickImage.Resize(System.Int32,System.Int32)">
==========================================================================================
<summary>
Resize image to specified size.
</summary><param name="width">The new width.</param><param name="height">The new height.</param><exception cref="T:ImageMagick.MagickException" /></member>
        <member name="M:ImageMagick.MagickImage.Resample(ImageMagick.Percentage,ImageMagick.Percentage)">
==========================================================================================
<summary>
Resize image in terms of its pixel size with the specified percentage.
</summary><param name="percentageWidth">The percentage of the width.</param><param name="percentageHeight">The percentage of the height.</param><exception cref="T:ImageMagick.MagickException" /></member>
        <member name="M:ImageMagick.MagickImage.Resample(ImageMagick.Percentage)">
==========================================================================================
<summary>
Resize image in terms of its pixel size with the specified percentage.
</summary><param name="percentage">The percentage.</param><exception cref="T:ImageMagick.MagickException" /></member>
        <member name="M:ImageMagick.MagickImage.Resample(ImageMagick.MagickGeometry)">
==========================================================================================
<summary>
Resize image in terms of its pixel size.
</summary><param name="geometry">The geometry to use.</param><exception cref="T:ImageMagick.MagickException" /></member>
        <member name="M:ImageMagick.MagickImage.Resample(System.Int32,System.Int32)">
==========================================================================================
<summary>
Resize image in terms of its pixel size.
</summary><param name="width">The new width.</param><param name="height">The new height.</param><exception cref="T:ImageMagick.MagickException" /></member>
        <member name="M:ImageMagick.MagickImage.RemoveProfile(System.String)">
==========================================================================================
<summary>
Remove a named profile from the image.
</summary><param name="name">The name of the profile (e.g. "ICM", "IPTC", or a generic profile name).</param><exception cref="T:ImageMagick.MagickException" /></member>
        <member name="M:ImageMagick.MagickImage.ReduceNoise(System.Int32)">
==========================================================================================
<summary>
Reduce noise in image using a noise peak elimination filter.
</summary><param name="order">The order to use.</param><exception cref="T:ImageMagick.MagickException" /></member>
        <member name="M:ImageMagick.MagickImage.ReduceNoise">
==========================================================================================
<summary>
Reduce noise in image using a noise peak elimination filter.
</summary><exception cref="T:ImageMagick.MagickException" /></member>
        <member name="M:ImageMagick.MagickImage.Read(System.IO.Stream,ImageMagick.MagickReadSettings)">
==========================================================================================
<summary>
Read single image frame.
</summary><param name="stream">The stream to read the image data from.</param><param name="readSettings">The settings to use when reading the image.</param><returns>If a warning was raised while reading the image that warning will be returned.</returns><exception cref="T:ImageMagick.MagickException" /></member>
        <member name="M:ImageMagick.MagickImage.Read(System.IO.Stream)">
==========================================================================================
<summary>
Read single image frame.
</summary><param name="stream">The stream to read the image data from.</param><returns>If a warning was raised while reading the image that warning will be returned.</returns><exception cref="T:ImageMagick.MagickException" /></member>
        <member name="M:ImageMagick.MagickImage.Read(System.String,ImageMagick.MagickReadSettings)">
==========================================================================================
<summary>
Read single vector image frame.
</summary><param name="fileName">The fully qualified name of the image file, or the relative image file name.</param><param name="readSettings">The settings to use when reading the image.</param><returns>If a warning was raised while reading the image that warning will be returned.</returns><exception cref="T:ImageMagick.MagickException" /></member>
        <member name="M:ImageMagick.MagickImage.Read(System.String)">
==========================================================================================
<summary>
Read single image frame.
</summary><param name="fileName">The fully qualified name of the image file, or the relative image file name.</param><returns>If a warning was raised while reading the image that warning will be returned.</returns><exception cref="T:ImageMagick.MagickException" /></member>
        <member name="M:ImageMagick.MagickImage.Read(System.Drawing.Bitmap)">
==========================================================================================
<summary>
Read single image frame.
</summary><param name="bitmap">The bitmap to read the image from.</param><returns>If a warning was raised while reading the image that warning will be returned.</returns><exception cref="T:ImageMagick.MagickException" /></member>
        <member name="M:ImageMagick.MagickImage.Read(System.Byte[],ImageMagick.MagickReadSettings)">
==========================================================================================
<summary>
Read single vector image frame.
</summary><param name="data">The byte array to read the image data from.</param><param name="readSettings">The settings to use when reading the image.</param><returns>If a warning was raised while reading the image that warning will be returned.</returns><exception cref="T:ImageMagick.MagickException" /></member>
        <member name="M:ImageMagick.MagickImage.Read(System.Byte[])">
==========================================================================================
<summary>
Read single image frame.
</summary><param name="data">The byte array to read the image data from.</param><returns>If a warning was raised while reading the image that warning will be returned.</returns><exception cref="T:ImageMagick.MagickException" /></member>
        <member name="M:ImageMagick.MagickImage.RandomThreshold(System.Single,System.Single,ImageMagick.Channels)">
==========================================================================================
<summary>
Changes the value of individual pixels based on the intensity of each pixel compared to a
random threshold. The result is a low-contrast, two color image.
</summary><param name="low">The low threshold.</param><param name="high">The low threshold.</param><param name="channels">The channel(s) to use.</param><exception cref="T:ImageMagick.MagickException" /></member>
        <member name="M:ImageMagick.MagickImage.RandomThreshold(System.Single,System.Single)">
==========================================================================================
<summary>
Changes the value of individual pixels based on the intensity of each pixel compared to a
random threshold. The result is a low-contrast, two color image.
</summary><param name="low">The low threshold.</param><param name="high">The low threshold.</param><exception cref="T:ImageMagick.MagickException" /></member>
        <member name="M:ImageMagick.MagickImage.RandomThreshold(ImageMagick.Percentage,ImageMagick.Percentage,ImageMagick.Channels)">
==========================================================================================
<summary>
Changes the value of individual pixels based on the intensity of each pixel compared to a
random threshold. The result is a low-contrast, two color image.
</summary><param name="percentageLow">The low threshold.</param><param name="percentageHigh">The low threshold.</param><param name="channels">The channel(s) to use.</param><exception cref="T:ImageMagick.MagickException" /></member>
        <member name="M:ImageMagick.MagickImage.RandomThreshold(ImageMagick.Percentage,ImageMagick.Percentage)">
==========================================================================================
<summary>
Changes the value of individual pixels based on the intensity of each pixel compared to a
random threshold. The result is a low-contrast, two color image.
</summary><param name="percentageLow">The low threshold.</param><param name="percentageHigh">The low threshold.</param><exception cref="T:ImageMagick.MagickException" /></member>
        <member name="M:ImageMagick.MagickImage.Raise(System.Int32)">
==========================================================================================
<summary>
Raise image (lighten or darken the edges of an image to give a 3-D raised effect).
</summary><param name="size">The size of the edges.</param><exception cref="T:ImageMagick.MagickException" /></member>
        <member name="M:ImageMagick.MagickImage.QuantumOperator(ImageMagick.Channels,ImageMagick.MagickGeometry,ImageMagick.EvaluateOperator,System.Double)">
==========================================================================================
<summary>
Apply an arithmetic or bitwise operator to the image pixel quantums.
</summary><param name="channels">The channel(s) to apply the operator on.</param><param name="geometry">The geometry to use.</param><param name="evaluateOperator">The operator.</param><param name="value">The value.</param><exception cref="T:ImageMagick.MagickException" /></member>
        <member name="M:ImageMagick.MagickImage.QuantumOperator(ImageMagick.Channels,ImageMagick.EvaluateOperator,System.Double)">
==========================================================================================
<summary>
Apply an arithmetic or bitwise operator to the image pixel quantums.
</summary><param name="channels">The channel(s) to apply the operator on.</param><param name="evaluateOperator">The operator.</param><param name="value">The value.</param><exception cref="T:ImageMagick.MagickException" /></member>
        <member name="M:ImageMagick.MagickImage.Quantize(System.Boolean)">
==========================================================================================
<summary>
Quantize image (reduce number of colors).
</summary><param name="measureError">When false is specified this method will return null.</param><exception cref="T:ImageMagick.MagickException" /></member>
        <member name="M:ImageMagick.MagickImage.Quantize">
==========================================================================================
<summary>
Quantize image (reduce number of colors).
</summary><exception cref="T:ImageMagick.MagickException" /></member>
        <member name="M:ImageMagick.MagickImage.Posterize(System.Int32,ImageMagick.Channels)">
==========================================================================================
<summary>
Reduces the image to a limited number of colors for a "poster" effect.
</summary><param name="levels">Number of color levels allowed in each channel.</param><param name="channels">The channel(s) to posterize.</param></member>
        <member name="M:ImageMagick.MagickImage.Posterize(System.Int32,System.Boolean,ImageMagick.Channels)">
==========================================================================================
<summary>
Reduces the image to a limited number of colors for a "poster" effect.
</summary><param name="levels">Number of color levels allowed in each channel.</param><param name="dither">Dither the image.</param><param name="channels">The channel(s) to posterize.</param></member>
        <member name="M:ImageMagick.MagickImage.Posterize(System.Int32,System.Boolean)">
==========================================================================================
<summary>
Reduces the image to a limited number of colors for a "poster" effect.
</summary><param name="levels">Number of color levels allowed in each channel.</param><param name="dither">Dither the image.</param></member>
        <member name="M:ImageMagick.MagickImage.Posterize(System.Int32)">
==========================================================================================
<summary>
Reduces the image to a limited number of colors for a "poster" effect.
</summary><param name="levels">Number of color levels allowed in each channel.</param></member>
        <member name="M:ImageMagick.MagickImage.Polaroid(System.String,System.Double)">
==========================================================================================
<summary>
Simulates a Polaroid picture.
</summary><param name="caption">The caption to put on the image.</param><param name="angle">The angle of image.</param><exception cref="T:ImageMagick.MagickException" /></member>
        <member name="M:ImageMagick.MagickImage.Perceptible(System.Double,ImageMagick.Channels)">
==========================================================================================
<summary>
Set each pixel whose value is less than epsilon to epsilon or -epsilon (whichever is closer)
otherwise the pixel value remains unchanged.
</summary><param name="epsilon">The epsilon threshold.</param><param name="channels">The channel(s) to perceptible.</param><exception cref="T:ImageMagick.MagickException" />
=============================================================================================
</member>
        <member name="M:ImageMagick.MagickImage.Perceptible(System.Double)">
==========================================================================================
<summary>
Set each pixel whose value is less than epsilon to epsilon or -epsilon (whichever is closer)
otherwise the pixel value remains unchanged.
</summary><param name="epsilon">The epsilon threshold.</param><exception cref="T:ImageMagick.MagickException" /></member>
        <member name="M:ImageMagick.MagickImage.Opaque(ImageMagick.MagickColor,ImageMagick.MagickColor)">
==========================================================================================
<summary>
Changes any pixel that matches opaqueColor with the color defined by penColor.
</summary><param name="opaqueColor">The color to replace.</param><param name="penColor">The color to replace opaque color with.</param><exception cref="T:ImageMagick.MagickException" /></member>
        <member name="M:ImageMagick.MagickImage.OilPaint(System.Double)">
==========================================================================================
<summary>
Oilpaint image (image looks like oil painting)
</summary><param name="radius">The radius of the circular neighborhood.</param><exception cref="T:ImageMagick.MagickException" /></member>
        <member name="M:ImageMagick.MagickImage.OilPaint">
==========================================================================================
<summary>
Oilpaint image (image looks like oil painting)
</summary></member>
        <member name="M:ImageMagick.MagickImage.Normalize">
==========================================================================================
<summary>
Normalize image (increase contrast by normalizing the pixel values to span the full range
of color values)
</summary><exception cref="T:ImageMagick.MagickException" /></member>
        <member name="M:ImageMagick.MagickImage.Negate(ImageMagick.Channels,System.Boolean)">
==========================================================================================
<summary>
Negate colors in image for the specified channel.
</summary><param name="channels">The channel(s) that should be negated.</param><param name="onlyGrayscale">Use true to negate only the grayscale colors.</param><exception cref="T:ImageMagick.MagickException" /></member>
        <member name="M:ImageMagick.MagickImage.Negate(ImageMagick.Channels)">
==========================================================================================
<summary>
Negate colors in image for the specified channel.
</summary><param name="channels">The channel(s) that should be negated.</param><exception cref="T:ImageMagick.MagickException" /></member>
        <member name="M:ImageMagick.MagickImage.Negate(System.Boolean)">
==========================================================================================
<summary>
Negate colors in image.
</summary><param name="onlyGrayscale">Use true to negate only the grayscale colors.</param><exception cref="T:ImageMagick.MagickException" /></member>
        <member name="M:ImageMagick.MagickImage.Negate">
==========================================================================================
<summary>
Negate colors in image.
</summary><exception cref="T:ImageMagick.MagickException" /></member>
        <member name="M:ImageMagick.MagickImage.MotionBlur(System.Double,System.Double,System.Double)">
==========================================================================================
<summary>
Motion blur image with specified blur factor.
</summary><param name="radius">The radius of the Gaussian, in pixels, not counting the center pixel.</param><param name="sigma">The standard deviation of the Laplacian, in pixels.</param><param name="angle">The angle the object appears to be comming from (zero degrees is from the right).</param><exception cref="T:ImageMagick.MagickException" /></member>
        <member name="M:ImageMagick.MagickImage.Modulate(ImageMagick.Percentage,ImageMagick.Percentage,ImageMagick.Percentage)">
==========================================================================================
<summary>
Modulate percent hue, saturation, and brightness of an image.
</summary><param name="brightness">The brightness percentage.</param><param name="saturation">The saturation percentage.</param><param name="hue">The hue percentage.</param><exception cref="T:ImageMagick.MagickException" /></member>
        <member name="M:ImageMagick.MagickImage.Minify">
==========================================================================================
<summary>
Reduce image by integral size.
</summary><exception cref="T:ImageMagick.MagickException" /></member>
        <member name="M:ImageMagick.MagickImage.MedianFilter(System.Double)">
==========================================================================================
<summary>
Filter image by replacing each pixel component with the median color in a circular neighborhood.
</summary><param name="radius">The radius of the pixel neighborhood.</param><exception cref="T:ImageMagick.MagickException" /></member>
        <member name="M:ImageMagick.MagickImage.MedianFilter">
==========================================================================================
<summary>
Filter image by replacing each pixel component with the median color in a circular neighborhood.
</summary><exception cref="T:ImageMagick.MagickException" /></member>
        <member name="M:ImageMagick.MagickImage.Map(ImageMagick.MagickImage,System.Boolean)">
==========================================================================================
<summary>
Remap image colors with closest color from reference image.
</summary><param name="image">The image to use.</param><param name="dither">Dither the image.</param><exception cref="T:ImageMagick.MagickException" /></member>
        <member name="M:ImageMagick.MagickImage.Map(ImageMagick.MagickImage)">
==========================================================================================
<summary>
Remap image colors with closest color from reference image.
</summary><param name="image">The image to use.</param><exception cref="T:ImageMagick.MagickException" /></member>
        <member name="M:ImageMagick.MagickImage.Magnify">
==========================================================================================
<summary>
Magnify image by integral size.
</summary><exception cref="T:ImageMagick.MagickException" /></member>
        <member name="M:ImageMagick.MagickImage.Lower(System.Int32)">
==========================================================================================
<summary>
Lower image (lighten or darken the edges of an image to give a 3-D lowered effect).
</summary><param name="size">The size of the edges.</param><exception cref="T:ImageMagick.MagickException" /></member>
        <member name="M:ImageMagick.MagickImage.LiquidRescale(ImageMagick.MagickGeometry)">
==========================================================================================
<summary>
Rescales image with seam carving.
</summary><param name="geometry">The geometry to use.</param><exception cref="T:ImageMagick.MagickException" /></member>
        <member name="M:ImageMagick.MagickImage.LinearStretch(ImageMagick.Percentage,ImageMagick.Percentage)">
==========================================================================================
<summary>
Discards any pixels below the black point and above the white point and levels the remaining pixels.
</summary><param name="blackPoint">The black point.</param><param name="whitePoint">The white point.</param><exception cref="T:ImageMagick.MagickException" /></member>
        <member name="M:ImageMagick.MagickImage.LevelColors(ImageMagick.MagickColor,ImageMagick.MagickColor,ImageMagick.Channels)">
==========================================================================================
<summary>
Maps the given color to "black" and "white" values, linearly spreading out the colors, and
level values on a channel by channel bases, as per level(). The given colors allows you to
specify different level ranges for each of the color channels separately.
</summary><param name="blackColor">The color to map black to/from</param><param name="whiteColor">The color to map white to/from</param><param name="channels">The channel(s) to level.</param><exception cref="T:ImageMagick.MagickException" />
=============================================================================================
</member>
        <member name="M:ImageMagick.MagickImage.LevelColors(ImageMagick.MagickColor,ImageMagick.MagickColor,System.Boolean,ImageMagick.Channels)">
==========================================================================================
<summary>
Maps the given color to "black" and "white" values, linearly spreading out the colors, and
level values on a channel by channel bases, as per level(). The given colors allows you to
specify different level ranges for each of the color channels separately.
</summary><param name="blackColor">The color to map black to/from</param><param name="whiteColor">The color to map white to/from</param><param name="invert">If true map the colors (levelize), rather than from (level)</param><param name="channels">The channel(s) to level.</param><exception cref="T:ImageMagick.MagickException" />
=============================================================================================
</member>
        <member name="M:ImageMagick.MagickImage.LevelColors(ImageMagick.MagickColor,ImageMagick.MagickColor,System.Boolean)">
==========================================================================================
<summary>
Maps the given color to "black" and "white" values, linearly spreading out the colors, and
level values on a channel by channel bases, as per level(). The given colors allows you to
specify different level ranges for each of the color channels separately.
</summary><param name="blackColor">The color to map black to/from</param><param name="whiteColor">The color to map white to/from</param><param name="invert">If true map the colors (levelize), rather than from (level)</param><exception cref="T:ImageMagick.MagickException" /></member>
        <member name="M:ImageMagick.MagickImage.LevelColors(ImageMagick.MagickColor,ImageMagick.MagickColor)">
==========================================================================================
<summary>
Maps the given color to "black" and "white" values, linearly spreading out the colors, and
level values on a channel by channel bases, as per level(). The given colors allows you to
specify different level ranges for each of the color channels separately.
</summary><param name="blackColor">The color to map black to/from</param><param name="whiteColor">The color to map white to/from</param><exception cref="T:ImageMagick.MagickException" /></member>
        <member name="M:ImageMagick.MagickImage.Level(System.Single,System.Single,System.Double,ImageMagick.Channels)">
==========================================================================================
<summary>
Adjust the levels of the image by scaling the colors falling between specified white and
black points to the full available quantum range.
</summary><param name="blackPoint">The darkest color in the image. Colors darker are set to zero.</param><param name="whitePoint">The lightest color in the image. Colors brighter are set to the maximum quantum value.</param><param name="midpoint">The gamma correction to apply to the image. (Useful range of 0 to 10)</param><param name="channels">The channel(s) to level.</param><exception cref="T:ImageMagick.MagickException" /></member>
        <member name="M:ImageMagick.MagickImage.Level(System.Single,System.Single,System.Double)">
==========================================================================================
<summary>
Adjust the levels of the image by scaling the colors falling between specified white and
black points to the full available quantum range.
</summary><param name="blackPoint">The darkest color in the image. Colors darker are set to zero.</param><param name="whitePoint">The lightest color in the image. Colors brighter are set to the maximum quantum value.</param><param name="midpoint">The gamma correction to apply to the image. (Useful range of 0 to 10)</param><exception cref="T:ImageMagick.MagickException" /></member>
        <member name="M:ImageMagick.MagickImage.Level(System.Single,System.Single,ImageMagick.Channels)">
==========================================================================================
<summary>
Adjust the levels of the image by scaling the colors falling between specified white and
black points to the full available quantum range. Uses a midpoint of 1.0.
</summary><param name="blackPoint">The darkest color in the image. Colors darker are set to zero.</param><param name="whitePoint">The lightest color in the image. Colors brighter are set to the maximum quantum value.</param><param name="channels">The channel(s) to level.</param><exception cref="T:ImageMagick.MagickException" /></member>
        <member name="M:ImageMagick.MagickImage.Level(System.Single,System.Single)">
==========================================================================================
<summary>
Adjust the levels of the image by scaling the colors falling between specified white and
black points to the full available quantum range. Uses a midpoint of 1.0.
</summary><param name="blackPoint">The darkest color in the image. Colors darker are set to zero.</param><param name="whitePoint">The lightest color in the image. Colors brighter are set to the maximum quantum value.</param><exception cref="T:ImageMagick.MagickException" /></member>
        <member name="M:ImageMagick.MagickImage.InverseFourierTransform(ImageMagick.MagickImage,System.Boolean)">
==========================================================================================
<summary>
Implements the inverse discrete Fourier transform (DFT) of the image either as a magnitude
phase or real / imaginary image pair.
</summary><param name="image">The image to use.</param><param name="magnitude">Magnitude phase or real / imaginary image pair.</param><exception cref="T:ImageMagick.MagickException" /></member>
        <member name="M:ImageMagick.MagickImage.InverseFourierTransform(ImageMagick.MagickImage)">
==========================================================================================
<summary>
Implements the inverse discrete Fourier transform (DFT) of the image as a magnitude phase.
</summary><param name="image">The image to use.</param><exception cref="T:ImageMagick.MagickException" /></member>
        <member name="M:ImageMagick.MagickImage.Implode(System.Double)">
==========================================================================================
<summary>
Implode image (special effect).
</summary><param name="factor">The extent of the implosion.</param><exception cref="T:ImageMagick.MagickException" /></member>
        <member name="M:ImageMagick.MagickImage.Histogram">
==========================================================================================
<summary>
Creates a color color histogram.
</summary><exception cref="T:ImageMagick.MagickException" /></member>
        <member name="M:ImageMagick.MagickImage.HaldClut(ImageMagick.MagickImage)">
==========================================================================================
<summary>
Apply a color lookup table (Hald CLUT) to the image.
</summary><param name="image">The image to use.</param><exception cref="T:ImageMagick.MagickException" /></member>
        <member name="M:ImageMagick.MagickImage.GetWritablePixels(System.Int32,System.Int32,System.Int32,System.Int32)">
==========================================================================================
<summary>
Returns a writable pixel collection that can be used to access the pixels of this image.
</summary><param name="x">The X coordinate.</param><param name="y">The Y coordinate.</param><param name="width">The width of the pixel area.</param><param name="height">The height of the pixel area.</param><exception cref="T:ImageMagick.MagickException" /></member>
        <member name="M:ImageMagick.MagickImage.GetWritablePixels">
==========================================================================================
<summary>
Returns a writable pixel collection that can be used to access the pixels of this image.
</summary><exception cref="T:ImageMagick.MagickException" /></member>
        <member name="M:ImageMagick.MagickImage.GetReadOnlyPixels(System.Int32,System.Int32,System.Int32,System.Int32)">
==========================================================================================
<summary>
Returns a read-only pixel collection that can be used to access the pixels of this image.
</summary><param name="x">The X coordinate.</param><param name="y">The Y coordinate.</param><param name="width">The width of the pixel area.</param><param name="height">The height of the pixel area.</param><exception cref="T:ImageMagick.MagickException" /></member>
        <member name="M:ImageMagick.MagickImage.GetReadOnlyPixels">
==========================================================================================
<summary>
Returns a read-only pixel collection that can be used to access the pixels of this image.
</summary><exception cref="T:ImageMagick.MagickException" /></member>
        <member name="M:ImageMagick.MagickImage.GetProfile(System.String)">
==========================================================================================
<summary>
Retrieve a named profile from the image.
</summary><param name="name">The name of the profile (e.g. "ICM", "IPTC", or a generic profile name).</param><exception cref="T:ImageMagick.MagickException" /></member>
        <member name="M:ImageMagick.MagickImage.GetOption(ImageMagick.MagickFormat,System.String)">
==========================================================================================
<summary>
Gets a format-specific option.
</summary><param name="format">The format to get the option for.</param><param name="name">The name of the option.</param></member>
        <member name="M:ImageMagick.MagickImage.GetIptcProfile">
==========================================================================================
<summary>
Retrieve the iptc profile from the image.
</summary><exception cref="T:ImageMagick.MagickException" /></member>
        <member name="M:ImageMagick.MagickImage.GetHashCode">
==========================================================================================
<summary>
Servers as a hash of this type.
</summary></member>
        <member name="M:ImageMagick.MagickImage.GetExifProfile">
==========================================================================================
<summary>
Retrieve the exif profile from the image.
</summary><exception cref="T:ImageMagick.MagickException" /></member>
        <member name="M:ImageMagick.MagickImage.Get8BimProfile">
==========================================================================================
<summary>
Retrieve the 8bim profile from the image.
</summary><exception cref="T:ImageMagick.MagickException" /></member>
        <member name="M:ImageMagick.MagickImage.GetColorProfile">
==========================================================================================
<summary>
Retrieve the color profile from the image.
</summary><exception cref="T:ImageMagick.MagickException" /></member>
        <member name="M:ImageMagick.MagickImage.GetAttribute(System.String)">
==========================================================================================
<summary>
Returns the value of a named image attribute.
</summary><param name="name">The name of the attribute.</param></member>
        <member name="M:ImageMagick.MagickImage.GetArtifact(System.String)">
==========================================================================================
<summary>
Returns the value of the artifact with the specified name.
</summary><param name="name">The name of the artifact.</param></member>
        <member name="M:ImageMagick.MagickImage.GaussianBlur(System.Double,System.Double,ImageMagick.Channels)">
==========================================================================================
<summary>
Gaussian blur image.
</summary><param name="width">The number of neighbor pixels to be included in the convolution.</param><param name="sigma">The standard deviation of the gaussian bell curve.</param><param name="channels">The channel(s) to blur.</param><exception cref="T:ImageMagick.MagickException" /></member>
        <member name="M:ImageMagick.MagickImage.GaussianBlur(System.Double,System.Double)">
==========================================================================================
<summary>
Gaussian blur image.
</summary><param name="width">The number of neighbor pixels to be included in the convolution.</param><param name="sigma">The standard deviation of the gaussian bell curve.</param><exception cref="T:ImageMagick.MagickException" /></member>
        <member name="M:ImageMagick.MagickImage.Gamma(System.Double,System.Double,System.Double)">
==========================================================================================
<summary>
Gamma correct image.
</summary><param name="gammeRed">The image gamma for the red channel.</param><param name="gammeGreen">The image gamma for the green channel.</param><param name="gammeBlue">The image gamma for the blue channel.</param><exception cref="T:ImageMagick.MagickException" /></member>
        <member name="M:ImageMagick.MagickImage.Gamma(System.Double)">
==========================================================================================
<summary>
Gamma correct image.
</summary><param name="value">The image gamma.</param><exception cref="T:ImageMagick.MagickException" /></member>
        <member name="M:ImageMagick.MagickImage.Gamma">
==========================================================================================
<summary>
Gamma level of the image.
</summary><exception cref="T:ImageMagick.MagickException" /></member>
        <member name="M:ImageMagick.MagickImage.Fx(System.String,ImageMagick.Channels)">
==========================================================================================
<summary>
Applies a mathematical expression to the image.
</summary><param name="expression">The expression to apply.</param><param name="channels">The channel(s) to apply the expression to.</param><exception cref="T:ImageMagick.MagickException" /></member>
        <member name="M:ImageMagick.MagickImage.Fx(System.String)">
==========================================================================================
<summary>
Applies a mathematical expression to the image.
</summary><param name="expression">The expression to apply.</param><exception cref="T:ImageMagick.MagickException" /></member>
        <member name="M:ImageMagick.MagickImage.FromBase64(System.String)">
==========================================================================================
<summary>
Initializes a new instance of the MagickImage class using the specified base64 string.
</summary><param name="value">The base64 string to load the image from.</param></member>
        <member name="M:ImageMagick.MagickImage.Frame(System.Int32,System.Int32,System.Int32,System.Int32)">
==========================================================================================
<summary>
Frame image with the specified with, height, innerBevel and outerBevel.
</summary><param name="width">The width of the frame.</param><param name="height">The height of the frame.</param><param name="innerBevel">The inner bevel of the frame.</param><param name="outerBevel">The outer bevel of the frame.</param><exception cref="T:ImageMagick.MagickException" /></member>
        <member name="M:ImageMagick.MagickImage.Frame(System.Int32,System.Int32)">
==========================================================================================
<summary>
Frame image with the specified with and height.
</summary><param name="width">The width of the frame.</param><param name="height">The height of the frame.</param><exception cref="T:ImageMagick.MagickException" /></member>
        <member name="M:ImageMagick.MagickImage.Frame(ImageMagick.MagickGeometry)">
==========================================================================================
<summary>
Frame image with the specified geometry.
</summary><param name="geometry">The geometry of the frame.</param><exception cref="T:ImageMagick.MagickException" /></member>
        <member name="M:ImageMagick.MagickImage.Frame">
==========================================================================================
<summary>
Frame image with the default geometry (25x25+6+6).
</summary><exception cref="T:ImageMagick.MagickException" /></member>
        <member name="M:ImageMagick.MagickImage.FontTypeMetrics(System.String)">
==========================================================================================
<summary>
Obtain font metrics for text string given current font, pointsize, and density settings.
</summary><exception cref="T:ImageMagick.MagickException" /></member>
        <member name="M:ImageMagick.MagickImage.Flop">
==========================================================================================
<summary>
Flop image (reflect each scanline in the horizontal direction).
</summary><exception cref="T:ImageMagick.MagickException" /></member>
        <member name="M:ImageMagick.MagickImage.FloodFill(ImageMagick.MagickImage,ImageMagick.MagickGeometry,ImageMagick.MagickColor)">
==========================================================================================
<summary>
Flood-fill texture across pixels that match the color of the target pixel and are neighbors
of the target pixel. Uses current fuzz setting when determining color match.
</summary><param name="image">The image to use.</param><param name="geometry">The position of the pixel.</param><param name="borderColor">The color of the border.</param><exception cref="T:ImageMagick.MagickException" /></member>
        <member name="M:ImageMagick.MagickImage.FloodFill(ImageMagick.MagickImage,ImageMagick.MagickGeometry)">
==========================================================================================
<summary>
Flood-fill texture across pixels that match the color of the target pixel and are neighbors
of the target pixel. Uses current fuzz setting when determining color match.
</summary><param name="image">The image to use.</param><param name="geometry">The position of the pixel.</param><exception cref="T:ImageMagick.MagickException" /></member>
        <member name="M:ImageMagick.MagickImage.FloodFill(ImageMagick.MagickImage,System.Int32,System.Int32,ImageMagick.MagickColor)">
==========================================================================================
<summary>
Flood-fill texture across pixels that match the color of the target pixel and are neighbors
of the target pixel. Uses current fuzz setting when determining color match.
</summary><param name="image">The image to use.</param><param name="x">The X coordinate.</param><param name="y">The Y coordinate.</param><param name="borderColor">The color of the border.</param><exception cref="T:ImageMagick.MagickException" /></member>
        <member name="M:ImageMagick.MagickImage.FloodFill(ImageMagick.MagickImage,System.Int32,System.Int32)">
==========================================================================================
<summary>
Flood-fill texture across pixels that match the color of the target pixel and are neighbors
of the target pixel. Uses current fuzz setting when determining color match.
</summary><param name="image">The image to use.</param><param name="x">The X coordinate.</param><param name="y">The Y coordinate.</param><exception cref="T:ImageMagick.MagickException" /></member>
        <member name="M:ImageMagick.MagickImage.FloodFill(ImageMagick.MagickColor,ImageMagick.MagickGeometry,ImageMagick.MagickColor)">
==========================================================================================
<summary>
Flood-fill color across pixels that match the color of the target pixel and are neighbors
of the target pixel. Uses current fuzz setting when determining color match.
</summary><param name="color">The color to use.</param><param name="geometry">The position of the pixel.</param><param name="borderColor">The color of the border.</param><exception cref="T:ImageMagick.MagickException" /></member>
        <member name="M:ImageMagick.MagickImage.FloodFill(ImageMagick.MagickColor,ImageMagick.MagickGeometry)">
==========================================================================================
<summary>
Flood-fill color across pixels that match the color of the  target pixel and are neighbors
of the target pixel. Uses current fuzz setting when determining color match.
</summary><param name="color">The color to use.</param><param name="geometry">The position of the pixel.</param><exception cref="T:ImageMagick.MagickException" /></member>
        <member name="M:ImageMagick.MagickImage.FloodFill(ImageMagick.MagickColor,System.Int32,System.Int32,ImageMagick.MagickColor)">
==========================================================================================
<summary>
Flood-fill color across pixels that match the color of the  target pixel and are neighbors
of the target pixel. Uses current fuzz setting when determining color match.
</summary><param name="color">The color to use.</param><param name="x">The X coordinate.</param><param name="y">The Y coordinate.</param><param name="borderColor">The color of the border.</param><exception cref="T:ImageMagick.MagickException" /></member>
        <member name="M:ImageMagick.MagickImage.FloodFill(ImageMagick.MagickColor,System.Int32,System.Int32)">
==========================================================================================
<summary>
Flood-fill color across pixels that match the color of the  target pixel and are neighbors
of the target pixel. Uses current fuzz setting when determining color match.
</summary><param name="color">The color to use.</param><param name="x">The X coordinate.</param><param name="y">The Y coordinate.</param><exception cref="T:ImageMagick.MagickException" /></member>
        <member name="M:ImageMagick.MagickImage.FloodFill(System.Int32,System.Int32,System.Int32,ImageMagick.PaintMethod)">
==========================================================================================
<summary>
Floodfill pixels matching color (within fuzz factor) of target pixel(x,y) with replacement
alpha value using method.
</summary><param name="alpha">The alpha to use.</param><param name="x">The X coordinate.</param><param name="y">The Y coordinate.</param><param name="paintMethod">The paint method to use.</param><exception cref="T:ImageMagick.MagickException" /></member>
        <member name="M:ImageMagick.MagickImage.Flip">
==========================================================================================
<summary>
Flip image (reflect each scanline in the vertical direction).
</summary><exception cref="T:ImageMagick.MagickException" /></member>
        <member name="M:ImageMagick.MagickImage.Extent(ImageMagick.MagickGeometry,ImageMagick.Gravity,ImageMagick.MagickColor)">
==========================================================================================
<summary>
Extend the image as defined by the geometry.
</summary><param name="geometry">The geometry to extend the image to.</param><param name="gravity">The placement gravity.</param><param name="backgroundColor">The background color to use.</param><exception cref="T:ImageMagick.MagickException" /></member>
        <member name="M:ImageMagick.MagickImage.Extent(ImageMagick.MagickGeometry,ImageMagick.Gravity)">
==========================================================================================
<summary>
Extend the image as defined by the geometry.
</summary><param name="geometry">The geometry to extend the image to.</param><param name="gravity">The placement gravity.</param><exception cref="T:ImageMagick.MagickException" /></member>
        <member name="M:ImageMagick.MagickImage.Extent(ImageMagick.MagickGeometry,ImageMagick.MagickColor)">
==========================================================================================
<summary>
Extend the image as defined by the geometry.
</summary><param name="geometry">The geometry to extend the image to.</param><param name="backgroundColor">The background color to use.</param><exception cref="T:ImageMagick.MagickException" /></member>
        <member name="M:ImageMagick.MagickImage.Extent(ImageMagick.MagickGeometry)">
==========================================================================================
<summary>
Extend the image as defined by the geometry.
</summary><param name="geometry">The geometry to extend the image to.</param><exception cref="T:ImageMagick.MagickException" /></member>
        <member name="M:ImageMagick.MagickImage.Extent(System.Int32,System.Int32,ImageMagick.Gravity,ImageMagick.MagickColor)">
==========================================================================================
<summary>
Extend the image as defined by the width and height.
</summary><param name="width">The width to extend the image to.</param><param name="height">The height to extend the image to.</param><param name="gravity">The placement gravity.</param><param name="backgroundColor">The background color to use.</param><exception cref="T:ImageMagick.MagickException" /></member>
        <member name="M:ImageMagick.MagickImage.Extent(System.Int32,System.Int32,ImageMagick.Gravity)">
==========================================================================================
<summary>
Extend the image as defined by the width and height.
</summary><param name="width">The width to extend the image to.</param><param name="height">The height to extend the image to.</param><param name="gravity">The placement gravity.</param><exception cref="T:ImageMagick.MagickException" /></member>
        <member name="M:ImageMagick.MagickImage.Extent(System.Int32,System.Int32,ImageMagick.MagickColor)">
==========================================================================================
<summary>
Extend the image as defined by the width and height.
</summary><param name="width">The width to extend the image to.</param><param name="height">The height to extend the image to.</param><param name="backgroundColor">The background color to use.</param><exception cref="T:ImageMagick.MagickException" /></member>
        <member name="M:ImageMagick.MagickImage.Extent(System.Int32,System.Int32)">
==========================================================================================
<summary>
Extend the image as defined by the width and height.
</summary><param name="width">The width to extend the image to.</param><param name="height">The height to extend the image to.</param><exception cref="T:ImageMagick.MagickException" /></member>
        <member name="M:ImageMagick.MagickImage.Equals(ImageMagick.MagickImage)">
==========================================================================================
<summary>
Determines whether the specified image is equal to the current image.
</summary><param name="other">The image to compare this image with.</param></member>
        <member name="M:ImageMagick.MagickImage.Equals(System.Object)">
==========================================================================================
<summary>
Determines whether the specified object is equal to the current image.
</summary><param name="obj">The object to compare this image with.</param></member>
        <member name="M:ImageMagick.MagickImage.Equalize">
==========================================================================================
<summary>
Applies a histogram equalization to the image.
</summary><exception cref="T:ImageMagick.MagickException" /></member>
        <member name="M:ImageMagick.MagickImage.Enhance">
==========================================================================================
<summary>
Applies a digital filter that improves the quality of a noisy image.
</summary><exception cref="T:ImageMagick.MagickException" /></member>
        <member name="M:ImageMagick.MagickImage.EncodingGeometry">
==========================================================================================
<summary>
Preferred size of the image when encoding.
</summary><exception cref="T:ImageMagick.MagickException" /></member>
        <member name="M:ImageMagick.MagickImage.Encipher(System.String)">
==========================================================================================
<summary>
Converts pixels to cipher-pixels.
</summary><exception cref="T:ImageMagick.MagickException" /></member>
        <member name="M:ImageMagick.MagickImage.Emboss(System.Double,System.Double)">
==========================================================================================
<summary>
Emboss image (hilight edges with 3D effect).
</summary><param name="radius">The radius of the Gaussian, in pixels, not counting the center pixel.</param><param name="sigma">The standard deviation of the Laplacian, in pixels.</param><exception cref="T:ImageMagick.MagickException" /></member>
        <member name="M:ImageMagick.MagickImage.Emboss">
==========================================================================================
<summary>
Emboss image (hilight edges with 3D effect) with default value (0x1).
</summary><exception cref="T:ImageMagick.MagickException" /></member>
        <member name="M:ImageMagick.MagickImage.Edge(System.Double)">
==========================================================================================
<summary>
Edge image (hilight edges in image).
</summary><param name="radius">The radius of the pixel neighborhood.</param><exception cref="T:ImageMagick.MagickException" /></member>
        <member name="M:ImageMagick.MagickImage.Draw(System.Collections.Generic.IEnumerable`1{ImageMagick.Drawable})">
==========================================================================================
<summary>
Draw on image using a collection of drawables.
</summary><param name="drawables">The drawables to draw on the image.</param><exception cref="T:ImageMagick.MagickException" /></member>
        <member name="M:ImageMagick.MagickImage.Draw(ImageMagick.Drawable[])">
==========================================================================================
<summary>
Draw on image using one or more drawables.
</summary><param name="drawables">The drawable(s) to draw on the image.</param><exception cref="T:ImageMagick.MagickException" /></member>
        <member name="M:ImageMagick.MagickImage.Distort(ImageMagick.DistortMethod,System.Double[],System.Boolean)">
==========================================================================================
<summary>
Distorts an image using various distortion methods, by mapping color lookups of the source
image to a new destination image usually of the same size as the source image, unless
'bestfit' is set to true.
</summary><param name="method">The distortion method to use.</param><param name="arguments">An array containing the arguments for the distortion.</param><param name="bestfit">Attempt to 'bestfit' the size of the resulting image.</param><exception cref="T:ImageMagick.MagickException" /></member>
        <member name="M:ImageMagick.MagickImage.Distort(ImageMagick.DistortMethod,System.Double[])">
==========================================================================================
<summary>
Distorts an image using various distortion methods, by mapping color lookups of the source
image to a new destination image of the same size as the source image.
</summary><param name="method">The distortion method to use.</param><param name="arguments">An array containing the arguments for the distortion.</param><exception cref="T:ImageMagick.MagickException" /></member>
        <member name="M:ImageMagick.MagickImage.Despeckle">
==========================================================================================
<summary>
Despeckle image (reduce speckle noise).
</summary><exception cref="T:ImageMagick.MagickException" /></member>
        <member name="M:ImageMagick.MagickImage.Deskew(ImageMagick.Percentage)">
==========================================================================================
<summary>
Removes skew from the image. Skew is an artifact that occurs in scanned images because of
the camera being misaligned, imperfections in the scanning or surface, or simply because
the paper was not placed completely flat when scanned. The value of threshold ranges
from 0 to QuantumRange.
</summary><param name="threshold">The threshold.</param><exception cref="T:ImageMagick.MagickException" /></member>
        <member name="M:ImageMagick.MagickImage.Decipher(System.String)">
==========================================================================================
<summary>
Converts cipher pixels to plain pixels.
</summary><param name="passphrase">The password that was used to encrypt the image.</param><exception cref="T:ImageMagick.MagickException" /></member>
        <member name="M:ImageMagick.MagickImage.CycleColormap(System.Int32)">
==========================================================================================
<summary>
Displaces an image's colormap by a given number of positions.
</summary><param name="amount">Displace the colormap this amount.</param><exception cref="T:ImageMagick.MagickException" /></member>
        <member name="M:ImageMagick.MagickImage.Crop(System.Int32,System.Int32,ImageMagick.Gravity)">
==========================================================================================
<summary>
Crop image (subregion of original image).
</summary><param name="width">The width of the subregion.</param><param name="height">The height of the subregion.</param><param name="gravity">The position where the cropping should start from.</param><exception cref="T:ImageMagick.MagickException" /></member>
        <member name="M:ImageMagick.MagickImage.Crop(System.Int32,System.Int32)">
==========================================================================================
<summary>
Crop image (subregion of original image) using CropPosition.Center.
</summary><param name="width">The width of the subregion.</param><param name="height">The height of the subregion.</param><exception cref="T:ImageMagick.MagickException" /></member>
        <member name="M:ImageMagick.MagickImage.Crop(ImageMagick.MagickGeometry)">
==========================================================================================
<summary>
Crop image (subregion of original image).
</summary><param name="geometry">The subregion to crop.</param><exception cref="T:ImageMagick.MagickException" /></member>
        <member name="M:ImageMagick.MagickImage.Convolve(ImageMagick.ConvolveMatrix)">
            <summary>
Convolve image. Applies a user-specified convolution to the image.
</summary>
            <exception cref="T:ImageMagick.MagickException" />
        </member>
        <member name="M:ImageMagick.MagickImage.Contrast(System.Boolean)">
            <summary>
Contrast image (enhance intensity differences in image)
</summary>
            <param name="enhance">Use true to enhance the contrast and false to reduce the contrast.</param>
            <exception cref="T:ImageMagick.MagickException" />
        </member>
        <member name="M:ImageMagick.MagickImage.Contrast">
            <summary>
Contrast image (enhance intensity differences in image)
</summary>
            <exception cref="T:ImageMagick.MagickException" />
        </member>
        <member name="M:ImageMagick.MagickImage.Composite(ImageMagick.MagickImage,ImageMagick.Gravity,ImageMagick.CompositeOperator,System.String)">
            <summary>
Compose an image onto another at specified offset using the specified algorithm.
</summary>
            <param name="image">The image to composite with this image.</param>
            <param name="gravity">The placement gravity.</param>
            <param name="compose">The algorithm to use.</param>
            <param name="args">The arguments for the algorithm (compose:args).</param>
            <exception cref="T:ImageMagick.MagickException" />
        </member>
        <member name="M:ImageMagick.MagickImage.Composite(ImageMagick.MagickImage,ImageMagick.Gravity,ImageMagick.CompositeOperator)">
            <summary>
Compose an image onto another at specified offset using the specified algorithm.
</summary>
            <param name="image">The image to composite with this image.</param>
            <param name="gravity">The placement gravity.</param>
            <param name="compose">The algorithm to use.</param>
            <exception cref="T:ImageMagick.MagickException" />
        </member>
        <member name="M:ImageMagick.MagickImage.Composite(ImageMagick.MagickImage,ImageMagick.Gravity)">
            <summary>
Compose an image onto another at specified offset using the 'In' operator.
</summary>
            <param name="image">The image to composite with this image.</param>
            <param name="gravity">The placement gravity.</param>
            <exception cref="T:ImageMagick.MagickException" />
        </member>
        <member name="M:ImageMagick.MagickImage.Composite(ImageMagick.MagickImage,ImageMagick.MagickGeometry,ImageMagick.CompositeOperator,System.String)">
            <summary>
Compose an image onto another at specified offset using the specified algorithm.
</summary>
            <param name="image">The image to composite with this image.</param>
            <param name="offset">The offset from origin.</param>
            <param name="compose">The algorithm to use.</param>
            <param name="args">The arguments for the algorithm (compose:args).</param>
            <exception cref="T:ImageMagick.MagickException" />
        </member>
        <member name="M:ImageMagick.MagickImage.Composite(ImageMagick.MagickImage,ImageMagick.MagickGeometry,ImageMagick.CompositeOperator)">
            <summary>
Compose an image onto another at specified offset using the specified algorithm.
</summary>
            <param name="image">The image to composite with this image.</param>
            <param name="offset">The offset from origin.</param>
            <param name="compose">The algorithm to use.</param>
            <exception cref="T:ImageMagick.MagickException" />
        </member>
        <member name="M:ImageMagick.MagickImage.Composite(ImageMagick.MagickImage,ImageMagick.MagickGeometry)">
            <summary>
Compose an image onto another at specified offset using the 'In' operator.
</summary>
            <param name="image">The image to composite with this image.</param>
            <param name="offset">The offset from origin.</param>
            <exception cref="T:ImageMagick.MagickException" />
        </member>
        <member name="M:ImageMagick.MagickImage.Composite(ImageMagick.MagickImage,System.Int32,System.Int32,ImageMagick.CompositeOperator,System.String)">
            <summary>
Compose an image onto another at specified offset using the specified algorithm.
</summary>
            <param name="image">The image to composite with this image.</param>
            <param name="x">The X offset from origin.</param>
            <param name="y">The Y offset from origin.</param>
            <param name="compose">The algorithm to use.</param>
            <param name="args">The arguments for the algorithm (compose:args).</param>
            <exception cref="T:ImageMagick.MagickException" />
        </member>
        <member name="M:ImageMagick.MagickImage.Composite(ImageMagick.MagickImage,System.Int32,System.Int32,ImageMagick.CompositeOperator)">
            <summary>
Compose an image onto another at specified offset using the specified algorithm.
</summary>
            <param name="image">The image to composite with this image.</param>
            <param name="x">The X offset from origin.</param>
            <param name="y">The Y offset from origin.</param>
            <param name="compose">The algorithm to use.</param>
            <exception cref="T:ImageMagick.MagickException" />
        </member>
        <member name="M:ImageMagick.MagickImage.Composite(ImageMagick.MagickImage,System.Int32,System.Int32)">
            <summary>
Compose an image onto another at specified offset using the 'In' operator.
</summary>
            <param name="image">The image to composite with this image.</param>
            <param name="x">The X offset from origin.</param>
            <param name="y">The Y offset from origin.</param>
            <exception cref="T:ImageMagick.MagickException" />
        </member>
        <member name="M:ImageMagick.MagickImage.CompareTo(ImageMagick.MagickImage)">
==========================================================================================
<summary>
Compares the current instance with another image. Only the size of the image is compared.
</summary><param name="other">The object to compare this image with.</param></member>
        <member name="M:ImageMagick.MagickImage.Compare(ImageMagick.MagickImage,ImageMagick.Metric,ImageMagick.MagickImage,ImageMagick.Channels)">
==========================================================================================
<summary>
Returns the distortion based on the specified metric.
</summary><param name="image">The other image to compare with this image.</param><param name="metric">The metric to use.</param><param name="difference">The image that will contain the difference.</param><exception cref="T:ImageMagick.MagickException" /></member>
        <member name="M:ImageMagick.MagickImage.Compare(ImageMagick.MagickImage,ImageMagick.Metric,ImageMagick.MagickImage)">
==========================================================================================
<summary>
Returns the distortion based on the specified metric.
</summary><param name="image">The other image to compare with this image.</param><param name="metric">The metric to use.</param><param name="difference">The image that will contain the difference.</param><exception cref="T:ImageMagick.MagickException" /></member>
        <member name="M:ImageMagick.MagickImage.Compare(ImageMagick.MagickImage,ImageMagick.Metric,ImageMagick.Channels)">
==========================================================================================
<summary>
Returns the distortion based on the specified metric.
</summary><param name="image">The other image to compare with this image.</param><param name="metric">The metric to use.</param><param name="channels">The channel(s) to compare.</param><exception cref="T:ImageMagick.MagickException" /></member>
        <member name="M:ImageMagick.MagickImage.Compare(ImageMagick.MagickImage,ImageMagick.Metric)">
==========================================================================================
<summary>
Returns the distortion based on the specified metric.
</summary><param name="image">The other image to compare with this image.</param><param name="metric">The metric to use.</param><exception cref="T:ImageMagick.MagickException" /></member>
        <member name="M:ImageMagick.MagickImage.Compare(ImageMagick.MagickImage)">
==========================================================================================
<summary>
Compare current image with another image and returns error information.
</summary><param name="image">The other image to compare with this image.</param><exception cref="T:ImageMagick.MagickException" /></member>
        <member name="M:ImageMagick.MagickImage.ColorMatrix(ImageMagick.ColorMatrix)">
==========================================================================================
<summary>
Apply a color matrix to the image channels.
</summary><param name="matrix">The color matrix to use.</param><exception cref="T:ImageMagick.MagickException" /></member>
        <member name="M:ImageMagick.MagickImage.ColorMap(System.Int32,ImageMagick.MagickColor)">
==========================================================================================
<summary /><param name="index">The position index.</param><exception cref="T:ImageMagick.MagickException" /></member>
        <member name="M:ImageMagick.MagickImage.ColorMap(System.Int32)">
==========================================================================================
<summary /><param name="index">The position index.</param><exception cref="T:ImageMagick.MagickException" /></member>
        <member name="M:ImageMagick.MagickImage.Colorize(ImageMagick.MagickColor,ImageMagick.Percentage,ImageMagick.Percentage,ImageMagick.Percentage)">
==========================================================================================
<summary>
Colorize image with the specified color, using specified percent alpha for red, green,
and blue quantums
</summary><param name="color">The color to use.</param><param name="alphaRed">The alpha percentage for red.</param><param name="alphaGreen">The alpha percentage for green.</param><param name="alphaBlue">The alpha percentage for blue.</param><exception cref="T:ImageMagick.MagickException" /></member>
        <member name="M:ImageMagick.MagickImage.Colorize(ImageMagick.MagickColor,ImageMagick.Percentage)">
==========================================================================================
<summary>
Colorize image with the specified color, using specified percent alpha.
</summary><param name="color">The color to use.</param><param name="alpha">The alpha percentage.</param><exception cref="T:ImageMagick.MagickException" /></member>
        <member name="M:ImageMagick.MagickImage.ColorAlpha(ImageMagick.MagickColor)">
==========================================================================================
<summary>
Sets the alpha channel to the specified color.
</summary><param name="color">The color to use.</param><exception cref="T:ImageMagick.MagickException" /></member>
        <member name="M:ImageMagick.MagickImage.Clut(ImageMagick.MagickImage,ImageMagick.Channels)">
==========================================================================================
<summary>
Apply a color lookup table (CLUT) to the image.
</summary><param name="image">The image to use.</param><param name="channels">The channel(s) to clut.</param><exception cref="T:ImageMagick.MagickException" /></member>
        <member name="M:ImageMagick.MagickImage.Clut(ImageMagick.MagickImage)">
==========================================================================================
<summary>
Apply a color lookup table (CLUT) to the image.
</summary><param name="image">The image to use.</param><exception cref="T:ImageMagick.MagickException" /></member>
        <member name="M:ImageMagick.MagickImage.Clone">
==========================================================================================
<summary>
Creates a clone of the current image.
</summary></member>
        <member name="M:ImageMagick.MagickImage.Clip(System.String,System.Boolean)">
==========================================================================================
<summary>
Sets the image clip mask based on any clipping path information if it exists.
</summary><param name="pathName">Name of clipping path resource. If name is preceded by #, use
clipping path numbered by name.</param><param name="inside">Specifies if operations take effect inside or outside the clipping
path</param><exception cref="T:ImageMagick.MagickException" /></member>
        <member name="M:ImageMagick.MagickImage.Clip">
==========================================================================================
<summary>
Sets the image clip mask based on any clipping path information if it exists.
</summary><exception cref="T:ImageMagick.MagickException" /></member>
        <member name="M:ImageMagick.MagickImage.Clamp(ImageMagick.Channels)">
==========================================================================================
<summary>
Set each pixel whose value is below zero to zero and any the pixel whose value is above
the quantum range to the quantum range (e.g. 65535) otherwise the pixel value
remains unchanged.
</summary><param name="channels">The channel(s) to clamp.</param><exception cref="T:ImageMagick.MagickException" /></member>
        <member name="M:ImageMagick.MagickImage.Clamp">
==========================================================================================
<summary>
Set each pixel whose value is below zero to zero and any the pixel whose value is above
the quantum range to the quantum range (e.g. 65535) otherwise the pixel value
remains unchanged.
</summary><exception cref="T:ImageMagick.MagickException" /></member>
        <member name="M:ImageMagick.MagickImage.ChromaWhitePoint(System.Double,System.Double)">
==========================================================================================
<summary>
Chromaticity red primary point.
</summary><param name="x">The X coordinate.</param><param name="y">The Y coordinate.</param></member>
        <member name="M:ImageMagick.MagickImage.ChromaRedPrimary(System.Double,System.Double)">
==========================================================================================
<summary>
Chromaticity red primary point.
</summary><param name="x">The X coordinate.</param><param name="y">The Y coordinate.</param></member>
        <member name="M:ImageMagick.MagickImage.ChromaGreenPrimary(System.Double,System.Double)">
==========================================================================================
<summary>
Chromaticity green primary point.
</summary><param name="x">The X coordinate.</param><param name="y">The Y coordinate.</param></member>
        <member name="M:ImageMagick.MagickImage.ChromaBluePrimary(System.Double,System.Double)">
==========================================================================================
<summary>
Chromaticity blue primary point.
</summary><param name="x">The X coordinate.</param><param name="y">The Y coordinate.</param></member>
        <member name="M:ImageMagick.MagickImage.ChopVertical(System.Int32,System.Int32)">
==========================================================================================
<summary>
Chop image (remove horizontal subregion of image).
</summary><param name="offset">The Y offset from origin.</param><param name="height">The height of the part to chop vertically.</param><exception cref="T:ImageMagick.MagickException" /></member>
        <member name="M:ImageMagick.MagickImage.ChopHorizontal(System.Int32,System.Int32)">
==========================================================================================
<summary>
Chop image (remove horizontal subregion of image).
</summary><param name="offset">The X offset from origin.</param><param name="width">The width of the part to chop horizontally.</param><exception cref="T:ImageMagick.MagickException" /></member>
        <member name="M:ImageMagick.MagickImage.Chop(ImageMagick.MagickGeometry)">
==========================================================================================
<summary>
Chop image (remove vertical or horizontal subregion of image) using the specified geometry.
</summary><param name="geometry">The geometry to use.</param><exception cref="T:ImageMagick.MagickException" /></member>
        <member name="M:ImageMagick.MagickImage.Chop(System.Int32,System.Int32,System.Int32,System.Int32)">
==========================================================================================
<summary>
Chop image (remove vertical and horizontal subregion of image).
</summary><param name="xOffset">The X offset from origin.</param><param name="width">The width of the part to chop horizontally.</param><param name="yOffset">The Y offset from origin.</param><param name="height">The height of the part to chop vertically.</param><exception cref="T:ImageMagick.MagickException" /></member>
        <member name="M:ImageMagick.MagickImage.Charcoal(System.Double,System.Double)">
==========================================================================================
<summary>
Charcoal effect image (looks like charcoal sketch).
</summary><param name="radius">The radius of the Gaussian, in pixels, not counting the center pixel.</param><param name="sigma">The standard deviation of the Laplacian, in pixels.</param><exception cref="T:ImageMagick.MagickException" /></member>
        <member name="M:ImageMagick.MagickImage.Charcoal">
==========================================================================================
<summary>
Charcoal effect image (looks like charcoal sketch).
</summary><exception cref="T:ImageMagick.MagickException" /></member>
        <member name="M:ImageMagick.MagickImage.CDL(System.String)">
==========================================================================================
<summary>
Applies the color decision list from the specified ASC CDL file.
</summary><param name="fileName">The file to read the ASC CDL information from.</param><exception cref="T:ImageMagick.MagickException" /></member>
        <member name="M:ImageMagick.MagickImage.BrightnessContrast(ImageMagick.Percentage,ImageMagick.Percentage,ImageMagick.Channels)">
==========================================================================================
<summary>
Changes the brightness and/or contrast of an image. It converts the brightness and
contrast parameters into slope and intercept and calls a polynomical function to apply
to the image.
</summary><param name="brightness">The brightness.</param><param name="contrast">The contrast.</param><param name="channels">The channel(s) that should be changed.</param><exception cref="T:ImageMagick.MagickException" /></member>
        <member name="M:ImageMagick.MagickImage.BrightnessContrast(ImageMagick.Percentage,ImageMagick.Percentage)">
==========================================================================================
<summary>
Changes the brightness and/or contrast of an image. It converts the brightness and
contrast parameters into slope and intercept and calls a polynomical function to apply
to the image.
</summary><param name="brightness">The brightness.</param><param name="contrast">The contrast.</param><exception cref="T:ImageMagick.MagickException" /></member>
        <member name="M:ImageMagick.MagickImage.Border(System.Int32,System.Int32)">
==========================================================================================
<summary>
Border image (add border to image).
</summary><param name="width">The width of the border.</param><param name="height">The height of the border.</param><exception cref="T:ImageMagick.MagickException" /></member>
        <member name="M:ImageMagick.MagickImage.Border(System.Int32)">
==========================================================================================
<summary>
Border image (add border to image).
</summary><param name="size">The size of the border.</param><exception cref="T:ImageMagick.MagickException" /></member>
        <member name="M:ImageMagick.MagickImage.Blur(System.Double,System.Double,ImageMagick.Channels)">
==========================================================================================
<summary>
Blur image with specified blur factor and channel.
</summary><param name="radius">The radius of the Gaussian in pixels, not counting the center pixel.</param><param name="sigma">The standard deviation of the Laplacian, in pixels.</param><param name="channels">The channel(s) that should be blurred.</param><exception cref="T:ImageMagick.MagickException" /></member>
        <member name="M:ImageMagick.MagickImage.Blur(System.Double,System.Double)">
==========================================================================================
<summary>
Blur image with specified blur factor.
</summary><param name="radius">The radius of the Gaussian in pixels, not counting the center pixel.</param><param name="sigma">The standard deviation of the Laplacian, in pixels.</param><exception cref="T:ImageMagick.MagickException" /></member>
        <member name="M:ImageMagick.MagickImage.Blur(ImageMagick.Channels)">
==========================================================================================
<summary>
Blur image the specified channel of the image with the default blur factor (0x1).
</summary><param name="channels">The channel(s) that should be blurred.</param><exception cref="T:ImageMagick.MagickException" /></member>
        <member name="M:ImageMagick.MagickImage.Blur">
==========================================================================================
<summary>
Blur image with the default blur factor (0x1).
</summary><exception cref="T:ImageMagick.MagickException" /></member>
        <member name="M:ImageMagick.MagickImage.BlueShift(System.Double)">
==========================================================================================
<summary>
Simulate a scene at nighttime in the moonlight.
</summary><param name="factor">The factor to use.</param><exception cref="T:ImageMagick.MagickException" /></member>
        <member name="M:ImageMagick.MagickImage.BlueShift">
==========================================================================================
<summary>
Simulate a scene at nighttime in the moonlight.
</summary><exception cref="T:ImageMagick.MagickException" /></member>
        <member name="M:ImageMagick.MagickImage.BlackThreshold(ImageMagick.Percentage,ImageMagick.Channels)">
==========================================================================================
<summary>
Forces all pixels below the threshold into black while leaving all pixels at or above
the threshold unchanged.
</summary><param name="threshold">The threshold to use.</param><param name="channels">The channel(s) to make black.</param><exception cref="T:ImageMagick.MagickException" /></member>
        <member name="M:ImageMagick.MagickImage.BlackThreshold(ImageMagick.Percentage)">
==========================================================================================
<summary>
Forces all pixels below the threshold into black while leaving all pixels at or above
the threshold unchanged.
</summary><param name="threshold">The threshold to use.</param><exception cref="T:ImageMagick.MagickException" /></member>
        <member name="M:ImageMagick.MagickImage.BitDepth(ImageMagick.Channels,System.Int32)">
==========================================================================================
<summary>
Set the bit depth (bits allocated to red/green/blue components) of the specified channel.
</summary><param name="value">The depth.</param><param name="channels">The channel to set the depth for.</param><exception cref="T:ImageMagick.MagickException" /></member>
        <member name="M:ImageMagick.MagickImage.BitDepth(ImageMagick.Channels)">
==========================================================================================
<summary>
Returns the bit depth (bits allocated to red/green/blue components) of the specified channel.
</summary><param name="channels">The channel to get the depth for.</param><exception cref="T:ImageMagick.MagickException" /></member>
        <member name="M:ImageMagick.MagickImage.BitDepth">
==========================================================================================
<summary>
Returns the bit depth (bits allocated to red/green/blue components).
</summary><exception cref="T:ImageMagick.MagickException" /></member>
        <member name="M:ImageMagick.MagickImage.AutoOrient">
==========================================================================================
<summary>
Adjusts an image so that its orientation is suitable for viewing.
</summary><exception cref="T:ImageMagick.MagickException" /></member>
        <member name="M:ImageMagick.MagickImage.AutoLevel(ImageMagick.Channels)">
==========================================================================================
<summary>
Adjusts the levels of a particular image channel by scaling the minimum and maximum values
to the full quantum range.
</summary><param name="channels">The channel(s) to level.</param><exception cref="T:ImageMagick.MagickException" /></member>
        <member name="M:ImageMagick.MagickImage.AutoLevel">
==========================================================================================
<summary>
Adjusts the levels of a particular image channel by scaling the minimum and maximum values
to the full quantum range.
</summary><exception cref="T:ImageMagick.MagickException" /></member>
        <member name="M:ImageMagick.MagickImage.AutoGamma(ImageMagick.Channels)">
==========================================================================================
<summary>
Extracts the 'mean' from the image and adjust the image to try make set its gamma 
appropriatally.
</summary><param name="channels">The channel(s) to set the gamma for.</param><exception cref="T:ImageMagick.MagickException" /></member>
        <member name="M:ImageMagick.MagickImage.AutoGamma">
==========================================================================================
<summary>
Extracts the 'mean' from the image and adjust the image to try make set its gamma 
appropriatally.
</summary><exception cref="T:ImageMagick.MagickException" /></member>
        <member name="M:ImageMagick.MagickImage.Annotate(System.String,ImageMagick.Gravity)">
==========================================================================================
<summary>
Annotate with text (bounding area is entire image) and placement gravity.
</summary><param name="text">The text to use.</param><param name="gravity">The placement gravity.</param><exception cref="T:ImageMagick.MagickException" /></member>
        <member name="M:ImageMagick.MagickImage.Annotate(System.String,ImageMagick.MagickGeometry,ImageMagick.Gravity,System.Double)">
==========================================================================================
<summary>
Annotate using specified text, bounding area, and placement gravity.
</summary><param name="text">The text to use.</param><param name="boundingArea">The bounding area.</param><param name="gravity">The placement gravity.</param><param name="degrees">The rotation.</param><exception cref="T:ImageMagick.MagickException" /></member>
        <member name="M:ImageMagick.MagickImage.Annotate(System.String,ImageMagick.MagickGeometry,ImageMagick.Gravity)">
==========================================================================================
<summary>
Annotate using specified text, bounding area, and placement gravity.
</summary><param name="text">The text to use.</param><param name="boundingArea">The bounding area.</param><param name="gravity">The placement gravity.</param><exception cref="T:ImageMagick.MagickException" /></member>
        <member name="M:ImageMagick.MagickImage.Annotate(System.String,ImageMagick.MagickGeometry)">
==========================================================================================
<summary>
Annotate using specified text, and bounding area.
</summary><param name="text">The text to use.</param><param name="boundingArea">The bounding area.</param><exception cref="T:ImageMagick.MagickException" /></member>
        <member name="M:ImageMagick.MagickImage.Alpha(ImageMagick.AlphaOption)">
==========================================================================================
<summary>
Applies the specified alpha option.
</summary><param name="option">The option to use.</param><exception cref="T:ImageMagick.MagickException" /></member>
        <member name="M:ImageMagick.MagickImage.AffineTransform(ImageMagick.DrawableAffine)">
==========================================================================================
<summary>
Affine Transform image.
</summary><param name="affineMatrix">The affine matrix to use.</param><exception cref="T:ImageMagick.MagickException" /></member>
        <member name="M:ImageMagick.MagickImage.AddProfile(ImageMagick.ImageProfile)">
==========================================================================================
<summary>
Adds the specified profile to the image or overwrites it.
</summary><param name="profile">The profile to add or overwrite.</param><exception cref="T:ImageMagick.MagickException" /></member>
        <member name="M:ImageMagick.MagickImage.AddNoise(ImageMagick.NoiseType,ImageMagick.Channels)">
==========================================================================================
<summary>
Add noise to the specified channel of the image with the specified noise type.
</summary><param name="noiseType">The type of noise that should be added to the image.</param><param name="channels">The channel(s) where the noise should be added.</param><exception cref="T:ImageMagick.MagickException" /></member>
        <member name="M:ImageMagick.MagickImage.AddNoise(ImageMagick.NoiseType)">
==========================================================================================
<summary>
Add noise to image with the specified noise type.
</summary><param name="noiseType">The type of noise that should be added to the image.</param><exception cref="T:ImageMagick.MagickException" /></member>
        <member name="M:ImageMagick.MagickImage.AdaptiveThreshold(System.Int32,System.Int32,System.Int32)">
==========================================================================================
<summary>
Local adaptive threshold image.
http://www.dai.ed.ac.uk/HIPR2/adpthrsh.htm
</summary><param name="width">The width of the pixel neighborhood.</param><param name="height">The height of the pixel neighborhood.</param><param name="offset">Constant to subtract from pixel neighborhood mean.</param><exception cref="T:ImageMagick.MagickException" /></member>
        <member name="M:ImageMagick.MagickImage.AdaptiveThreshold(System.Int32,System.Int32)">
==========================================================================================
<summary>
Local adaptive threshold image.
http://www.dai.ed.ac.uk/HIPR2/adpthrsh.htm
</summary><param name="width">The width of the pixel neighborhood.</param><param name="height">The height of the pixel neighborhood.</param><exception cref="T:ImageMagick.MagickException" /></member>
        <member name="M:ImageMagick.MagickImage.AdaptiveSharpen(System.Double,System.Double,ImageMagick.Channels)">
==========================================================================================
<summary>
Adaptively sharpens the image by sharpening more intensely near image edges and less
intensely far from edges.
</summary><param name="radius">The radius of the Gaussian, in pixels, not counting the center pixel.</param><param name="sigma">The standard deviation of the Laplacian, in pixels.</param><param name="channels">The channel(s) that should be sharpened.</param></member>
        <member name="M:ImageMagick.MagickImage.AdaptiveSharpen(System.Double,System.Double)">
==========================================================================================
<summary>
Adaptively sharpens the image by sharpening more intensely near image edges and less
intensely far from edges.
</summary><param name="radius">The radius of the Gaussian, in pixels, not counting the center pixel.</param><param name="sigma">The standard deviation of the Laplacian, in pixels.</param><exception cref="T:ImageMagick.MagickException" /></member>
        <member name="M:ImageMagick.MagickImage.AdaptiveSharpen(ImageMagick.Channels)">
==========================================================================================
<summary>
Adaptively sharpens the image by sharpening more intensely near image edges and less
intensely far from edges.
</summary><param name="channels">The channel(s) that should be sharpened.</param><exception cref="T:ImageMagick.MagickException" /></member>
        <member name="M:ImageMagick.MagickImage.AdaptiveSharpen">
==========================================================================================
<summary>
Adaptively sharpens the image by sharpening more intensely near image edges and less
intensely far from edges.
</summary><exception cref="T:ImageMagick.MagickException" /></member>
        <member name="M:ImageMagick.MagickImage.AdaptiveResize(ImageMagick.MagickGeometry)">
==========================================================================================
<summary>
Resize using mesh interpolation. It works well for small resizes of less than +/- 50%
of the original image size. For larger resizing on images a full filtered and slower resize
function should be used instead.
</summary><param name="geometry">The geometry to use.</param><exception cref="T:ImageMagick.MagickException" /></member>
        <member name="M:ImageMagick.MagickImage.AdaptiveResize(System.Int32,System.Int32)">
==========================================================================================
<summary>
Resize using mesh interpolation. It works well for small resizes of less than +/- 50%
of the original image size. For larger resizing on images a full filtered and slower resize
function should be used instead.
</summary><param name="width">The new width.</param><param name="height">The new height.</param><exception cref="T:ImageMagick.MagickException" /></member>
        <member name="M:ImageMagick.MagickImage.AdaptiveBlur(System.Double,System.Double)">
==========================================================================================
<summary>
Adaptive-blur image with specified blur factor.
</summary><param name="radius">The radius of the Gaussian, in pixels, not counting the center pixel.</param><param name="sigma">The standard deviation of the Laplacian, in pixels.</param><exception cref="T:ImageMagick.MagickException" /></member>
        <member name="M:ImageMagick.MagickImage.AdaptiveBlur">
==========================================================================================
<summary>
Adaptive-blur image with the default blur factor (0x1).
</summary><exception cref="T:ImageMagick.MagickException" /></member>
        <member name="P:ImageMagick.MagickImage.Width">
==========================================================================================
<summary>
Width of the image.
</summary></member>
        <member name="P:ImageMagick.MagickImage.VirtualPixelMethod">
==========================================================================================
<summary>
Virtual pixel method.
</summary></member>
        <member name="P:ImageMagick.MagickImage.Verbose">
==========================================================================================
<summary>
Turn verbose output on/off.
</summary>
==========================================================================================
</member>
        <member name="P:ImageMagick.MagickImage.TotalColors">
==========================================================================================
<summary>
Number of colors in the image.
</summary></member>
        <member name="P:ImageMagick.MagickImage.TileName">
==========================================================================================
<summary>
Tile name.
</summary></member>
        <member name="P:ImageMagick.MagickImage.TextEncoding">
==========================================================================================
<summary>
Annotation text encoding (e.g. "UTF-16")
</summary></member>
        <member name="P:ImageMagick.MagickImage.StrokeWidth">
==========================================================================================
<summary>
Stroke width for drawing lines, circles, ellipses, etc.
</summary></member>
        <member name="P:ImageMagick.MagickImage.StrokePattern">
==========================================================================================
<summary>
Pattern image to use while stroking object outlines.
</summary></member>
        <member name="P:ImageMagick.MagickImage.StrokeMiterLimit">
==========================================================================================
<summary>
Specify miter limit. When two line segments meet at a sharp angle and miter joins have
been specified for 'lineJoin', it is possible for the miter to extend far beyond the thickness
of the line stroking the path. The miterLimit' imposes a limit on the ratio of the miter
length to the 'lineWidth'. The default value is 4.
</summary></member>
        <member name="P:ImageMagick.MagickImage.StrokeLineJoin">
==========================================================================================
<summary>
Specify the shape to be used at the corners of paths (or other vector shapes) when they
are stroked.
</summary></member>
        <member name="P:ImageMagick.MagickImage.StrokeLineCap">
==========================================================================================
<summary>
Specify the shape to be used at the end of open subpaths when they are stroked.
</summary></member>
        <member name="P:ImageMagick.MagickImage.StrokeDashOffset">
==========================================================================================
<summary>
While drawing using a dash pattern, specify distance into the dash pattern to start the
dash (default 0).
</summary></member>
        <member name="P:ImageMagick.MagickImage.StrokeDashArray">
==========================================================================================
<summary>
Specify the pattern of dashes and gaps used to stroke paths. This represents a
zero-terminated array of numbers that specify the lengths of alternating dashes and gaps
in pixels. If a zero value is not found it will be added. If an odd number of values is
provided, then the list of values is repeated to yield an even number of values.
</summary></member>
        <member name="P:ImageMagick.MagickImage.StrokeColor">
==========================================================================================
<summary>
Color to use when drawing object outlines.
</summary></member>
        <member name="P:ImageMagick.MagickImage.StrokeAntiAlias">
==========================================================================================
<summary>
Enabled/disable stroke anti-aliasing.
</summary></member>
        <member name="P:ImageMagick.MagickImage.ResolutionY">
==========================================================================================
<summary>
The Y resolution of the image.
</summary></member>
        <member name="P:ImageMagick.MagickImage.ResolutionX">
==========================================================================================
<summary>
The X resolution of the image.
</summary></member>
        <member name="P:ImageMagick.MagickImage.ResolutionUnits">
==========================================================================================
<summary>
Units of image resolution.
</summary></member>
        <member name="P:ImageMagick.MagickImage.RenderingIntent">
==========================================================================================
<summary>
The type of rendering intent.
</summary></member>
        <member name="P:ImageMagick.MagickImage.ReadWarning">
==========================================================================================
<summary>
Returns the warning that was raised during the read operation.
</summary></member>
        <member name="P:ImageMagick.MagickImage.QuantizeTreeDepth">
==========================================================================================
<summary>
Quantization tree-depth.
</summary></member>
        <member name="P:ImageMagick.MagickImage.QuantizeDither">
==========================================================================================
<summary>
Dither image during quantization (default true).
</summary></member>
        <member name="P:ImageMagick.MagickImage.QuantizeColorSpace">
==========================================================================================
<summary>
Colorspace to quantize in.
</summary></member>
        <member name="P:ImageMagick.MagickImage.QuantizeColors">
==========================================================================================
<summary>
Maximum number of colors to quantize to.
</summary></member>
        <member name="P:ImageMagick.MagickImage.Quality">
==========================================================================================
<summary>
JPEG/MIFF/PNG compression level (default 75).
</summary></member>
        <member name="P:ImageMagick.MagickImage.ProfileNames">
==========================================================================================
<summary>
The names of the profiles.
</summary></member>
        <member name="P:ImageMagick.MagickImage.Page">
==========================================================================================
<summary>
Preferred size and location of an image canvas.
</summary></member>
        <member name="P:ImageMagick.MagickImage.Orientation">
==========================================================================================
<summary>
Photo orientation of the image.
</summary></member>
        <member name="P:ImageMagick.MagickImage.ModulusDepth">
==========================================================================================
<summary>
Image modulus depth (minimum number of bits required to support red/green/blue components
without loss of accuracy).
</summary></member>
        <member name="P:ImageMagick.MagickImage.MatteColor">
==========================================================================================
<summary>
Transparent color.
</summary></member>
        <member name="P:ImageMagick.MagickImage.Label">
==========================================================================================
<summary>
The label of the image.
</summary></member>
        <member name="P:ImageMagick.MagickImage.IsMonochrome">
==========================================================================================
<summary>
Transform image to black and white.
</summary></member>
        <member name="P:ImageMagick.MagickImage.Interpolate">
==========================================================================================
<summary>
Pixel color interpolate method to use.
</summary></member>
        <member name="P:ImageMagick.MagickImage.Interlace">
==========================================================================================
<summary>
Type of interlacing to use.
</summary></member>
        <member name="P:ImageMagick.MagickImage.Height">
==========================================================================================
<summary>
Height of the image.
</summary></member>
        <member name="P:ImageMagick.MagickImage.HasAlpha">
==========================================================================================
<summary>
Image supports transparency (alpha channel).
</summary></member>
        <member name="P:ImageMagick.MagickImage.GifDisposeMethod">
==========================================================================================
<summary>
Gif disposal method.
</summary></member>
        <member name="P:ImageMagick.MagickImage.FormatInfo">
==========================================================================================
<summary>
The information about the format of the image.
</summary></member>
        <member name="P:ImageMagick.MagickImage.Format">
==========================================================================================
<summary>
The format of the image.
</summary></member>
        <member name="P:ImageMagick.MagickImage.FontPointsize">
==========================================================================================
<summary>
Font point size.
</summary></member>
        <member name="P:ImageMagick.MagickImage.Font">
==========================================================================================
<summary>
Text rendering font.
</summary></member>
        <member name="P:ImageMagick.MagickImage.FlashPixView">
==========================================================================================
<summary>
FlashPix viewing parameters.
</summary></member>
        <member name="P:ImageMagick.MagickImage.FilterType">
==========================================================================================
<summary>
Filter to use when resizing image.
</summary></member>
        <member name="P:ImageMagick.MagickImage.FillRule">
==========================================================================================
<summary>
Rule to use when filling drawn objects.
</summary></member>
        <member name="P:ImageMagick.MagickImage.FillPattern">
==========================================================================================
<summary>
Pattern to use while filling drawn objects.
</summary></member>
        <member name="P:ImageMagick.MagickImage.FillColor">
==========================================================================================
<summary>
Color to use when drawing inside an object.
</summary></member>
        <member name="P:ImageMagick.MagickImage.FileName">
==========================================================================================
<summary>
Original file name of the image (only available if read from disk).
</summary></member>
        <member name="P:ImageMagick.MagickImage.FileSize">
==========================================================================================
<summary>
Image file size.
</summary></member>
        <member name="P:ImageMagick.MagickImage.Endian">
==========================================================================================
<summary>
Endianness (little like Intel or big like SPARC) for image formats which support
endian-specific options.
</summary></member>
        <member name="P:ImageMagick.MagickImage.Depth">
==========================================================================================
<summary>
The depth (bits allocated to red/green/blue components).
</summary></member>
        <member name="P:ImageMagick.MagickImage.Density">
==========================================================================================
<summary>
Vertical and horizontal resolution in pixels of the image.
</summary></member>
        <member name="P:ImageMagick.MagickImage.Debug">
            <summary>
Enable printing of debug messages from ImageMagick when a debugger is attached.
</summary>
        </member>
        <member name="P:ImageMagick.MagickImage.CompressionMethod">
==========================================================================================
<summary>
Compression method to use.
</summary></member>
        <member name="P:ImageMagick.MagickImage.Compose">
==========================================================================================
<summary>
Composition operator to be used when composition is implicitly used (such as for image flattening).
</summary></member>
        <member name="P:ImageMagick.MagickImage.Comment">
==========================================================================================
<summary>
Comment text of the image.
</summary></member>
        <member name="P:ImageMagick.MagickImage.ColorType">
==========================================================================================
<summary>
Color type of the image.
</summary></member>
        <member name="P:ImageMagick.MagickImage.ColorSpace">
==========================================================================================
<summary>
Color space of the image.
</summary></member>
        <member name="P:ImageMagick.MagickImage.ColorMapSize">
==========================================================================================
<summary>
Colormap size (number of colormap entries).
</summary></member>
        <member name="P:ImageMagick.MagickImage.ColorFuzz">
==========================================================================================
<summary>
Colors within this distance are considered equal.
</summary></member>
        <member name="P:ImageMagick.MagickImage.ClipMask">
==========================================================================================
<summary>
Associate a clip mask with the image. The clip mask must be the same dimensions as the
image. Pass null to unset an existing clip mask.
</summary></member>
        <member name="P:ImageMagick.MagickImage.ClassType">
==========================================================================================
<summary>
Image class (DirectClass or PseudoClass)
NOTE: Setting a DirectClass image to PseudoClass will result in the loss of color information
if the number of colors in the image is greater than the maximum palette size (either 256 (Q8)
or 65536 (Q16).
</summary></member>
        <member name="P:ImageMagick.MagickImage.BoxColor">
==========================================================================================
<summary>
Text bounding-box base color.
</summary></member>
        <member name="P:ImageMagick.MagickImage.BorderColor">
==========================================================================================
<summary>
Border color of the image.
</summary></member>
        <member name="P:ImageMagick.MagickImage.BoundingBox">
==========================================================================================
<summary>
Return smallest bounding box enclosing non-border pixels. The current fuzz value is used
when discriminating between pixels.
</summary></member>
        <member name="P:ImageMagick.MagickImage.BaseWidth">
==========================================================================================
<summary>
Width of the image before transformations.
</summary></member>
        <member name="P:ImageMagick.MagickImage.BaseHeight">
==========================================================================================
<summary>
Height of the image before transformations.
</summary></member>
        <member name="P:ImageMagick.MagickImage.BackgroundColor">
==========================================================================================
<summary>
Background color of the image.
</summary></member>
        <member name="P:ImageMagick.MagickImage.AntiAlias">
==========================================================================================
<summary>
Anti-alias Postscript and TrueType fonts (default true).
</summary></member>
        <member name="P:ImageMagick.MagickImage.AnimationIterations">
==========================================================================================
<summary>
Number of iterations to loop an animation (e.g. Netscape loop extension) for.
</summary></member>
        <member name="P:ImageMagick.MagickImage.AnimationDelay">
==========================================================================================
<summary>
Time in 1/100ths of a second which must expire before splaying the next image in an
animated sequence.
</summary></member>
        <member name="P:ImageMagick.MagickImage.Adjoin">
==========================================================================================
<summary>
Join images into a single multi-image file.
</summary></member>
        <member name="M:ImageMagick.MagickImage.#ctor(System.IO.Stream,ImageMagick.MagickReadSettings)">
==========================================================================================
<summary>
Initializes a new instance of the MagickImage class using the specified stream.
</summary><param name="stream">The stream to read the image data from.</param><param name="readSettings">The settings to use when reading the image.</param><exception cref="T:ImageMagick.MagickException" /></member>
        <member name="M:ImageMagick.MagickImage.#ctor(System.IO.Stream)">
==========================================================================================
<summary>
Initializes a new instance of the MagickImage class using the specified stream.
</summary><param name="stream">The stream to read the image data from.</param><exception cref="T:ImageMagick.MagickException" /></member>
        <member name="M:ImageMagick.MagickImage.#ctor(System.String,ImageMagick.MagickReadSettings)">
==========================================================================================
<summary>
Initializes a new instance of the MagickImage class using the specified filename
</summary><param name="fileName">The fully qualified name of the image file, or the relative image file name.</param><param name="readSettings">The settings to use when reading the image.</param><exception cref="T:ImageMagick.MagickException" /></member>
        <member name="M:ImageMagick.MagickImage.#ctor(System.String)">
==========================================================================================
<summary>
Initializes a new instance of the MagickImage class using the specified filename.
</summary><param name="fileName">The fully qualified name of the image file, or the relative image file name.</param><exception cref="T:ImageMagick.MagickException" /></member>
        <member name="M:ImageMagick.MagickImage.#ctor(ImageMagick.MagickImage)">
==========================================================================================
<summary>
Initializes a new instance of the MagickImage class by creating a copy of the specified
image.
</summary><param name="image">The image to create a copy of.</param></member>
        <member name="M:ImageMagick.MagickImage.#ctor(ImageMagick.MagickColor,System.Int32,System.Int32)">
==========================================================================================
<summary>
Initializes a new instance of the MagickImage class using the specified width, height
and color.
</summary><param name="color">The color to fill the image with.</param><param name="width">The width.</param><param name="height">The height.</param></member>
        <member name="M:ImageMagick.MagickImage.#ctor(System.Drawing.Bitmap)">
==========================================================================================
<summary>
Initializes a new instance of the MagickImage class using the specified bitmap.
</summary><param name="bitmap">The bitmap to use.</param><exception cref="T:ImageMagick.MagickException" /></member>
        <member name="M:ImageMagick.MagickImage.#ctor(System.Byte[],ImageMagick.MagickReadSettings)">
==========================================================================================
<summary>
Initializes a new instance of the MagickImage class using the specified byte array.
</summary><param name="data">The byte array to read the image data from.</param><param name="readSettings">The settings to use when reading the image.</param><exception cref="T:ImageMagick.MagickException" /></member>
        <member name="M:ImageMagick.MagickImage.#ctor(System.Byte[])">
==========================================================================================
<summary>
Initializes a new instance of the MagickImage class using the specified byte array.
</summary><param name="data">The byte array to read the image data from.</param><exception cref="T:ImageMagick.MagickException" /></member>
        <member name="M:ImageMagick.MagickImage.#ctor">
==========================================================================================
<summary>
Initializes a new instance of the MagickImage class.
</summary></member>
        <member name="T:ImageMagick.MagickImage">
=============================================================================================
<summary>
Encapsulation of the ImageMagick image object.
</summary></member>
        <member name="P:ImageMagick.TypeMetric.TextWidth">
==========================================================================================
<summary>
Text width in pixels.
</summary></member>
        <member name="P:ImageMagick.TypeMetric.TextHeight">
==========================================================================================
<summary>
Text height in pixels.
</summary></member>
        <member name="P:ImageMagick.TypeMetric.MaxHorizontalAdvance">
==========================================================================================
<summary>
Maximum horizontal advance in pixels.
</summary></member>
        <member name="P:ImageMagick.TypeMetric.Descent">
==========================================================================================
<summary>
Descent, the distance in pixels from the baseline to the lowest grid coordinate used to
place an outline point. Always a negative value.
</summary></member>
        <member name="P:ImageMagick.TypeMetric.Ascent">
==========================================================================================
<summary>
Ascent, the distance in pixels from the text baseline to the highest/upper grid coordinate
used to place an outline point.
</summary></member>
        <member name="T:ImageMagick.TypeMetric">
=============================================================================================
<summary>
Encapsulation of the ImageMagick TypeMetric object.
</summary></member>
        <member name="M:ImageMagick.MagickImageStatistics.GetHashCode">
==========================================================================================
<summary>
Servers as a hash of this type.
</summary></member>
        <member name="M:ImageMagick.MagickImageStatistics.Equals(ImageMagick.MagickImageStatistics)">
==========================================================================================
<summary>
Determines whether the specified image statistics is equal to the current image statistics.
</summary><param name="other">The image statistics to compare this image statistics with.</param></member>
        <member name="M:ImageMagick.MagickImageStatistics.Equals(System.Object)">
==========================================================================================
<summary>
Determines whether the specified object is equal to the current image statistics.
</summary><param name="obj">The object to compare this image statistics with.</param></member>
        <member name="M:ImageMagick.MagickImageStatistics.GetChannel(ImageMagick.PixelChannel)">
==========================================================================================
<summary>
Statistics for the all the channels.
</summary>
==========================================================================================
<summary>
Statistics for the specified channel.
</summary></member>
        <member name="T:ImageMagick.MagickImageStatistics">
=============================================================================================
<summary>
Encapsulation of the ImageMagick ImageStatistics object.
</summary></member>
        <member name="M:ImageMagick.ChannelStatistics.GetHashCode">
==========================================================================================
<summary>
Servers as a hash of this type.
</summary></member>
        <member name="M:ImageMagick.ChannelStatistics.Equals(ImageMagick.ChannelStatistics)">
==========================================================================================
<summary>
Determines whether the specified channel statistics is equal to the current channel statistics.
</summary><param name="other">The channel statistics to compare this channel statistics with.</param></member>
        <member name="M:ImageMagick.ChannelStatistics.Equals(System.Object)">
==========================================================================================
<summary>
Determines whether the specified object is equal to the current channel statistics.
</summary><param name="obj">The object to compare this channel statistics with.</param></member>
        <member name="P:ImageMagick.ChannelStatistics.Variance">
==========================================================================================
<summary>
Sum.
</summary>
==========================================================================================
<summary>
Sum cubed.
</summary>
==========================================================================================
<summary>
Sum fourth power.
</summary>
==========================================================================================
<summary>
Sum squared.
</summary>
==========================================================================================
<summary>
Variance.
</summary></member>
        <member name="P:ImageMagick.ChannelStatistics.StandardDeviation">
==========================================================================================
<summary>
Standard deviation, sqrt(variance).
</summary></member>
        <member name="P:ImageMagick.ChannelStatistics.Skewness">
==========================================================================================
<summary>
Skewness.
</summary></member>
        <member name="P:ImageMagick.ChannelStatistics.Kurtosis">
==========================================================================================
<summary>
Kurtosis.
</summary></member>
        <member name="P:ImageMagick.ChannelStatistics.Minimum">
==========================================================================================
<summary>
Minimum value observed.
</summary></member>
        <member name="P:ImageMagick.ChannelStatistics.Mean">
==========================================================================================
<summary>
Average (mean) value observed.
</summary></member>
        <member name="P:ImageMagick.ChannelStatistics.Maximum">
==========================================================================================
<summary>
Depth of the channel.
</summary>
==========================================================================================
<summary>
Maximum value observed.
</summary></member>
        <member name="T:ImageMagick.ChannelStatistics">
=============================================================================================
<summary>
Encapsulation of the ImageMagick ImageChannelStatistics object.
</summary></member>
        <member name="T:ImageMagick.PixelChannel">
=============================================================================================
<summary>
Specifies the pixel channels.
</summary></member>
        <member name="P:ImageMagick.ColorProfile.USWebCoatedSWOP">
==========================================================================================
<summary>
The USWebCoatedSWOP profile.
</summary></member>
        <member name="P:ImageMagick.ColorProfile.SRGB">
==========================================================================================
<summary>
The sRGB profile.
</summary></member>
        <member name="P:ImageMagick.ColorProfile.ColorMatchRGB">
==========================================================================================
<summary>
The ColorMatchRGB profile.
</summary></member>
        <member name="P:ImageMagick.ColorProfile.CoatedFOGRA39">
==========================================================================================
<summary>
The CoatedFOGRA39 profile.
</summary></member>
        <member name="P:ImageMagick.ColorProfile.AppleRGB">
==========================================================================================
<summary>
The AppleRGB profile.
</summary></member>
        <member name="P:ImageMagick.ColorProfile.AdobeRGB1998">
==========================================================================================
<summary>
The AdobeRGB1998 profile.
</summary></member>
        <member name="M:ImageMagick.ColorProfile.#ctor(System.String)">
==========================================================================================
<summary>
Initializes a new instance of the ColorProfile class.
</summary><param name="fileName">The fully qualified name of the profile file, or the relative profile file name.</param></member>
        <member name="M:ImageMagick.ColorProfile.#ctor(System.IO.Stream)">
==========================================================================================
<summary>
Initializes a new instance of the ColorProfile class.
</summary><param name="stream">A stream containing the profile.</param></member>
        <member name="M:ImageMagick.ColorProfile.#ctor(System.Byte[])">
==========================================================================================
<summary>
Initializes a new instance of the ColorProfile class.
</summary><param name="data">A byte array containing the profile.</param></member>
        <member name="T:ImageMagick.ColorProfile">
=============================================================================================
<summary>
Class that contains an ICM/ICC color profile.
</summary></member>
        <member name="M:ImageMagick.IptcProfile.SetValue(ImageMagick.IptcTag,System.String)">
==========================================================================================
<summary>
Sets the value of the specified tag.
</summary><param name="tag">The tag of the iptc value.</param><param name="value">The value.</param></member>
        <member name="M:ImageMagick.IptcProfile.SetValue(ImageMagick.IptcTag,System.Text.Encoding,System.String)">
==========================================================================================
<summary>
Sets the value of the specified tag.
</summary><param name="tag">The tag of the iptc value.</param><param name="encoding">The encoding to use when storing the bytes.</param><param name="value">The value.</param></member>
        <member name="M:ImageMagick.IptcProfile.SetEncoding(System.Text.Encoding)">
==========================================================================================
<summary>
Changes the encoding for all the values,
</summary><param name="encoding">The encoding to use when storing the bytes.</param></member>
        <member name="P:ImageMagick.IptcProfile.Values">
==========================================================================================
<summary>
Returns the values of this iptc profile.
</summary></member>
        <member name="M:ImageMagick.IptcProfile.#ctor(System.IO.Stream)">
==========================================================================================
<summary>
Initializes a new instance of the IptcProfile class.
</summary><param name="stream">The stream to read the iptc profile from.</param></member>
        <member name="M:ImageMagick.IptcProfile.#ctor(System.String)">
==========================================================================================
<summary>
Initializes a new instance of the IptcProfile class.
</summary><param name="fileName">The fully qualified name of the iptc profile file, or the relative
iptc profile file name.</param></member>
        <member name="M:ImageMagick.IptcProfile.#ctor(System.Byte[])">
==========================================================================================
<summary>
Initializes a new instance of the IptcProfile class.
</summary><param name="data">The byte array to read the iptc profile from.</param></member>
        <member name="T:ImageMagick.IptcProfile">
=============================================================================================
<summary>
Class that can be used to access an Iptc profile.
</summary></member>
        <member name="M:ImageMagick.IptcValue.ToString(System.Text.Encoding)">
==========================================================================================
<summary>
Returns a string that represents the current value with the specified encoding.
</summary></member>
        <member name="M:ImageMagick.IptcValue.ToString">
==========================================================================================
<summary>
Returns a string that represents the current value.
</summary></member>
        <member name="M:ImageMagick.IptcValue.ToByteArray">
==========================================================================================
<summary>
Converts this instance to a byte array.
</summary></member>
        <member name="M:ImageMagick.IptcValue.GetHashCode">
==========================================================================================
<summary>
Servers as a hash of this type.
</summary></member>
        <member name="M:ImageMagick.IptcValue.Equals(ImageMagick.IptcValue)">
==========================================================================================
<summary>
Determines whether the specified iptc value is equal to the current iptc value.
</summary><param name="other">The iptc value to compare this iptc value with.</param></member>
        <member name="M:ImageMagick.IptcValue.Equals(System.Object)">
==========================================================================================
<summary>
Determines whether the specified object is equal to the current iptc value.
</summary><param name="obj">The object to compare this iptc value with.</param></member>
        <member name="P:ImageMagick.IptcValue.Value">
            <summary>
The value.
</summary>
        </member>
        <member name="P:ImageMagick.IptcValue.Tag">
            <summary>
The tag of the iptc value.
</summary>
        </member>
        <member name="P:ImageMagick.IptcValue.Encoding">
            <summary>
The encoding to use for the Value.
</summary>
        </member>
        <member name="T:ImageMagick.IptcValue">
=============================================================================================
<summary>
A value of the iptc profile.
</summary></member>
        <member name="T:ImageMagick.IptcTag">
=============================================================================================
<summary>
All iptc tags.
</summary></member>
        <member name="M:ImageMagick.ExifProfile.CreateThumbnail">
==========================================================================================
<summary>
Returns the thumbnail in the exif profile when available.
</summary></member>
        <member name="P:ImageMagick.ExifProfile.Values">
==========================================================================================
<summary>
Returns the values of this exif profile.
</summary></member>
        <member name="M:ImageMagick.ExifProfile.#ctor(System.IO.Stream)">
==========================================================================================
<summary>
Initializes a new instance of the ExifProfile class.
</summary><param name="stream">The stream to read the exif profile from.</param></member>
        <member name="M:ImageMagick.ExifProfile.#ctor(System.String)">
==========================================================================================
<summary>
Initializes a new instance of the ExifProfile class.
</summary><param name="fileName">The fully qualified name of the exif profile file, or the relative
exif profile file name.</param></member>
        <member name="M:ImageMagick.ExifProfile.#ctor(System.Byte[])">
==========================================================================================
<summary>
Initializes a new instance of the ExifProfile class.
</summary><param name="data">The byte array to read the exif profile from.</param></member>
        <member name="T:ImageMagick.ExifProfile">
=============================================================================================
<summary>
Class that can be used to access an Exif profile.
</summary></member>
        <member name="M:ImageMagick.ExifValue.ToString">
==========================================================================================
<summary>
Returns a string that represents the current value.
</summary></member>
        <member name="M:ImageMagick.ExifValue.GetHashCode">
==========================================================================================
<summary>
Servers as a hash of this type.
</summary></member>
        <member name="M:ImageMagick.ExifValue.Equals(ImageMagick.ExifValue)">
==========================================================================================
<summary>
Determines whether the specified exif value is equal to the current exif value.
</summary><param name="other">The exif value to compare this exif value with.</param></member>
        <member name="M:ImageMagick.ExifValue.Equals(System.Object)">
==========================================================================================
<summary>
Determines whether the specified object is equal to the current exif value.
</summary><param name="obj">The object to compare this exif value with.</param></member>
        <member name="P:ImageMagick.ExifValue.Value">
            <summary>
The value.
</summary>
        </member>
        <member name="P:ImageMagick.ExifValue.Tag">
            <summary>
The tag of the exif value.
</summary>
        </member>
        <member name="P:ImageMagick.ExifValue.IsArray">
            <summary>
Returns true if the value is an array.
</summary>
        </member>
        <member name="P:ImageMagick.ExifValue.DataType">
            <summary>
The data type of the exif value.
</summary>
        </member>
        <member name="T:ImageMagick.ExifValue">
=============================================================================================
<summary>
A value of the exif profile.
</summary></member>
        <member name="T:ImageMagick.ExifTag">
=============================================================================================
<summary>
All exif tags from the Exif standard 2.2
</summary></member>
        <member name="T:ImageMagick.ExifDataType">
=============================================================================================
<summary>
Specifies exif data types.
</summary></member>
        <member name="P:ImageMagick.EightBimProfile.ClippingPaths">
==========================================================================================
<summary>
Returns the clipping paths this image contains.
</summary></member>
        <member name="M:ImageMagick.EightBimProfile.#ctor(System.IO.Stream)">
==========================================================================================
<summary>
Initializes a new instance of the EightBimProfile class.
</summary><param name="stream">The stream to read the 8bim profile from.</param></member>
        <member name="M:ImageMagick.EightBimProfile.#ctor(System.String)">
==========================================================================================
<summary>
Initializes a new instance of the EightBimProfile class.
</summary><param name="fileName">The fully qualified name of the 8bim profile file, or the relative
8bim profile file name.</param></member>
        <member name="M:ImageMagick.EightBimProfile.#ctor(System.Byte[])">
==========================================================================================
<summary>
Initializes a new instance of the EightBimProfile class.
</summary><param name="data">The byte array to read the 8bim profile from.</param></member>
        <member name="T:ImageMagick.EightBimProfile">
=============================================================================================
<summary>
Class that can be used to access an 8bim profile.
</summary></member>
        <member name="M:ImageMagick.ImageProfile.ToByteArray">
==========================================================================================
<summary>
Converts this instance to a byte array.
</summary></member>
        <member name="P:ImageMagick.ImageProfile.Name">
==========================================================================================
<summary>
The name of the profile.
</summary></member>
        <member name="M:ImageMagick.ImageProfile.#ctor(System.String,System.String)">
==========================================================================================
<summary>
Initializes a new instance of the ImageProfile class.
</summary><param name="name">The name of the profile.</param><param name="fileName">The fully qualified name of the profile file, or the relative profile file name.</param></member>
        <member name="M:ImageMagick.ImageProfile.#ctor(System.String,System.IO.Stream)">
==========================================================================================
<summary>
Initializes a new instance of the ImageProfile class.
</summary><param name="name">The name of the profile.</param><param name="stream">A stream containing the profile.</param></member>
        <member name="M:ImageMagick.ImageProfile.#ctor(System.String,System.Byte[])">
==========================================================================================
<summary>
Initializes a new instance of the ImageProfile class.
</summary><param name="name">The name of the profile.</param><param name="data">A byte array containing the profile.</param></member>
        <member name="T:ImageMagick.ImageProfile">
=============================================================================================
<summary>
Class that contains an image profile.
</summary></member>
        <member name="M:ImageMagick.WritablePixelCollection.Write">
==========================================================================================
<summary>
Writes the pixels to the image.
</summary></member>
        <member name="M:ImageMagick.WritablePixelCollection.Set(System.Int16[])">
==========================================================================================
<summary>
Changes the values of the specified pixels. Make sure to call Write after modifying all the
pixels to ensure the image is updated.
</summary><param name="values">The values of the pixels.</param></member>
        <member name="M:ImageMagick.WritablePixelCollection.Set(System.Single[])">
==========================================================================================
<summary>
Changes the values of the specified pixels. Make sure to call Write after modifying all the
pixels to ensure the image is updated.
</summary><param name="values">The values of the pixels.</param></member>
        <member name="M:ImageMagick.WritablePixelCollection.Set(System.Int32!System.Runtime.CompilerServices.IsLong[])">
==========================================================================================
<summary>
Changes the values of the specified pixels. Make sure to call Write after modifying all the
pixels to ensure the image is updated.
</summary><param name="values">The values of the pixels.</param></member>
        <member name="M:ImageMagick.WritablePixelCollection.Set(System.Int32[])">
==========================================================================================
<summary>
Changes the values of the specified pixels. Make sure to call Write after modifying all the
pixels to ensure the image is updated.
</summary><param name="values">The values of the pixels.</param></member>
        <member name="M:ImageMagick.WritablePixelCollection.Set(System.Double[])">
==========================================================================================
<summary>
Changes the values of the specified pixels. Make sure to call Write after modifying all the
pixels to ensure the image is updated.
</summary><param name="values">The values of the pixels.</param></member>
        <member name="M:ImageMagick.WritablePixelCollection.Set(System.Byte[])">
==========================================================================================
<summary>
Changes the values of the specified pixels. Make sure to call Write after modifying all the
pixels to ensure the image is updated.
</summary><param name="values">The values of the pixels.</param></member>
        <member name="M:ImageMagick.WritablePixelCollection.Set(System.Int32,System.Int32,System.Single[])">
==========================================================================================
<summary>
Changes the value of the specified pixel. Make sure to call Write after modifying all the
pixels to ensure the image is updated.
</summary><param name="x">The X coordinate of the pixel.</param><param name="y">The Y coordinate of the pixel.</param><param name="value">The value the pixel.</param></member>
        <member name="M:ImageMagick.WritablePixelCollection.Set(System.Collections.Generic.IEnumerable`1{ImageMagick.Pixel})">
==========================================================================================
<summary>
Changes the value of the specified pixels. Make sure to call Write after modifying all the
pixels to ensure the image is updated.
</summary><param name="pixels">The pixels to set.</param></member>
        <member name="M:ImageMagick.WritablePixelCollection.Set(ImageMagick.Pixel)">
==========================================================================================
<summary>
Changes the value of the specified pixel. Make sure to call Write after modifying all the
pixels to ensure the image is updated.
</summary><param name="pixel">The pixel to set.</param></member>
        <member name="T:ImageMagick.WritablePixelCollection">
=============================================================================================
<summary>
Class that can be used to access the individual pixels of an image and modify them.
</summary></member>
        <member name="T:ImageMagick.PixelCollection">
=============================================================================================
<summary>
Class that can be used to access the individual pixels of an image.
</summary></member>
        <member name="M:ImageMagick.PixelBaseCollection.GetValues">
==========================================================================================
<summary>
Returns the values of the pixels as an array.
</summary></member>
        <member name="M:ImageMagick.PixelBaseCollection.GetValue(System.Int32,System.Int32)">
==========================================================================================
<summary>
Returns the value of the specified coordinate.
</summary><param name="x">The X coordinate of the pixel.</param><param name="y">The Y coordinate of the pixel.</param></member>
        <member name="M:ImageMagick.PixelBaseCollection.GetPixel(System.Int32,System.Int32)">
==========================================================================================
<summary>
Returns the pixel at the specified coordinate.
</summary><param name="x">The X coordinate of the pixel.</param><param name="y">The Y coordinate of the pixel.</param></member>
        <member name="M:ImageMagick.PixelBaseCollection.GetEnumerator2">
==========================================================================================
<summary>
Returns an enumerator that can iterate through the collection.
</summary></member>
        <member name="M:ImageMagick.PixelBaseCollection.GetEnumerator">
==========================================================================================
<summary>
Returns an enumerator that can iterate through the collection.
</summary></member>
        <member name="P:ImageMagick.PixelBaseCollection.Width">
==========================================================================================
<summary>
Returns the width.
</summary></member>
        <member name="P:ImageMagick.PixelBaseCollection.Height">
==========================================================================================
<summary>
Returns the height.
</summary></member>
        <member name="P:ImageMagick.PixelBaseCollection.Channels">
==========================================================================================
<summary>
Returns the number of channels that the image contains.
</summary></member>
        <member name="P:ImageMagick.PixelBaseCollection.default(System.Int32,System.Int32)">
==========================================================================================
<summary>
Returns the pixel at the specified coordinate.
</summary></member>
        <member name="T:ImageMagick.PixelBaseCollection">
=============================================================================================
<summary>
Base class that can be used to access the individual pixels of an image.
</summary></member>
        <member name="M:ImageMagick.Pixel.SetChannel(System.Int32,System.Single)">
==========================================================================================
<summary>
Set the value of the specified channel.
</summary><param name="channel">The channel to set the value of.</param><param name="value">The value.</param></member>
        <member name="M:ImageMagick.Pixel.GetHashCode">
==========================================================================================
<summary>
Servers as a hash of this type.
</summary></member>
        <member name="M:ImageMagick.Pixel.GetChannel(System.Int32)">
==========================================================================================
<summary>
Returns the value of the specified channel.
</summary><param name="channel">The channel to get the value of.</param></member>
        <member name="M:ImageMagick.Pixel.Equals(ImageMagick.Pixel)">
==========================================================================================
<summary>
Determines whether the specified pixel is equal to the current pixel.
</summary><param name="other">The pixel to compare this color with.</param></member>
        <member name="M:ImageMagick.Pixel.Equals(System.Object)">
==========================================================================================
<summary>
Determines whether the specified object is equal to the current pixel.
</summary><param name="obj">The object to compare this color with.</param></member>
        <member name="P:ImageMagick.Pixel.Y">
==========================================================================================
<summary>
The Y coordinate of the pixel.
</summary></member>
        <member name="P:ImageMagick.Pixel.X">
==========================================================================================
<summary>
The X coordinate of the pixel.
</summary></member>
        <member name="P:ImageMagick.Pixel.Channels">
==========================================================================================
<summary>
Returns the number of channels that the pixel contains.
</summary></member>
        <member name="P:ImageMagick.Pixel.default(System.Int32)">
==========================================================================================
<summary>
Returns the value of the specified channel.
</summary></member>
        <member name="M:ImageMagick.Pixel.#ctor(System.Int32,System.Int32,System.Int32)">
==========================================================================================
<summary>
Creates a new Pixel instance.
</summary><param name="x">The X coordinate of the pixel.</param><param name="y">The Y coordinate of the pixel.</param><param name="channels">The number of channels.</param></member>
        <member name="M:ImageMagick.Pixel.#ctor(System.Int32,System.Int32,System.Single[])">
==========================================================================================
<summary>
Creates a new Pixel instance.
</summary><param name="x">The X coordinate of the pixel.</param><param name="y">The Y coordinate of the pixel.</param><param name="value">The value of the pixel.</param></member>
        <member name="T:ImageMagick.Pixel">
=============================================================================================
<summary>
Class that can be used to access an individual pixel of an image.
</summary></member>
        <member name="M:ImageMagick.ConvolveMatrix.#ctor(System.Int32)">
==========================================================================================
<summary>
Creates a new ConvolveMatrix instance with the specified order.
</summary><param name="order">The order.</param></member>
        <member name="T:ImageMagick.ConvolveMatrix">
=============================================================================================
<summary>
Encapsulates a convolution kernel.
</summary></member>
        <member name="M:ImageMagick.ColorMatrix.#ctor(System.Int32)">
==========================================================================================
<summary>
Creates a new ColorMatrix instance with the specified order of 1 to 6.
</summary><param name="order">The order (1 to 6).</param></member>
        <member name="T:ImageMagick.ColorMatrix">
=============================================================================================
<summary>
Encapsulates a color matrix in the order of 1 to 6 (1x1 through 6x6).
</summary></member>
        <member name="M:ImageMagick.DoubleMatrix.SetValue(System.Int32,System.Int32,System.Double)">
==========================================================================================
<summary>
Set the value at the specified x/y position.
</summary><param name="x">The x position</param><param name="y">The y position</param><param name="value">The value</param></member>
        <member name="M:ImageMagick.DoubleMatrix.GetValue(System.Int32,System.Int32)">
==========================================================================================
<summary>
Returns the value at the specified x/y position.
</summary><param name="x">The x position</param><param name="y">The y position</param></member>
        <member name="P:ImageMagick.DoubleMatrix.Order">
==========================================================================================
<summary>
Returns the order of the matrix.
</summary></member>
        <member name="P:ImageMagick.DoubleMatrix.default(System.Int32,System.Int32)">
==========================================================================================
<summary>
Get or set the value at the specified x/y position.
</summary></member>
        <member name="T:ImageMagick.DoubleMatrix">
=============================================================================================
<summary>
Encapsulates a matrix of doubles.
</summary></member>
        <member name="M:ImageMagick.MagickFormatInfo.ToString">
==========================================================================================
<summary>
Returns a string that represents the current format.
</summary></member>
        <member name="P:ImageMagick.MagickFormatInfo.MimeType">
==========================================================================================
<summary>
The mime type.
</summary></member>
        <member name="P:ImageMagick.MagickFormatInfo.IsWritable">
==========================================================================================
<summary>
Format is writable.
</summary></member>
        <member name="P:ImageMagick.MagickFormatInfo.IsReadable">
==========================================================================================
<summary>
Format is readable.
</summary></member>
        <member name="P:ImageMagick.MagickFormatInfo.IsMultiFrame">
==========================================================================================
<summary>
Format supports multiple frames.
</summary></member>
        <member name="P:ImageMagick.MagickFormatInfo.Format">
==========================================================================================
<summary>
The format.
</summary></member>
        <member name="P:ImageMagick.MagickFormatInfo.Description">
==========================================================================================
<summary>
The description of the format.
</summary></member>
        <member name="T:ImageMagick.MagickFormatInfo">
=============================================================================================
<summary>
Class that contains information about an image format.
</summary></member>
        <member name="P:ImageMagick.MagickErrorInfo.NormalizedMeanError">
==========================================================================================
<summary>
The normalized mean error per pixel computed when an image is color reduced.
</summary></member>
        <member name="P:ImageMagick.MagickErrorInfo.NormalizedMaximumError">
==========================================================================================
<summary>
The normalized maximum error per pixel computed when an image is color reduced.
</summary></member>
        <member name="P:ImageMagick.MagickErrorInfo.MeanErrorPerPixel">
==========================================================================================
<summary>
The mean error per pixel computed when an image is color reduced.
</summary></member>
        <member name="T:ImageMagick.MagickErrorInfo">
=============================================================================================
<summary>
Encapsulates the error information.
</summary></member>
        <member name="T:ImageMagick.MagickReader">
=============================================================================================
<summary>
Class that can be used to read images.
</summary></member>
        <member name="M:ImageMagick.MagickReadSettings.SetDefine(ImageMagick.MagickFormat,System.String,System.String)">
==========================================================================================
<summary>
Sets a format-specific option.
</summary><param name="format">The format to set the option for.</param><param name="name">The name of the option.</param><param name="value">The value of the option.</param></member>
        <member name="P:ImageMagick.MagickReadSettings.Width">
==========================================================================================
<summary>
The width.
</summary></member>
        <member name="P:ImageMagick.MagickReadSettings.Height">
==========================================================================================
<summary>
The height.
</summary></member>
        <member name="P:ImageMagick.MagickReadSettings.PixelStorage">
==========================================================================================
<summary>
The settings for pixel storage.
</summary></member>
        <member name="P:ImageMagick.MagickReadSettings.FrameCount">
==========================================================================================
<summary>
The number of images to read from a multi layer/frame image.
</summary></member>
        <member name="P:ImageMagick.MagickReadSettings.FrameIndex">
==========================================================================================
<summary>
The index of the image to read from a multi layer/frame image.
</summary></member>
        <member name="P:ImageMagick.MagickReadSettings.Format">
==========================================================================================
<summary>
The format of the image.
</summary></member>
        <member name="P:ImageMagick.MagickReadSettings.Density">
==========================================================================================
<summary>
Vertical and horizontal resolution in pixels.
</summary></member>
        <member name="P:ImageMagick.MagickReadSettings.ColorSpace">
==========================================================================================
<summary>
Color space.
</summary></member>
        <member name="M:ImageMagick.MagickReadSettings.#ctor">
==========================================================================================
<summary>
Initializes a new instance of the MagickReadSettings class.
</summary></member>
        <member name="T:ImageMagick.MagickReadSettings">
=============================================================================================
<summary>
Class that contains setting for when an image is being read.
</summary></member>
        <member name="P:ImageMagick.PixelStorageSettings.StorageType">
==========================================================================================
<summary>
The pixel storage type.
</summary></member>
        <member name="P:ImageMagick.PixelStorageSettings.Mapping">
==========================================================================================
<summary>
The mapping of the pixels (e.g. RGB/RGBA/ARGB).
</summary></member>
        <member name="M:ImageMagick.PixelStorageSettings.#ctor(ImageMagick.StorageType,System.String)">
==========================================================================================
<summary>
Initializes a new instance of the PixelStorageSettings class.
</summary><param name="type">The pixel storage type</param><param name="mapping">The mapping of the pixels (e.g. RGB/RGBA/ARGB).</param></member>
        <member name="M:ImageMagick.PixelStorageSettings.#ctor">
==========================================================================================
<summary>
Initializes a new instance of the PixelStorageSettings class.
</summary></member>
        <member name="T:ImageMagick.PixelStorageSettings">
=============================================================================================
<summary>
Class that contains setting for pixel storage.
</summary></member>
        <member name="M:ImageMagick.MagickGeometry.GetHashCode">
==========================================================================================
<summary>
Servers as a hash of this type.
</summary></member>
        <member name="M:ImageMagick.MagickGeometry.Equals(ImageMagick.MagickGeometry)">
==========================================================================================
<summary>
Determines whether the specified geometry is equal to the current geometry.
</summary><param name="other">The geometry to compare this geometry with.</param></member>
        <member name="M:ImageMagick.MagickGeometry.Equals(System.Object)">
==========================================================================================
<summary>
Determines whether the specified object is equal to the current geometry.
</summary><param name="obj">The object to compare this geometry with.</param></member>
        <member name="M:ImageMagick.MagickGeometry.CompareTo(ImageMagick.MagickGeometry)">
==========================================================================================
<summary>
Compares the current instance with another object of the same type.
</summary><param name="other">The object to compare this geometry with.</param></member>
        <member name="P:ImageMagick.MagickGeometry.Y">
==========================================================================================
<summary>
Y offset from origin
</summary></member>
        <member name="P:ImageMagick.MagickGeometry.X">
==========================================================================================
<summary>
X offset from origin
</summary></member>
        <member name="P:ImageMagick.MagickGeometry.Width">
==========================================================================================
<summary>
The width of the geometry.
</summary></member>
        <member name="P:ImageMagick.MagickGeometry.LimitPixels">
==========================================================================================
<summary>
Resize using a pixel area count limit (@).
</summary></member>
        <member name="P:ImageMagick.MagickGeometry.Less">
==========================================================================================
<summary>
Resize if image is less than size (&lt;)
</summary></member>
        <member name="P:ImageMagick.MagickGeometry.IsPercentage">
==========================================================================================
<summary>
True if width and height are expressed as percentages.
</summary></member>
        <member name="P:ImageMagick.MagickGeometry.IgnoreAspectRatio">
==========================================================================================
<summary>
Resize without preserving aspect ratio (!)
</summary></member>
        <member name="P:ImageMagick.MagickGeometry.Height">
==========================================================================================
<summary>
The height of the geometry.
</summary>
==========================================================================================
</member>
        <member name="P:ImageMagick.MagickGeometry.Greater">
==========================================================================================
<summary>
Resize if image is greater than size (&gt;)
</summary></member>
        <member name="P:ImageMagick.MagickGeometry.FillArea">
==========================================================================================
<summary>
Resize the image based on the smallest fitting dimension (^).
</summary></member>
        <member name="M:ImageMagick.MagickGeometry.#ctor(System.String)">
==========================================================================================
<summary>
Initializes a new instance of the MagickGeometry class using the specified geometry.
</summary><param name="value">Geometry specifications in the form: &lt;width&gt;x&lt;height&gt;
{+-}&lt;xoffset&gt;{+-}&lt;yoffset&gt; (where width, height, xoffset, and yoffset are numbers)</param></member>
        <member name="M:ImageMagick.MagickGeometry.#ctor(System.Drawing.Rectangle)">
==========================================================================================
<summary>
Initializes a new instance of the MagickGeometry class using the specified rectangle.
</summary><param name="rectangle">The rectangle to use.</param></member>
        <member name="M:ImageMagick.MagickGeometry.#ctor(System.Int32,System.Int32,ImageMagick.Percentage,ImageMagick.Percentage)">
==========================================================================================
<summary>
Initializes a new instance of the MagickGeometry class using the specified offsets, width
and height.
</summary><param name="x">The X offset from origin.</param><param name="y">The Y offset from origin.</param><param name="percentageWidth">The percentage of the width.</param><param name="percentageHeight">The percentage of the  height.</param></member>
        <member name="M:ImageMagick.MagickGeometry.#ctor(System.Int32,System.Int32,System.Int32,System.Int32)">
==========================================================================================
<summary>
Initializes a new instance of the MagickGeometry class using the specified offsets, width
and height.
</summary><param name="x">The X offset from origin.</param><param name="y">The Y offset from origin.</param><param name="width">The width.</param><param name="height">The height.</param></member>
        <member name="M:ImageMagick.MagickGeometry.#ctor(ImageMagick.Percentage,ImageMagick.Percentage)">
==========================================================================================
<summary>
Initializes a new instance of the MagickGeometry class using the specified width and
height.
</summary><param name="percentageWidth">The percentage of the width.</param><param name="percentageHeight">The percentage of the  height.</param></member>
        <member name="M:ImageMagick.MagickGeometry.#ctor(System.Int32,System.Int32)">
==========================================================================================
<summary>
Initializes a new instance of the MagickGeometry class using the specified width and
height.
</summary><param name="width">The width.</param><param name="height">The height.</param></member>
        <member name="T:ImageMagick.MagickGeometry">
=============================================================================================
<summary>
Encapsulation of the ImageMagick geometry object.
</summary></member>
        <member name="T:ImageMagick.MagickTypeWarningException">
=============================================================================================
<summary>
Encapsulation of the ImageMagick WarningType exception object.
</summary></member>
        <member name="T:ImageMagick.MagickStreamWarningException">
=============================================================================================
<summary>
Encapsulation of the ImageMagick WarningStream exception object.
</summary></member>
        <member name="T:ImageMagick.MagickResourceLimitWarningException">
=============================================================================================
<summary>
Encapsulation of the ImageMagick WarningResourceLimit exception object.
</summary></member>
        <member name="T:ImageMagick.MagickRegistryWarningException">
=============================================================================================
<summary>
Encapsulation of the ImageMagick WarningRegistry exception object.
</summary></member>
        <member name="T:ImageMagick.MagickOptionWarningException">
=============================================================================================
<summary>
Encapsulation of the ImageMagick WarningOption exception object.
</summary></member>
        <member name="T:ImageMagick.MagickModuleWarningException">
=============================================================================================
<summary>
Encapsulation of the ImageMagick WarningModule exception object.
</summary></member>
        <member name="T:ImageMagick.MagickMissingDelegateWarningException">
=============================================================================================
<summary>
Encapsulation of the ImageMagick WarningMissingDelegate exception object.
</summary></member>
        <member name="T:ImageMagick.MagickImageWarningException">
=============================================================================================
<summary>
Encapsulation of the ImageMagick WarningImage exception object.
</summary></member>
        <member name="T:ImageMagick.MagickFileOpenWarningException">
=============================================================================================
<summary>
Encapsulation of the ImageMagick WarningFileOpen exception object.
</summary></member>
        <member name="T:ImageMagick.MagickDrawWarningException">
=============================================================================================
<summary>
Encapsulation of the ImageMagick WarningDraw exception object.
</summary></member>
        <member name="T:ImageMagick.MagickDelegateWarningException">
=============================================================================================
<summary>
Encapsulation of the ImageMagick WarningDelegate exception object.
</summary></member>
        <member name="T:ImageMagick.MagickCorruptImageWarningException">
=============================================================================================
<summary>
Encapsulation of the ImageMagick WarningCorruptImage exception object.
</summary></member>
        <member name="T:ImageMagick.MagickUndefinedWarningException">
=============================================================================================
<summary>
Encapsulation of the ImageMagick WarningUndefined exception object.
</summary></member>
        <member name="T:ImageMagick.MagickConfigureWarningException">
=============================================================================================
<summary>
Encapsulation of the ImageMagick WarningConfigure exception object.
</summary></member>
        <member name="T:ImageMagick.MagickCoderWarningException">
=============================================================================================
<summary>
Encapsulation of the ImageMagick WarningCoder exception object.
</summary></member>
        <member name="T:ImageMagick.MagickCacheWarningException">
=============================================================================================
<summary>
Encapsulation of the ImageMagick WarningCache exception object.
</summary></member>
        <member name="T:ImageMagick.MagickBlobWarningException">
=============================================================================================
<summary>
Encapsulation of the ImageMagick WarningBlob exception object.
</summary></member>
        <member name="T:ImageMagick.MagickWarningException">
=============================================================================================
<summary>
Encapsulation of the ImageMagick Warning exception object.
</summary></member>
        <member name="T:ImageMagick.MagickException">
=============================================================================================
<summary>
Encapsulation of the ImageMagick exception object.
</summary></member>
        <member name="T:ImageMagick.VirtualPixelMethod">
=============================================================================================
<summary>
Specifies the virtual pixel methods.
</summary></member>
        <member name="T:ImageMagick.SparseColorMethod">
=============================================================================================
<summary>
The sparse color methods.
</summary></member>
        <member name="T:ImageMagick.RenderingIntent">
=============================================================================================
<summary>
Specifies the type of rendering intent.
</summary></member>
        <member name="T:ImageMagick.Resolution">
=============================================================================================
<summary>
Units of image resolution.
</summary></member>
        <member name="T:ImageMagick.PixelInterpolateMethod">
=============================================================================================
<summary>
Pixel color interpolate methods.
</summary></member>
        <member name="T:ImageMagick.PaintMethod">
=============================================================================================
<summary>
Specifies the paint method.
</summary></member>
        <member name="T:ImageMagick.OrientationType">
=============================================================================================
<summary>
Specified the photo orientation of the image.
</summary></member>
        <member name="T:ImageMagick.NoiseType">
=============================================================================================
<summary>
Specified the type of noise that should be added to the image.
</summary></member>
        <member name="T:ImageMagick.Metric">
=============================================================================================
<summary>
Specifies the metric types.
</summary></member>
        <member name="T:ImageMagick.MagickFormat">
=============================================================================================
<summary>
Specifies the different file formats that are supported by ImageMagick.
</summary></member>
        <member name="T:ImageMagick.LineJoin">
=============================================================================================
<summary>
Specifies line join.
</summary></member>
        <member name="T:ImageMagick.LineCap">
=============================================================================================
<summary>
Specifies line cap.
</summary></member>
        <member name="T:ImageMagick.Interlace">
=============================================================================================
<summary>
Specifies the interlace types.
</summary></member>
        <member name="T:ImageMagick.GifDisposeMethod">
=============================================================================================
<summary>
Specifies gif disposal methods.
</summary></member>
        <member name="T:ImageMagick.FilterType">
=============================================================================================
<summary>
Specifies the filter types.
</summary></member>
        <member name="T:ImageMagick.FillRule">
=============================================================================================
<summary>
Specifies fill rule.
</summary></member>
        <member name="T:ImageMagick.EvaluateOperator">
=============================================================================================
<summary>
Specifies the evaluate operator.
</summary></member>
        <member name="T:ImageMagick.Endian">
=============================================================================================
<summary>
Specifies endian.
</summary></member>
        <member name="T:ImageMagick.DistortMethod">
=============================================================================================
<summary>
Specifies distortion methods.
</summary></member>
        <member name="T:ImageMagick.CompressionMethod">
=============================================================================================
<summary>
Specifies compression methods.
</summary></member>
        <member name="T:ImageMagick.CompositeOperator">
=============================================================================================
<summary>
Specifies the composite operators.
</summary></member>
        <member name="T:ImageMagick.ColorType">
=============================================================================================
<summary>
Specifies the color type of the image
</summary></member>
        <member name="T:ImageMagick.ColorSpace">
=============================================================================================
<summary>
Specifies a kind of color space.
</summary></member>
        <member name="T:ImageMagick.ClassType">
=============================================================================================
<summary>
Specifies the image class type.
</summary></member>
        <member name="T:ImageMagick.Channels">
=============================================================================================
<summary>
Specifies channel types.
</summary></member>
        <member name="T:ImageMagick.AlphaOption">
=============================================================================================
<summary>
Specifies alpha options.
</summary></member>
        <member name="P:ImageMagick.DrawableAffine.TranslateY">
==========================================================================================
<summary>
The Y coordinate of the translation element.
</summary></member>
        <member name="P:ImageMagick.DrawableAffine.TranslateX">
==========================================================================================
<summary>
The X coordinate of the translation element.
</summary></member>
        <member name="P:ImageMagick.DrawableAffine.ShearY">
==========================================================================================
<summary>
The Y coordinate shearing element.
</summary></member>
        <member name="P:ImageMagick.DrawableAffine.ShearX">
==========================================================================================
<summary>
The X coordinate shearing element.
</summary></member>
        <member name="P:ImageMagick.DrawableAffine.ScaleY">
==========================================================================================
<summary>
The Y coordinate scaling element.
</summary></member>
        <member name="P:ImageMagick.DrawableAffine.ScaleX">
==========================================================================================
<summary>
The X coordinate scaling element.
</summary></member>
        <member name="M:ImageMagick.DrawableAffine.#ctor(System.Drawing.Drawing2D.Matrix)">
==========================================================================================
<summary>
Creates a new DrawableAffine instance using the specified Matrix.
</summary><param name="matrix">The matrix.</param></member>
        <member name="M:ImageMagick.DrawableAffine.#ctor(System.Double,System.Double,System.Double,System.Double,System.Double,System.Double)">
==========================================================================================
<summary>
Creates a new DrawableAffine instance.
</summary><param name="scaleX">The X coordinate scaling element.</param><param name="scaleY">The Y coordinate scaling element.</param><param name="shearX">The X coordinate shearing element.</param><param name="shearY">The Y coordinate shearing element.</param><param name="translateX">The X coordinate of the translation element.</param><param name="translateY">The Y coordinate of the translation element.</param></member>
        <member name="T:ImageMagick.DrawableAffine">
=============================================================================================
<summary>
Encapsulates a 3-by-3 affine matrix that represents a geometric transform.
</summary></member>
        <member name="M:ImageMagick.MagickColor.ToString">
==========================================================================================
<summary>
Converts the value of this instance to a hexadecimal string.
</summary></member>
        <member name="M:ImageMagick.MagickColor.ToColor">
==========================================================================================
<summary>
Converts the value of this instance to an equivalent Color.
</summary></member>
        <member name="M:ImageMagick.MagickColor.GetHashCode">
==========================================================================================
<summary>
Servers as a hash of this type.
</summary></member>
        <member name="M:ImageMagick.MagickColor.Equals(ImageMagick.MagickColor)">
==========================================================================================
<summary>
Determines whether the specified geometry is equal to the current color.
</summary><param name="other">The color to compare this color with.</param></member>
        <member name="M:ImageMagick.MagickColor.Equals(System.Object)">
==========================================================================================
<summary>
Determines whether the specified object is equal to the current color.
</summary><param name="obj">The object to compare this color with.</param></member>
        <member name="M:ImageMagick.MagickColor.CompareTo(ImageMagick.MagickColor)">
==========================================================================================
<summary>
Compares the current instance with another object of the same type.
</summary><param name="other">The color to compare this color with.</param></member>
        <member name="P:ImageMagick.MagickColor.Transparent">
==========================================================================================
<summary>
Returns a transparent color.
</summary></member>
        <member name="P:ImageMagick.MagickColor.R">
==========================================================================================
<summary>
Red component value of this color.
</summary></member>
        <member name="P:ImageMagick.MagickColor.G">
==========================================================================================
<summary>
Green component value of this color.
</summary></member>
        <member name="P:ImageMagick.MagickColor.B">
==========================================================================================
<summary>
Blue component value of this color.
</summary></member>
        <member name="P:ImageMagick.MagickColor.A">
==========================================================================================
<summary>
Alpha component value of this color.
</summary></member>
        <member name="M:ImageMagick.MagickColor.#ctor(System.String)">
==========================================================================================
<summary>
Initializes a new instance of the MagickColor class using the specified RGBA hex string.
For example: #F00, #F00C, #FF0000, #FF0000CC, #FFFF00000000, #FFFF00000000CCCC
</summary><param name="hexValue">The RGBA hex string.</param></member>
        <member name="M:ImageMagick.MagickColor.#ctor(System.Single,System.Single,System.Single,System.Single)">
==========================================================================================
<summary>
Initializes a new instance of the MagickColor class.
</summary><param name="red">Red component value of this color.</param><param name="green">Green component value of this color.</param><param name="blue">Blue component value of this color.</param><param name="alpha">Alpha component value of this color.</param></member>
        <member name="M:ImageMagick.MagickColor.#ctor(System.Single,System.Single,System.Single)">
==========================================================================================
<summary>
Initializes a new instance of the MagickColor class.
</summary><param name="red">Red component value of this color.</param><param name="green">Green component value of this color.</param><param name="blue">Blue component value of this color.</param></member>
        <member name="M:ImageMagick.MagickColor.#ctor(System.Drawing.Color)">
==========================================================================================
<summary>
Initializes a new instance of the MagickColor class using the specified color.
</summary><param name="color">The color to use.</param></member>
        <member name="M:ImageMagick.MagickColor.#ctor">
==========================================================================================
<summary>
Initializes a new instance of the MagickColor class.
</summary></member>
        <member name="T:ImageMagick.MagickColor">
=============================================================================================
<summary>
Class that represents a color.
</summary></member>
        <member name="M:ImageMagick.DrawablePopClipPath.#ctor">
==========================================================================================
<summary>
Creates a new DrawablePopClipPath instance.
</summary></member>
        <member name="T:ImageMagick.DrawablePopClipPath">
=============================================================================================
<summary>
Encapsulation of the DrawablePopClipPath object.
</summary></member>
        <member name="P:ImageMagick.DrawableGravity.Gravity">
==========================================================================================
<summary>
The gravity.
</summary></member>
        <member name="M:ImageMagick.DrawableGravity.#ctor(ImageMagick.Gravity)">
==========================================================================================
<summary>
Creates a new DrawableGravity instance.
</summary><param name="gravity">The gravity.</param></member>
        <member name="T:ImageMagick.DrawableGravity">
=============================================================================================
<summary>
Encapsulation of the DrawableGravity object.
</summary></member>
        <member name="T:ImageMagick.Gravity">
=============================================================================================
<summary>
Specifies the placement gravity.
</summary></member>
        <member name="P:ImageMagick.DrawableStrokeOpacity.Opacity">
==========================================================================================
<summary>
The opacity.
</summary></member>
        <member name="M:ImageMagick.DrawableStrokeOpacity.#ctor(System.Double)">
==========================================================================================
<summary>
Creates a new DrawableStrokeOpacity instance.
</summary><param name="opacity">The opacity.</param></member>
        <member name="T:ImageMagick.DrawableStrokeOpacity">
=============================================================================================
<summary>
Encapsulation of the DrawableStrokeOpacity object.
</summary></member>
        <member name="T:ImageMagick.Drawable">
=============================================================================================
<summary>
Base class for Drawable objects.
</summary></member>
        <member name="M:ImageMagick.PathSmoothCurvetoRel.#ctor(System.Collections.Generic.IEnumerable`1{ImageMagick.Coordinate})">
==========================================================================================
<summary>
Initializes a new instance of the PathSmoothCurvetoRel class.
</summary><param name="coordinates">The coordinates to use.</param></member>
        <member name="M:ImageMagick.PathSmoothCurvetoRel.#ctor(ImageMagick.Coordinate)">
==========================================================================================
<summary>
Initializes a new instance of the PathSmoothCurvetoRel class.
</summary><param name="coordinate">The coordinate to use.</param></member>
        <member name="T:ImageMagick.PathSmoothCurvetoRel">
=============================================================================================
<summary>
Encapsulation of the PathSmoothCurvetoRel object.
</summary></member>
        <member name="M:ImageMagick.Percentage.ToString">
==========================================================================================
<summary>
Returns a string that represents the current percentage.
</summary></member>
        <member name="M:ImageMagick.Percentage.ToInt32">
==========================================================================================
<summary>
Converts the value to an integer.
</summary></member>
        <member name="M:ImageMagick.Percentage.ToDouble">
==========================================================================================
<summary>
Converts the value to a double.
</summary></member>
        <member name="M:ImageMagick.Percentage.GetHashCode">
==========================================================================================
<summary>
Servers as a hash of this type.
</summary></member>
        <member name="M:ImageMagick.Percentage.Equals(ImageMagick.Percentage)">
==========================================================================================
<summary>
Determines whether the specified percentage is equal to the current percentage.
</summary><param name="other">The percentage to compare this percentage with.</param></member>
        <member name="M:ImageMagick.Percentage.Equals(System.Object)">
==========================================================================================
<summary>
Determines whether the specified object is equal to the current percentage.
</summary><param name="obj">The object to compare this percentage with.</param></member>
        <member name="M:ImageMagick.Percentage.#ctor(System.Int32)">
==========================================================================================
<summary>
Initializes a new instance of the Percentage class using the specified value.
(0% = 0, 100% = 100)
</summary><param name="value">The value (0% = 0, 100% = 100)</param></member>
        <member name="M:ImageMagick.Percentage.#ctor(System.Double)">
==========================================================================================
<summary>
Initializes a new instance of the Percentage class using the specified value.
(0% = 0.0, 100% = 1.0)
</summary><param name="value">The value (0% = 0.0, 100% = 1.0)</param></member>
        <member name="T:ImageMagick.Percentage">
=============================================================================================
<summary>
Represents a percentage value.
</summary></member>
        <member name="T:ImageMagick.StorageType">
=============================================================================================
<summary>
Specifies the pixel storage types.
</summary></member>
        <member name="M:ImageMagick.PathArcRel.#ctor(System.Collections.Generic.IEnumerable`1{ImageMagick.PathArc})">
==========================================================================================
<summary>
Initializes a new instance of the PathArcRel class.
</summary><param name="pathArcs">The coordinates to use.</param></member>
        <member name="M:ImageMagick.PathArcRel.#ctor(ImageMagick.PathArc)">
==========================================================================================
<summary>
Initializes a new instance of the PathArcRel class.
</summary><param name="pathArc">The coordinate to use.</param></member>
        <member name="T:ImageMagick.PathArcRel">
=============================================================================================
<summary>
Encapsulation of the PathArcRel object.
</summary></member>
        <member name="M:ImageMagick.Coordinate.GetHashCode">
==========================================================================================
<summary>
Servers as a hash of this type.
</summary></member>
        <member name="M:ImageMagick.Coordinate.Equals(ImageMagick.Coordinate)">
==========================================================================================
<summary>
Determines whether the specified coordinate is equal to the current coordinate.
</summary><param name="coordinate">The coordinate to compare this coordinate with.</param></member>
        <member name="M:ImageMagick.Coordinate.Equals(System.Object)">
==========================================================================================
<summary>
Determines whether the specified object is equal to the current coordinate.
</summary><param name="obj">The object to compare this coordinate with.</param></member>
        <member name="P:ImageMagick.Coordinate.Y">
==========================================================================================
<summary>
The Y position of the coordinate.
</summary></member>
        <member name="P:ImageMagick.Coordinate.X">
==========================================================================================
<summary>
The X position of the coordinate.
</summary></member>
        <member name="M:ImageMagick.Coordinate.#ctor(System.Double,System.Double)">
==========================================================================================
<summary>
Creates a new Coordinate instance.
</summary><param name="x">The X position of the coordinate.</param><param name="y">The Y position of the coordinate.</param></member>
        <member name="T:ImageMagick.Coordinate">
=============================================================================================
<summary>
Encapsulation of the Coordinate object.
</summary></member>
        <member name="T:ImageMagick.PathBase">
=============================================================================================
<summary>
Base class for Path objects.
</summary></member>
        <member name="P:ImageMagick.PathArc.Y">
==========================================================================================
<summary>
The Y offset from origin.
</summary></member>
        <member name="P:ImageMagick.PathArc.X">
==========================================================================================
<summary>
The X offset from origin.
</summary></member>
        <member name="P:ImageMagick.PathArc.UseSweep">
==========================================================================================
<summary>
If true then draw the arc matching a clock-wise rotation.
</summary></member>
        <member name="P:ImageMagick.PathArc.UseLargeArc">
==========================================================================================
<summary>
If true then draw the larger of the available arcs.
</summary></member>
        <member name="P:ImageMagick.PathArc.RotationX">
==========================================================================================
<summary>
Indicates how the ellipse as a whole is rotated relative to the current coordinate system.
</summary></member>
        <member name="P:ImageMagick.PathArc.RadiusY">
==========================================================================================
<summary>
The Y radius.
</summary></member>
        <member name="P:ImageMagick.PathArc.RadiusX">
==========================================================================================
<summary>
The X radius.
</summary></member>
        <member name="M:ImageMagick.PathArc.#ctor(System.Double,System.Double,System.Double,System.Double,System.Double,System.Boolean,System.Boolean)">
==========================================================================================
<summary>
Initializes a new instance of the PathArc class.
</summary><param name="x">The X offset from origin.</param><param name="y">The Y offset from origin.</param><param name="radiusX">The X radius.</param><param name="radiusY">The Y radius.</param><param name="rotationX">Indicates how the ellipse as a whole is rotated relative to the
current coordinate system.</param><param name="useLargeArc">If true then draw the larger of the available arcs.</param><param name="useSweep">If true then draw the arc matching a clock-wise rotation.</param></member>
        <member name="M:ImageMagick.PathArc.#ctor">
==========================================================================================
<summary>
Initializes a new instance of the PathArc class.
</summary></member>
        <member name="T:ImageMagick.PathArc">
=============================================================================================
<summary>
Encapsulation of the PathArc object.
</summary></member>
    </members>
</doc>